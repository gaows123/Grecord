{\rtf1\ansi\ansicpg936\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset134\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset134\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset134\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment navigation-noetic }navigation-noetic}
{\comment \'D6\'C6\'D7\'F7\'D5\'DF doxygen1.9.3.}
{\creatim \yr2022\mo2\dy26\hr11\min31\sec45}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt navigation-noetic}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
\'B0\'E6\'B1\'BE \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt 2022\'C4\'EA \'B6\'FE\'D4\'C2 26\'C8\'D5 \'D0\'C7\'C6\'DA\'C1\'F9 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'C4\'BF\'C2\'BC\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
navigation-noetic\par \pard\plain 
{\tc \v navigation-noetic}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D7\'F7\'D5\'DF\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Ioan Sucan\par
}}{\b odom_localization}  Takes in ground truth pose information for a robot base (e.g., from a simulator or motion capture system) and republishes it as if a localization system were in use.\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
{\bkmkstart AAAAAAAEBJ}
{\bkmkend AAAAAAAEBJ}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Usage
\par}
{\tc\tcl2 \v Usage}
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid $ fake_localization\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\par}
{\bkmkstart AAAAAAAEBK}
{\bkmkend AAAAAAAEBK}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ROS topics
\par}
{\tc\tcl2 \v ROS topics}
Subscribes to (name/type):{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b "base_pose_ground_truth"}  nav_msgs/Odometry : robot's odometric pose. Only the position information is used (velocity is ignored).\par}
\par
Publishes to (name / type):{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b "amcl_pose"}  geometry_msgs/PoseWithCovarianceStamped : \'BC\'F2\'B5\'A5\'D7\'AA\'B7\'A2\'B7\'C2\'D5\'E6\'C6\'F7\'C0\'B4\'B5\'C4\'CE\'BB\'D7\'CB robot's estimated pose in the map, with covariance\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b "particlecloud"}  geometry_msgs/PoseArray : \'D4\'DArviz\'BA\'CDnav_view\'D6\'D0\'CA\'B9\'D3\'C3\'A3\'AC\'C0\'B4\'BF\'C9\'CA\'D3\'BB\'AF\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D7\'CB\'B5\'C4\'C1\'A3\'D7\'D3\'D4\'C6 fake set of poses being maintained by the filter (one paricle only).\par}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\par}
{\bkmkstart AAAAAAAEBL}
{\bkmkend AAAAAAAEBL}
{{\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ROS parameters
\par}
{\tc\tcl2 \v ROS parameters}
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
"~odom_frame_id" (string) : The odometry frame to be used, default: "odom" \par}
\par
\par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
navigation\'D1\'A7\'CF\'B0{\tc \v navigation\'D1\'A7\'CF\'B0}\par \pard\plain 
{\bkmkstart AAAAAAAEBH}
{\bkmkend AAAAAAAEBH}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
ROS Navigation Stack{\tc \v ROS Navigation Stack}\par \pard\plain 
{\bkmkstart AAAAAAAEBI}
{\bkmkend AAAAAAAEBI}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D navigation stack that takes in information from odometry, sensor streams, and a goal pose and outputs safe velocity commands that are sent to a mobile base.\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
AMD64 Debian Job Status: {\f2 }\par}
\par
Related stacks:\par
{
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 http://github.com/ros-planning/navigation_msgs} (new in Jade+)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 http://github.com/ros-planning/navigation_tutorials}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 http://github.com/ros-planning/navigation_experimental}\par}
\par
For discussion, please check out the {\f2 https://groups.google.com/group/ros-sig-navigation} mailing list. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'CB\'F7\'D2\'FD\par \pard\plain 
{\tc \v \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'CB\'F7\'D2\'FD}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'C1\'D0\'B1\'ED\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'D5\'E2\'C0\'EF\'C1\'D0\'B3\'F6\'C1\'CB\'CB\'F9\'D3\'D0\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B6\'A8\'D2\'E5,\'B8\'BD\'B4\'F8\'BC\'F2\'D2\'AA\'CB\'B5\'C3\'F7:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b amcl} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b basic_localization} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b carrot_planner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b clear_costmap_recovery} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b consumer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dwa_local_planner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b local_planner_limits} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b map_server} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b move_base} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b move_slow_and_clear} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nav_core} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b navfn} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b rotate_recovery} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b set_pose} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b setup} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b static_odom_broadcaster} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b tmap2} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CB\'F7\'D2\'FD\par \pard\plain 
{\tc \v \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CB\'F7\'D2\'FD}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'C0\'E0\'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'C1\'D0\'B1\'ED\'B0\'B4\'D7\'D6\'B5\'E4\'CB\'B3\'D0\'F2\'B4\'D6\'C2\'D4\'B5\'C4\'C5\'C5\'D0\'F2: }
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
_pf_sample_set_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
_pf_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
amcl_hyp_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
AmclNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
amcl::AMCLSensor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
amcl::AMCLLaser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
amcl::AMCLOdom\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
amcl::AMCLSensorData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMG \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
amcl::AMCLLaserData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
amcl::AMCLOdomData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
nav_core::BaseGlobalPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPL \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
carrot_planner::CarrotPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::GlobalPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGK \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
global_planner::PlannerWithCostmap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
navfn::NavfnROS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
navfn::NavfnWithCostmap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
nav_core::BaseLocalPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
base_local_planner::TrajectoryPlannerROS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dwa_local_planner::DWAPlannerROS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CachedDistanceMap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Cell\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CellData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::CellData\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
voxel_grid::VoxelGrid::ClearVoxel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
voxel_grid::VoxelGrid::ClearVoxelInMap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::Costmap2D\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
base_local_planner::WavefrontMapAccessor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::CostmapLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
costmap_2d::ObstacleLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
costmap_2d::VoxelLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
costmap_2d::StaticLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
costmap_2d::Costmap2DPublisher\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::Costmap2DROS\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
dwa_local_planner::DWAPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::Expander\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
global_planner::AStarExpansion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::DijkstraExpansion\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
FakeOdomNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Fl_Double_Window
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
navfn::NavWin\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
base_local_planner::FootprintHelper\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::greater1\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
voxel_grid::VoxelGrid::GridOffset\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::Index\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::LatchedStopRotateController\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::Layer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
costmap_2d::CostmapLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::InflationLayer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
costmap_2d::LayeredCostmap\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::LineIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::LocalPlannerLimits\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::LocalPlannerUtil\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
map_cell_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
map_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::MapCell\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MapGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::MapGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::MapGridVisualizer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::MapLocation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MapServer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::Costmap2D::MarkCell\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
voxel_grid::VoxelGrid::MarkVoxel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
move_base::MoveBase\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
navfn::NavFn\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::Observation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::ObservationBuffer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::OdometryHelperRos\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::OrientationFilter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_cluster_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_kdtree_node\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_kdtree_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_matrix_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_pdf_gaussian_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_sample_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
pf_vector_t\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::PlanarLaserScan\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
PlannerCore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::Costmap2D::PolygonOutlineCells\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
navfn::PotarrPoint\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::PotentialCalculator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
global_planner::QuadraticCalculator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
nav_core::RecoveryBehavior\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
clear_costmap_recovery::ClearCostmapRecovery\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
move_slow_and_clear::MoveSlowAndClear\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
rotate_recovery::RotateRecovery\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
rospy.SubscribeListener
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
set_pose.PoseSetter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
testing::Test
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MapClientTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::FootprintHelperTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::TrajectoryGeneratorTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::TrajectoryPlannerTest\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
costmap_2d::CostmapTester\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
unittest.TestCase
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
basic_localization.TestBasicLocalization\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
consumer.TestConsumer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
global_planner::Traceback\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKE \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
global_planner::GradientPath\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
global_planner::GridPath\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
base_local_planner::Trajectory\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::TrajectoryCostFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
base_local_planner::MapGridCostFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::ObstacleCostFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::OscillationCostFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::PreferForwardCostFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::TwirlingCostFunction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
base_local_planner::TrajectoryPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::TrajectorySampleGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHA \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
base_local_planner::SimpleTrajectoryGenerator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
base_local_planner::TrajectorySearch\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHD \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
base_local_planner::SimpleScoredSamplingPlanner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
base_local_planner::VelocityIterator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
voxel_grid::VoxelGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
VoxelGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::WorldModel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
base_local_planner::CostmapModel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::PointGrid\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
base_local_planner::VoxelGridModel\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
XmlRpc::XmlRpcValue
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
SuperValue\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
voxel_grid::VoxelGrid::ZOffset\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C0\'E0\'CB\'F7\'D2\'FD\par \pard\plain 
{\tc \v \'C0\'E0\'CB\'F7\'D2\'FD}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'C0\'E0\'C1\'D0\'B1\'ED\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'D5\'E2\'C0\'EF\'C1\'D0\'B3\'F6\'C1\'CB\'CB\'F9\'D3\'D0\'C0\'E0\'A1\'A2\'BD\'E1\'B9\'B9\'A1\'A2\'C1\'AA\'BA\'CF\'D2\'D4\'BC\'B0\'BD\'D3\'BF\'DA\'B6\'A8\'D2\'E5\'B5\'C8\'A3\'AC\'B2\'A2\'B8\'BD\'B4\'F8\'BC\'F2\'D2\'AA\'CB\'B5\'C3\'F7:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b _pf_sample_set_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _pf_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl_hyp_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl::AMCLLaser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl::AMCLLaserData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b AmclNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl::AMCLOdom} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl::AMCLOdomData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl::AMCLSensor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b amcl::AMCLSensorData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::AStarExpansion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nav_core::BaseGlobalPlanner} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA. navigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nav_core::BaseLocalPlanner} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CachedDistanceMap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b carrot_planner::CarrotPlanner} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple global planner that will compute a valid goal point for the local planner by walking back along the vector between the robot and the user-specified goal point until a valid cost is found })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Cell} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CellData} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::CellData} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for cell information used during obstacle inflation })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b clear_costmap_recovery::ClearCostmapRecovery} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A recovery behavior that reverts the navigation stack's costmaps to the static map outside of a user-specified region })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid::VoxelGrid::ClearVoxel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid::VoxelGrid::ClearVoxelInMap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Costmap2D} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D costmap provides a mapping between points in the world and their associated "costs" })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Costmap2DPublisher} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tool to periodically publish visualization data from a {\b Costmap2D} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Costmap2DROS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for a 2D Costmap. Handles subscribing to topics that provide observations about obstacles in either the form of PointCloud or LaserScan messages })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::CostmapLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACRX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::CostmapModel} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using the costmap })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::CostmapTester} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::DijkstraExpansion} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dwa_local_planner::DWAPlanner} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6DWA\'CB\'E3\'B7\'A8\'B5\'C4\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'C0\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b dwa_local_planner::DWAPlannerROS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWAPlannerROS\'CA\'C7\'B7\'E2\'D7\'B0\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'C1\'CB\'D3\'EBmove_base\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'AC\'D7\'F7\'CE\'AAmove_base\'B5\'C4\'B2\'E5\'BC\'FE })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADDE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::Expander} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADFS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b FakeOdomNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::FootprintHelper} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::FootprintHelperTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::GlobalPlanner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADGK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::GradientPath} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::greater1} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid::VoxelGrid::GridOffset} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADXZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::GridPath} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::Index} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::InflationLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::LatchedStopRotateController} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Layer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::LayeredCostmap} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates different layer plugins and aggregates them into one score })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACVV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::LineIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::LocalPlannerLimits} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::LocalPlannerUtil} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper class implementing infrastructure code many local planner implementations may need })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b map_cell_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b map_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::MapCell} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores path distance and goal distance information used for scoring trajectories })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MapClientTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MapGenerator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map generation node })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::MapGrid} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A grid of {\b MapCell} cells that is used to propagate path and goal distances for the trajectory controller })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::MapGridCostFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::MapGridVisualizer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::MapLocation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MapServer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Costmap2D::MarkCell} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid::VoxelGrid::MarkVoxel} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b move_base::MoveBase} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that uses the actionlib::ActionServer interface that moves the robot base to a goal location })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b move_slow_and_clear::MoveSlowAndClear} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADOG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b navfn::NavFn} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navigation function class. Holds buffers for costmap, navfn map.\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'BA\'CDNavFn\'B5\'D8\'CD\'BC\'CA\'C7\'BB\'F9\'D3\'DA\'CF\'F1\'CB\'D8\'B5\'C4\'A3\'AC\'CB\'FB\'C3\'C7\'B5\'C4\'D4\'AD\'B5\'E3\'D4\'DA\'D7\'F3\'C9\'CF\'B7\'BD\'A3\'ACx \'D6\'E1\'CF\'F2\'D3\'D2\'A3\'ACy \'D6\'E1\'CF\'F2\'CF\'C2 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b navfn::NavfnROS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navfn \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4ROS\'B7\'E2\'D7\'B0\'C0\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b navfn::NavfnWithCostmap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b navfn::NavWin} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADTN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Observation} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an observation in terms of a point cloud and the origin of the source })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::ObservationBuffer} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Takes in point clouds from sensors, transforms them to the desired frame, and stores them })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::ObstacleCostFunction} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses costmap 2d to assign negative costs if robot footprint is in obstacle on any point of the trajectory })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::ObstacleLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACYT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::OdometryHelperRos} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::OrientationFilter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::OscillationCostFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_cluster_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_kdtree_node} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_kdtree_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_matrix_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_pdf_gaussian_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_sample_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b pf_vector_t} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::PlanarLaserScan} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores a scan from a planar laser that can be used to clear freespace })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABWT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b PlannerCore} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F8\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'CC\'E1\'B9\'A9\'C1\'CB\'B7\'E2\'D7\'B0\'C0\'E0 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::PlannerWithCostmap} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::PointGrid} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6WorldModel\'BD\'D3\'BF\'DA\'B5\'C4\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4\'B5\'C4\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2\'A3\'AC \'B8\'C3\'C0\'E0\'B4\'E6\'B4\'A2\'CD\'F8\'B8\'F1\'B5\'C4\'B5\'E3\'B2\'A2\'C7\'D2\'BC\'EC\'B2\'E9\'B6\'E0\'B1\'DF\'D0\'CE\'D6\'D0\'B5\'C4\'B5\'E3\'CA\'C7\'B7\'F1\'C5\'F6\'D7\'B2(\'CD\'A8\'B9\'FD\'B0\'D1\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint\'D3\'B3\'C9\'E4\'B5\'BD\'B8\'F8\'B6\'A8\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'BF\'B4\'D3\'D0\'C3\'BB\'D3\'D0\'BA\'CD\'D5\'CF\'B0\'AD\'CE\'EF\'D6\'D8\'BA\'CF) })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABXA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::Costmap2D::PolygonOutlineCells} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b set_pose.PoseSetter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADVK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b navfn::PotarrPoint} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::PotentialCalculator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::PreferForwardCostFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::QuadraticCalculator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b nav_core::RecoveryBehavior} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'C4\'A3\'BF\'E9\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b rotate_recovery::RotateRecovery} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'BB\'E1\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'B6\'A8\'B5\'E3\'D0\'FD\'D7\'AA\'D2\'BB\'C8\'A6\'A3\'AC\'B3\'A2\'CA\'D4\'C7\'E5\'B3\'FD\'B5\'F7\'D6\'DC\'CE\'A7\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADUS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::SimpleScoredSamplingPlanner} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B8\'F8\'B6\'A8\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'BA\'CD\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD\'BC\'C6\'CB\'E3\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3.\'D5\'E2\'C0\'EF\'BC\'D9\'C9\'E8\'B4\'FA\'BC\'DB\'D4\'BD\'D0\'A1\'D4\'BD\'BA\'C3\'CD\'AC\'CA\'B1\'B8\'BA\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB\'D2\'E2\'CE\'B6\'D7\'C5\'CE\'DE\'C7\'EE\'B4\'F3 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABYQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::SimpleTrajectoryGenerator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::StaticLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SuperValue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b basic_localization.TestBasicLocalization} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACJD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b consumer.TestConsumer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b global_planner::Traceback} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::Trajectory} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds a trajectory generated by considering an x, y, and theta velocity })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABZZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectoryCostFunction} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for critics of trajectories During each sampling run, a batch of many trajectories will be scored using such a cost function. The prepare method is called before each batch run, and then for each trajectory of the sampling set, score_trajectory may be called })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectoryGeneratorTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectoryPlanner} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'C3\'C0\'E0\'B4\'D3\'B8\'F8\'B6\'A8\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'C2\'B7\'BE\'B6\'BA\'CD\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACBC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectoryPlannerROS} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for the trajectory controller that queries the param server to construct a controller })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectoryPlannerTest} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectorySampleGenerator} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for navigation trajectory generators })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TrajectorySearch} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F7\'CE\'AA\'D2\'BB\'B8\'F6\'B4\'BF\'D0\'E9\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D1\'B0\'D5\'D2\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'A3\'BF\'E9\'BD\'D3\'BF\'DA })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::TwirlingCostFunction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::VelocityIterator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid::VoxelGrid} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VoxelGrid} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 3D grid structure that stores points as an integer array. X and Y index the array and Z selects which bit of the integer is used giving a limit of 16 vertical cells })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::VoxelGridModel} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using a 3D voxel grid })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b costmap_2d::VoxelLayer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::WavefrontMapAccessor} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b base_local_planner::WorldModel} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An interface the trajectory controller uses to interact with the world regardless of the underlying world model })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAACIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b voxel_grid::VoxelGrid::ZOffset} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAADYH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CE\'C4\'BC\'FE\'CB\'F7\'D2\'FD\par \pard\plain 
{\tc \v \'CE\'C4\'BC\'FE\'CB\'F7\'D2\'FD}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\'CE\'C4\'BC\'FE\'C1\'D0\'B1\'ED\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'D5\'E2\'C0\'EF\'C1\'D0\'B3\'F6\'C1\'CB\'CB\'F9\'D3\'D0\'CE\'C4\'BC\'FE\'A3\'AC\'B2\'A2\'B8\'BD\'B4\'F8\'BC\'F2\'D2\'AA\'CB\'B5\'C3\'F7:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b amcl/include/amcl/map/{\b map.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/pf/{\b eig3.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/pf/{\b pf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/pf/{\b pf_kdtree.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/pf/{\b pf_pdf.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/pf/{\b pf_vector.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/sensors/{\b amcl_laser.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/sensors/{\b amcl_odom.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/include/amcl/sensors/{\b amcl_sensor.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/{\b amcl_node.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/map/{\b map.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/map/{\b map_cspace.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/map/{\b map_draw.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/map/{\b map_range.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/map/{\b map_store.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/pf/{\b eig3.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/pf/{\b pf.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/pf/{\b pf_draw.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/pf/{\b pf_kdtree.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/pf/{\b pf_pdf.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/pf/{\b pf_vector.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/sensors/{\b amcl_laser.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/sensors/{\b amcl_odom.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/amcl/sensors/{\b amcl_sensor.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAIX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/src/include/{\b portable_utils.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/test/{\b basic_localization.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b amcl/test/{\b set_pose.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/{\b setup.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b costmap_model.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b footprint_helper.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b goal_functions.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b latched_stop_rotate_controller.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b line_iterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b local_planner_limits.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b local_planner_util.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b map_cell.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b map_grid.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b map_grid_cost_function.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b map_grid_visualizer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b obstacle_cost_function.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b odometry_helper_ros.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b oscillation_cost_function.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b planar_laser_scan.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b point_grid.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b prefer_forward_cost_function.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b simple_scored_sampling_planner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b simple_trajectory_generator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory_cost_function.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory_inc.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory_planner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory_planner_ros.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory_sample_generator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b trajectory_search.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b twirling_cost_function.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b velocity_iterator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b voxel_grid_model.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/include/base_local_planner/{\b world_model.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b costmap_model.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b footprint_helper.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b goal_functions.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b latched_stop_rotate_controller.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b local_planner_util.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b map_cell.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b map_grid.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b map_grid_cost_function.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b map_grid_visualizer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b obstacle_cost_function.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b odometry_helper_ros.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b oscillation_cost_function.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b point_grid.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b point_grid_node.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b prefer_forward_cost_function.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b simple_scored_sampling_planner.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b simple_trajectory_generator.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b trajectory.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b trajectory_planner.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b trajectory_planner_ros.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b twirling_cost_function.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/{\b voxel_grid_model.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/src/local_planner_limits/{\b __init__.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b footprint_helper_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b gtest_main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b line_iterator_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b map_grid_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b trajectory_generator_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b utest.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b velocity_iterator_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b base_local_planner/test/{\b wavefront_map_accessor.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b carrot_planner/include/carrot_planner/{\b carrot_planner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b carrot_planner/src/{\b carrot_planner.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b clear_costmap_recovery/include/clear_costmap_recovery/{\b clear_costmap_recovery.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b clear_costmap_recovery/src/{\b clear_costmap_recovery.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b clear_costmap_recovery/test/{\b clear_tester.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b array_parser.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b cost_values.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b costmap_2d.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b costmap_2d_publisher.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b costmap_2d_ros.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b costmap_layer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b costmap_math.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b footprint.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b inflation_layer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b layer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b layered_costmap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b observation.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b observation_buffer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b obstacle_layer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b static_layer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b testing_helper.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/include/costmap_2d/{\b voxel_layer.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/plugins/{\b inflation_layer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/plugins/{\b obstacle_layer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/plugins/{\b static_layer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/plugins/{\b voxel_layer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b array_parser.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_2d.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_2d_cloud.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_2d_markers.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_2d_node.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_2d_publisher.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_2d_ros.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_layer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b costmap_math.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b footprint.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b layer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b layered_costmap.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/src/{\b observation_buffer.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b array_parser_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b coordinates_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b costmap_tester.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b footprint_tests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b inflation_tests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b module_tests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b obstacle_tests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b costmap_2d/test/{\b static_tests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b dwa_local_planner/include/dwa_local_planner/{\b dwa_planner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b dwa_local_planner/include/dwa_local_planner/{\b dwa_planner_ros.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b dwa_local_planner/src/{\b dwa_planner.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b dwa_local_planner/src/{\b dwa_planner_ros.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b fake_localization/{\b fake_localization.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b fake_localization/{\b static_odom_broadcaster.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b astar.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b dijkstra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b expander.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b gradient_path.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b grid_path.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b orientation_filter.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b planner_core.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b potential_calculator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b quadratic_calculator.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/include/global_planner/{\b traceback.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b astar.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b dijkstra.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b gradient_path.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b grid_path.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b orientation_filter.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b plan_node.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b planner_core.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b global_planner/src/{\b quadratic_calculator.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/include/map_server/{\b image_loader.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/src/{\b image_loader.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/src/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/src/{\b map_saver.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/test/{\b consumer.py} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/test/{\b rtest.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/test/{\b test_constants.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/test/{\b test_constants.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b map_server/test/{\b utest.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b move_base/include/move_base/{\b move_base.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b move_base/src/{\b move_base.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b move_base/src/{\b move_base_node.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b move_slow_and_clear/include/move_slow_and_clear/{\b move_slow_and_clear.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b move_slow_and_clear/src/{\b move_slow_and_clear.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b nav_core/include/nav_core/{\b base_global_planner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b nav_core/include/nav_core/{\b base_local_planner.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b nav_core/include/nav_core/{\b parameter_magic.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b nav_core/include/nav_core/{\b recovery_behavior.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/include/navfn/{\b navfn.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/include/navfn/{\b navfn_ros.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/include/navfn/{\b potarr_point.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/include/navfn/{\b read_pgm_costmap.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/{\b navfn.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/{\b navfn_node.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/{\b navfn_ros.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/{\b read_pgm_costmap.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/navtest/{\b navtest.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/navtest/{\b navwin.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/src/navtest/{\b navwin.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b navfn/test/{\b path_calc_test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b rotate_recovery/include/rotate_recovery/{\b rotate_recovery.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b rotate_recovery/src/{\b rotate_recovery.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b voxel_grid/include/voxel_grid/{\b voxel_grid.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b voxel_grid/src/{\b voxel_grid.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b voxel_grid/test/{\b voxel_grid_tests.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'CE\'C4\'B5\'B5\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl}
{\xe \v amcl}
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AMCLLaser}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AMCLLaserData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AMCLOdom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AMCLOdomData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AMCLSensor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AMCLSensorData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b laser_model_t} \{ {\b LASER_MODEL_BEAM}
, {\b LASER_MODEL_LIKELIHOOD_FIELD}
, {\b LASER_MODEL_LIKELIHOOD_FIELD_PROB}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b odom_model_t} \{ {\b ODOM_MODEL_DIFF}
, {\b ODOM_MODEL_OMNI}
, {\b ODOM_MODEL_DIFF_CORRECTED}
, {\b ODOM_MODEL_OMNI_CORRECTED}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v laser_model_t\:amcl}
{\xe \v amcl\:laser_model_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b amcl::laser_model_t}}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LASER_MODEL_BEAM\:amcl}
{\xe \v amcl\:LASER_MODEL_BEAM}
{\qr LASER_MODEL_BEAM{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
\cell }{\cell }{\row }
{\xe \v LASER_MODEL_LIKELIHOOD_FIELD\:amcl}
{\xe \v amcl\:LASER_MODEL_LIKELIHOOD_FIELD}
{\qr LASER_MODEL_LIKELIHOOD_FIELD{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
\cell }{\cell }{\row }
{\xe \v LASER_MODEL_LIKELIHOOD_FIELD_PROB\:amcl}
{\xe \v amcl\:LASER_MODEL_LIKELIHOOD_FIELD_PROB}
{\qr LASER_MODEL_LIKELIHOOD_FIELD_PROB{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
\cell }{\cell }{\row }
}
}
{\xe \v odom_model_t\:amcl}
{\xe \v amcl\:odom_model_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b amcl::odom_model_t}}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v ODOM_MODEL_DIFF\:amcl}
{\xe \v amcl\:ODOM_MODEL_DIFF}
{\qr ODOM_MODEL_DIFF{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
\cell }{\cell }{\row }
{\xe \v ODOM_MODEL_OMNI\:amcl}
{\xe \v amcl\:ODOM_MODEL_OMNI}
{\qr ODOM_MODEL_OMNI{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
\cell }{\cell }{\row }
{\xe \v ODOM_MODEL_DIFF_CORRECTED\:amcl}
{\xe \v amcl\:ODOM_MODEL_DIFF_CORRECTED}
{\qr ODOM_MODEL_DIFF_CORRECTED{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
\cell }{\cell }{\row }
{\xe \v ODOM_MODEL_OMNI_CORRECTED\:amcl}
{\xe \v amcl\:ODOM_MODEL_OMNI_CORRECTED}
{\qr ODOM_MODEL_OMNI_CORRECTED{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
\cell }{\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner}
{\xe \v base_local_planner}
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CostmapModel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using the costmap. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FootprintHelper}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FootprintHelperTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LatchedStopRotateController}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LineIterator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LocalPlannerLimits}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LocalPlannerUtil}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper class implementing infrastructure code many local planner implementations may need. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapCell}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores path distance and goal distance information used for scoring trajectories }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapGrid}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A grid of {\b MapCell} cells that is used to propagate path and goal distances for the trajectory controller. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapGridCostFunction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapGridVisualizer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ObstacleCostFunction}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses costmap 2d to assign negative costs if robot footprint is in obstacle on any point of the trajectory. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OdometryHelperRos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OscillationCostFunction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PlanarLaserScan}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores a scan from a planar laser that can be used to clear freespace }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PointGrid}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6WorldModel\'BD\'D3\'BF\'DA\'B5\'C4\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4\'B5\'C4\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2\'A3\'AC \'B8\'C3\'C0\'E0\'B4\'E6\'B4\'A2\'CD\'F8\'B8\'F1\'B5\'C4\'B5\'E3\'B2\'A2\'C7\'D2\'BC\'EC\'B2\'E9\'B6\'E0\'B1\'DF\'D0\'CE\'D6\'D0\'B5\'C4\'B5\'E3\'CA\'C7\'B7\'F1\'C5\'F6\'D7\'B2(\'CD\'A8\'B9\'FD\'B0\'D1\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint\'D3\'B3\'C9\'E4\'B5\'BD\'B8\'F8\'B6\'A8\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'BF\'B4\'D3\'D0\'C3\'BB\'D3\'D0\'BA\'CD\'D5\'CF\'B0\'AD\'CE\'EF\'D6\'D8\'BA\'CF) }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PreferForwardCostFunction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SimpleScoredSamplingPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B8\'F8\'B6\'A8\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'BA\'CD\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD\'BC\'C6\'CB\'E3\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3.\'D5\'E2\'C0\'EF\'BC\'D9\'C9\'E8\'B4\'FA\'BC\'DB\'D4\'BD\'D0\'A1\'D4\'BD\'BA\'C3\'CD\'AC\'CA\'B1\'B8\'BA\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB\'D2\'E2\'CE\'B6\'D7\'C5\'CE\'DE\'C7\'EE\'B4\'F3 }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SimpleTrajectoryGenerator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Trajectory}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds a trajectory generated by considering an x, y, and theta velocity }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectoryCostFunction}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for critics of trajectories During each sampling run, a batch of many trajectories will be scored using such a cost function. The prepare method is called before each batch run, and then for each trajectory of the sampling set, score_trajectory may be called. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectoryGeneratorTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectoryPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'C3\'C0\'E0\'B4\'D3\'B8\'F8\'B6\'A8\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'C2\'B7\'BE\'B6\'BA\'CD\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectoryPlannerROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for the trajectory controller that queries the param server to construct a controller }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectoryPlannerTest}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectorySampleGenerator}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for navigation trajectory generators }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectorySearch}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F7\'CE\'AA\'D2\'BB\'B8\'F6\'B4\'BF\'D0\'E9\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D1\'B0\'D5\'D2\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'A3\'BF\'E9\'BD\'D3\'BF\'DA }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TwirlingCostFunction}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VelocityIterator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VoxelGridModel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using a 3D voxel grid. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WavefrontMapAccessor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WorldModel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An interface the trajectory controller uses to interact with the world regardless of the underlying world model. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CostAggregationType} \{ {\b Last}
, {\b Sum}
, {\b Product}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getGoalPositionDistance} (const geometry_msgs::PoseStamped &global_pose, double goal_x, double goal_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'BE\'E0\'C0\'EB\'B5\'C4\'C6\'BD\'B7\'BD\'C0\'B4\'BC\'EC\'B2\'E2\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getGoalOrientationAngleDifference} (const geometry_msgs::PoseStamped &global_pose, double goal_th)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return angle difference to goal to check if the goal orientation has been achieved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishPlan} (const std::vector< geometry_msgs::PoseStamped > &path, const ros::Publisher &pub)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publish a plan for visualization purposes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b prunePlan} (const geometry_msgs::PoseStamped &global_pose, std::vector< geometry_msgs::PoseStamped > &plan, std::vector< geometry_msgs::PoseStamped > &global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trim off parts of the global plan that are far enough behind the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b transformGlobalPlan} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const geometry_msgs::PoseStamped &global_robot_pose, const {\b costmap_2d::Costmap2D} &costmap, const std::string &global_frame, std::vector< geometry_msgs::PoseStamped > &transformed_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transforms the global plan of the robot from the planner frame to the frame of the costmap, selects only the (first) part of the plan that is within the costmap area. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getGoalPose} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const std::string &global_frame, geometry_msgs::PoseStamped &goal_pose)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns last pose in plan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isGoalReached} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const {\b costmap_2d::Costmap2D} &costmap, const std::string &global_frame, geometry_msgs::PoseStamped &global_pose, const nav_msgs::Odometry &base_odom, double rot_stopped_vel, double trans_stopped_vel, double xy_goal_tolerance, double yaw_goal_tolerance)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the goal pose has been achieved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stopped} (const nav_msgs::Odometry &base_odom, const double &rot_stopped_velocity, const double &trans_stopped_velocity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check whether the robot is stopped or not }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isGoalReached} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const {\b costmap_2d::Costmap2D} &costmap {\b GOAL_ATTRIBUTE_UNUSED}, const std::string &global_frame, geometry_msgs::PoseStamped &global_pose, const nav_msgs::Odometry &base_odom, double rot_stopped_vel, double trans_stopped_vel, double xy_goal_tolerance, double yaw_goal_tolerance)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b FootprintHelperTest}, correctFootprint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b FootprintHelperTest}, correctLineCells)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, initNull)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, operatorBrackets)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, copyConstructor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, getIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, reset)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, properGridConstruction)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, sizeCheck)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, adjustPlanEmpty)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, adjustPlan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, adjustPlan2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (MapGridTest, distancePropagation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlannerTest} * {\b setup_testclass_singleton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b TrajectoryPlannerTest}, footprintObstacles)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b TrajectoryPlannerTest}, checkGoalDistance)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b TrajectoryPlannerTest}, checkPathDistance)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, testsingle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, testsingle_pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, testsingle_neg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test1_pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test1_neg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test_shifted)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (VelocityIteratorTest, test_cranky)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlannerTest} * {\b tct} = NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CostAggregationType\:base_local_planner}
{\xe \v base_local_planner\:CostAggregationType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b base_local_planner::CostAggregationType}}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
when scoring a trajectory according to the values in mapgrid, we can take return the value of the last point (if no of the earlier points were in return collision), the sum for all points, or the product of all (non-zero) points \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v Last\:base_local_planner}
{\xe \v base_local_planner\:Last}
{\qr Last{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
\cell }{\cell }{\row }
{\xe \v Sum\:base_local_planner}
{\xe \v base_local_planner\:Sum}
{\qr Sum{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
\cell }{\cell }{\row }
{\xe \v Product\:base_local_planner}
{\xe \v base_local_planner\:Product}
{\qr Product{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getGoalOrientationAngleDifference\:base_local_planner}
{\xe \v base_local_planner\:getGoalOrientationAngleDifference}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::getGoalOrientationAngleDifference (const geometry_msgs::PoseStamped &  {\i global_pose}, double  {\i goal_th})}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return angle difference to goal to check if the goal orientation has been achieved }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{The pose of the robot in the global frame \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_x} \cell }{The desired x value for the goal \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_y} \cell }{The desired y value for the goal \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
angular difference \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ac3058c2cea31b23c378465a5e9374219_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGoalPose\:base_local_planner}
{\xe \v base_local_planner\:getGoalPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::getGoalPose (const tf2_ros::Buffer &  {\i tf}, const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan}, const std::string &  {\i global_frame}, geometry_msgs::PoseStamped &  {\i goal_pose})}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns last pose in plan }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{A reference to a transform listener \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_plan} \cell }{The plan being followed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{The global frame of the local planner \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_pose} \cell }{the pose to copy into \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if achieved, false otherwise \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a550c4981442b28ca179446972791839b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGoalPositionDistance\:base_local_planner}
{\xe \v base_local_planner\:getGoalPositionDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::getGoalPositionDistance (const geometry_msgs::PoseStamped &  {\i global_pose}, double  {\i goal_x}, double  {\i goal_y})}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'BE\'E0\'C0\'EB\'B5\'C4\'C6\'BD\'B7\'BD\'C0\'B4\'BC\'EC\'B2\'E2\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'C8\'AB\'BE\'D6\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_x} \cell }{\'C4\'BF\'B1\'EA\'B5\'E3x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_y} \cell }{\'C4\'BF\'B1\'EA\'B5\'E3y\'D7\'F8\'B1\'EA \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B5\'BD\'C4\'BF\'B1\'EA\'B5\'E3\'BE\'E0\'C0\'EB \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ac7ecc277a40eb4e997a94149fbec1fbe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isGoalReached\:base_local_planner}
{\xe \v base_local_planner\:isGoalReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::isGoalReached (const tf2_ros::Buffer &  {\i tf}, const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan}, const {\b costmap_2d::Costmap2D} &costmap  {\i GOAL_ATTRIBUTE_UNUSED}, const std::string &  {\i global_frame}, geometry_msgs::PoseStamped &  {\i global_pose}, const nav_msgs::Odometry &  {\i base_odom}, double  {\i rot_stopped_vel}, double  {\i trans_stopped_vel}, double  {\i xy_goal_tolerance}, double  {\i yaw_goal_tolerance})}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a86c3d7ade14ac60afeb361f1db0cf90c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isGoalReached\:base_local_planner}
{\xe \v base_local_planner\:isGoalReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::isGoalReached (const tf2_ros::Buffer &  {\i tf}, const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan}, const {\b costmap_2d::Costmap2D} &  {\i costmap}, const std::string &  {\i global_frame}, geometry_msgs::PoseStamped &  {\i global_pose}, const nav_msgs::Odometry &  {\i base_odom}, double  {\i rot_stopped_vel}, double  {\i trans_stopped_vel}, double  {\i xy_goal_tolerance}, double  {\i yaw_goal_tolerance})}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the goal pose has been achieved }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{A reference to a transform listener \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_plan} \cell }{The plan being followed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{A reference to the costmap object being used by the planner \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{The global frame of the local planner \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base_odom} \cell }{The current odometry information for the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rot_stopped_vel} \cell }{The rotational velocity below which the robot is considered stopped \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i trans_stopped_vel} \cell }{The translational velocity below which the robot is considered stopped \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xy_goal_tolerance} \cell }{The translational tolerance on reaching the goal \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yaw_goal_tolerance} \cell }{The rotational tolerance on reaching the goal \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if achieved, false otherwise \par
}}}}
{\xe \v prunePlan\:base_local_planner}
{\xe \v base_local_planner\:prunePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::prunePlan (const geometry_msgs::PoseStamped &  {\i global_pose}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}, std::vector< geometry_msgs::PoseStamped > &  {\i global_plan})}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trim off parts of the global plan that are far enough behind the robot }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{The pose of the robot in the global frame \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{The plan to be pruned \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_plan} \cell }{The plan to be pruned in the frame of the planner \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ac8ecc12b4595fc60fdbe4b936ce1a274_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishPlan\:base_local_planner}
{\xe \v base_local_planner\:publishPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::publishPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i path}, const ros::Publisher &  {\i pub})}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publish a plan for visualization purposes }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path} \cell }{The plan to publish \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pub} \cell }{The published to use \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i r,g,b,a} \cell }{The color and alpha value to use when publishing \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ae89b923286d9fd62be7807372dc50834_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setup_testclass_singleton\:base_local_planner}
{\xe \v base_local_planner\:setup_testclass_singleton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrajectoryPlannerTest} * base_local_planner::setup_testclass_singleton ()}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a445e2e09801c0fc60ed306912594437d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stopped\:base_local_planner}
{\xe \v base_local_planner\:stopped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::stopped (const nav_msgs::Odometry &  {\i base_odom}, const double &  {\i rot_stopped_velocity}, const double &  {\i trans_stopped_velocity})}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check whether the robot is stopped or not }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base_odom} \cell }{The current odometry information for the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rot_stopped_velocity} \cell }{The rotational velocity below which the robot is considered stopped \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i trans_stopped_velocity} \cell }{The translational velocity below which the robot is considered stopped \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the robot is stopped, false otherwise \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a80ea2934aded9d99c3e082dd934ae89c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST ({\b FootprintHelperTest} , correctFootprint )}}
\par
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_afcc7fb32ff7cc690cec456bbe8ae4dd2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST ({\b FootprintHelperTest} , correctLineCells )}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , adjustPlan )}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a01086e4d273070471802129907d9ceb2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , adjustPlan2 )}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_abf808a0ed94538b91a5d8403055606c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , adjustPlanEmpty )}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ab74190adf8665074e8369cafc1802e09_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , copyConstructor )}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , distancePropagation )}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a8fb58f0ae9c9c417df5321e2ef3bd60c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , getIndex )}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a20d60d586e40c99bd35548561a200726_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , initNull )}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , operatorBrackets )}}
\par
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_aabb9dc6669565b8edb8b51fadff6748a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , properGridConstruction )}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , reset )}}
\par
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a2b6e0b9c86c15e1c5655e64517b0c785_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (MapGridTest , sizeCheck )}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ad816bba67d8b1da92ea312fafb34cb57_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST ({\b TrajectoryPlannerTest} , checkGoalDistance )}}
\par
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a49432455b0122a8b75bef05fd84eb810_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST ({\b TrajectoryPlannerTest} , checkPathDistance )}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a9c71ef4d2653527ff043e64226f98364_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST ({\b TrajectoryPlannerTest} , footprintObstacles )}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a2ecfd39db1caed1dfc893a87ded32a7b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test1 )}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ab7088dd8f85a9a10ecddaa90676cd2ec_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test1_neg )}}
\par
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_af7a8fc342d4ba1b57159e5e61acedd9b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test1_pos )}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_aa6f28aa3eb1ed8ea7d32930cac17c167_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test3 )}}
\par
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a1abd4add7b3239475f0a15814d301716_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test4 )}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a7f334c616398156aadddb254141b3f2f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test_cranky )}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a1ee3871e18ef5a708e4790455535fdeb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , test_shifted )}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a72ebaccfd35db7b1fdb2f0a94139b758_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , testsingle )}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_ae3f9c95f5bf8b692b9ebd44acfd3263f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , testsingle_neg )}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a7c8d7f5bc4b977cd4c35d87b35c7b237_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:base_local_planner}
{\xe \v base_local_planner\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TEST (VelocityIteratorTest , testsingle_pos )}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a43f65fe0ce1ea4925f05638b1b02f817_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v transformGlobalPlan\:base_local_planner}
{\xe \v base_local_planner\:transformGlobalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::transformGlobalPlan (const tf2_ros::Buffer &  {\i tf}, const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan}, const geometry_msgs::PoseStamped &  {\i global_robot_pose}, const {\b costmap_2d::Costmap2D} &  {\i costmap}, const std::string &  {\i global_frame}, std::vector< geometry_msgs::PoseStamped > &  {\i transformed_plan})}}
\par
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transforms the global plan of the robot from the planner frame to the frame of the costmap, selects only the (first) part of the plan that is within the costmap area. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{A reference to a transform listener \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_plan} \cell }{The plan to be transformed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i robot_pose} \cell }{The pose of the robot in the global frame (same as costmap) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{A reference to the costmap being used so the window size for transforming can be computed \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{The frame to transform the plan to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i transformed_plan} \cell }{Populated with the transformed plan \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a962893e66167d44e22bd284e83e4383e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacebase__local__planner_a962893e66167d44e22bd284e83e4383e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v tct\:base_local_planner}
{\xe \v base_local_planner\:tct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrajectoryPlannerTest}* base_local_planner::tct = NULL}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
basic_localization \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v basic_localization}
{\xe \v basic_localization}
{\bkmkstart AAAAAAACJC}
{\bkmkend AAAAAAACJC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestBasicLocalization}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
carrot_planner \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v carrot_planner}
{\xe \v carrot_planner}
{\bkmkstart AAAAAAACJP}
{\bkmkend AAAAAAACJP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CarrotPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple global planner that will compute a valid goal point for the local planner by walking back along the vector between the robot and the user-specified goal point until a valid cost is found. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clear_costmap_recovery \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v clear_costmap_recovery}
{\xe \v clear_costmap_recovery}
{\bkmkstart AAAAAAACKF}
{\bkmkend AAAAAAACKF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClearCostmapRecovery}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A recovery behavior that reverts the navigation stack's costmaps to the static map outside of a user-specified region. }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
consumer \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v consumer}
{\xe \v consumer}
{\bkmkstart AAAAAAACKY}
{\bkmkend AAAAAAACKY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestConsumer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b PKG} = 'static_map_server'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b NAME} = 'consumer'\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v NAME\:consumer}
{\xe \v consumer\:NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string consumer.NAME = 'consumer'}}
\par
{\bkmkstart AAAAAAACKZ}
{\bkmkend AAAAAAACKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PKG\:consumer}
{\xe \v consumer\:PKG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string consumer.PKG = 'static_map_server'}}
\par
{\bkmkstart AAAAAAACLA}
{\bkmkend AAAAAAACLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d}
{\xe \v costmap_2d}
{\bkmkstart AAAAAAACLG}
{\bkmkend AAAAAAACLG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CellData}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for cell information used during obstacle inflation }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Costmap2D}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D costmap provides a mapping between points in the world and their associated "costs". }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Costmap2DPublisher}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tool to periodically publish visualization data from a {\b Costmap2D} }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Costmap2DROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for a 2D Costmap. Handles subscribing to topics that provide observations about obstacles in either the form of PointCloud or LaserScan messages. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CostmapLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CostmapTester}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InflationLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Layer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LayeredCostmap}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates different layer plugins and aggregates them into one score }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b MapLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Observation}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an observation in terms of a point cloud and the origin of the source }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ObservationBuffer}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Takes in point clouds from sensors, transforms them to the desired frame, and stores them }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ObstacleLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StaticLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VoxelLayer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< float > > {\b parseVVF} (const std::string &input, std::string &error_return)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse a vector of vectors of floats from a string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calculateMinAndMaxDistances} (const std::vector< geometry_msgs::Point > &footprint, double &min_dist, double &max_dist)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the extreme distances for the footprint }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point {\b toPoint} (geometry_msgs::Point32 pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point32 to Point }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point32 {\b toPoint32} (geometry_msgs::Point pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point to Point32 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Polygon {\b toPolygon} (std::vector< geometry_msgs::Point > pts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert vector of Points to Polygon msg }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b toPointVector} (geometry_msgs::Polygon polygon)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Polygon msg to vector of Points. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b transformFootprint} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, std::vector< geometry_msgs::Point > &oriented_footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (list of Points) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b transformFootprint} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, geometry_msgs::PolygonStamped &oriented_footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (PolygonStamped) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b padFootprint} (std::vector< geometry_msgs::Point > &footprint, double padding)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the specified amount of padding to the footprint (in place) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b makeFootprintFromRadius} (double radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a circular footprint from a given radius }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makeFootprintFromString} (const std::string &footprint_string, std::vector< geometry_msgs::Point > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the footprint from the given string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b makeFootprintFromParams} (ros::NodeHandle &nh)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the ros-params "footprint" and/or "robot_radius" from the given NodeHandle using searchParam() to go up the tree. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b makeFootprintFromXMLRPC} (XmlRpc::XmlRpcValue &footprint_xmlrpc, const std::string &full_param_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the footprint from the given XmlRpcValue. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeFootprintToParam} (ros::NodeHandle &nh, const std::vector< geometry_msgs::Point > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write the current unpadded_footprint_ to the "footprint" parameter of the given NodeHandle so that dynamic_reconfigure will see the new value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b move_parameter} (ros::NodeHandle &old_h, ros::NodeHandle &new_h, std::string name, bool should_delete=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getNumberFromXMLRPC} (XmlRpc::XmlRpcValue &value, const std::string &full_param_name)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b NO_INFORMATION} = 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b LETHAL_OBSTACLE} = 254\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b INSCRIBED_INFLATED_OBSTACLE} = 253\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b FREE_SPACE} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a mapping for often used cost values \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v calculateMinAndMaxDistances\:costmap_2d}
{\xe \v costmap_2d\:calculateMinAndMaxDistances}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::calculateMinAndMaxDistances (const std::vector< geometry_msgs::Point > &  {\i footprint}, double &  {\i min_dist}, double &  {\i max_dist})}}
\par
{\bkmkstart AAAAAAACLH}
{\bkmkend AAAAAAACLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the extreme distances for the footprint }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The footprint to examine \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_dist} \cell }{Output parameter of the minimum distance \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_dist} \cell }{Output parameter of the maximum distance \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a6eeafbd231ad1ec2de69e61754773742_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a6eeafbd231ad1ec2de69e61754773742_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getNumberFromXMLRPC\:costmap_2d}
{\xe \v costmap_2d\:getNumberFromXMLRPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::getNumberFromXMLRPC (XmlRpc::XmlRpcValue &  {\i value}, const std::string &  {\i full_param_name})}}
\par
{\bkmkstart AAAAAAACLI}
{\bkmkend AAAAAAACLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a45dac86e116bbc150dedcf1bd2c8c697_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makeFootprintFromParams\:costmap_2d}
{\xe \v costmap_2d\:makeFootprintFromParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< geometry_msgs::Point > costmap_2d::makeFootprintFromParams (ros::NodeHandle &  {\i nh})}}
\par
{\bkmkstart AAAAAAACLJ}
{\bkmkend AAAAAAACLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the ros-params "footprint" and/or "robot_radius" from the given NodeHandle using searchParam() to go up the tree. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a983825dbb0ea5cf30ea3fa2763375e98_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a983825dbb0ea5cf30ea3fa2763375e98_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makeFootprintFromRadius\:costmap_2d}
{\xe \v costmap_2d\:makeFootprintFromRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< geometry_msgs::Point > costmap_2d::makeFootprintFromRadius (double  {\i radius})}}
\par
{\bkmkstart AAAAAAACLK}
{\bkmkend AAAAAAACLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a circular footprint from a given radius }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_ac13ae420906acd9f42c9cc2a73e9de41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makeFootprintFromString\:costmap_2d}
{\xe \v costmap_2d\:makeFootprintFromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::makeFootprintFromString (const std::string &  {\i footprint_string}, std::vector< geometry_msgs::Point > &  {\i footprint})}}
\par
{\bkmkstart AAAAAAACLL}
{\bkmkend AAAAAAACLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the footprint from the given string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Format should be bracketed array of arrays of floats, like so: [[1.0, 2.2], [3.3, 4.2], ...] \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a0c5b34c84596c37289f90800701d5aa2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a0c5b34c84596c37289f90800701d5aa2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makeFootprintFromXMLRPC\:costmap_2d}
{\xe \v costmap_2d\:makeFootprintFromXMLRPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< geometry_msgs::Point > costmap_2d::makeFootprintFromXMLRPC (XmlRpc::XmlRpcValue &  {\i footprint_xmlrpc}, const std::string &  {\i full_param_name})}}
\par
{\bkmkstart AAAAAAACLM}
{\bkmkend AAAAAAACLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the footprint from the given XmlRpcValue. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint_xmlrpc} \cell }{should be an array of arrays, where the top-level array should have 3 or more elements, and the sub-arrays should all have exactly 2 elements (x and y coordinates).\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i full_param_name} \cell }{this is the full name of the rosparam from which the footprint_xmlrpc value came. It is used only for reporting errors. \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a80f6a207189166bd1c1375c46fa23abb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a80f6a207189166bd1c1375c46fa23abb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v move_parameter\:costmap_2d}
{\xe \v costmap_2d\:move_parameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::move_parameter (ros::NodeHandle &  {\i old_h}, ros::NodeHandle &  {\i new_h}, std::string  {\i name}, bool  {\i should_delete} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACLN}
{\bkmkend AAAAAAACLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a50986cddcfe2d310c603a723f85395b1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v padFootprint\:costmap_2d}
{\xe \v costmap_2d\:padFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::padFootprint (std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i padding})}}
\par
{\bkmkstart AAAAAAACLO}
{\bkmkend AAAAAAACLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the specified amount of padding to the footprint (in place) }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a16dd6a7064ce2ed191b40c7009512489_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a16dd6a7064ce2ed191b40c7009512489_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v parseVVF\:costmap_2d}
{\xe \v costmap_2d\:parseVVF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::vector< float > > costmap_2d::parseVVF (const std::string &  {\i input}, std::string &  {\i error_return})}}
\par
{\bkmkstart AAAAAAACLP}
{\bkmkend AAAAAAACLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse a vector of vectors of floats from a string. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse a vector of vector of floats from a string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error_return} \cell }{If no error, error_return is set to "". If error, error_return will describe the error. Syntax is [[1.0, 2.0], [3.3, 4.4, 5.5], ...]\cell }
{\row }
}
On error, error_return is set and the return value could be anything, like part of a successful parse.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i input} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error_return} \cell }{Syntax is [[1.0, 2.0], [3.3, 4.4, 5.5], ...] \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a269a284e6ee48725e0f286ce771d71fd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toPoint\:costmap_2d}
{\xe \v costmap_2d\:toPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Point costmap_2d::toPoint (geometry_msgs::Point32  {\i pt})}}
\par
{\bkmkstart AAAAAAACLQ}
{\bkmkend AAAAAAACLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point32 to Point }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a9ffe4eb45b6230a18f56723b49cb0047_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toPoint32\:costmap_2d}
{\xe \v costmap_2d\:toPoint32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Point32 costmap_2d::toPoint32 (geometry_msgs::Point  {\i pt})}}
\par
{\bkmkstart AAAAAAACLR}
{\bkmkend AAAAAAACLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point to Point32 }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a50f77e1c7e28435a7707e1991b9a82a1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toPointVector\:costmap_2d}
{\xe \v costmap_2d\:toPointVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< geometry_msgs::Point > costmap_2d::toPointVector (geometry_msgs::Polygon  {\i polygon})}}
\par
{\bkmkstart AAAAAAACLS}
{\bkmkend AAAAAAACLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Polygon msg to vector of Points. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a5969ae5fc593cedb677488002354feba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a5969ae5fc593cedb677488002354feba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toPolygon\:costmap_2d}
{\xe \v costmap_2d\:toPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Polygon costmap_2d::toPolygon (std::vector< geometry_msgs::Point >  {\i pts})}}
\par
{\bkmkstart AAAAAAACLT}
{\bkmkend AAAAAAACLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert vector of Points to Polygon msg }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a137137a824a6a667fbf9a850c762c6ec_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a137137a824a6a667fbf9a850c762c6ec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v transformFootprint\:costmap_2d}
{\xe \v costmap_2d\:transformFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::transformFootprint (double  {\i x}, double  {\i y}, double  {\i theta}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec}, geometry_msgs::PolygonStamped &  {\i oriented_footprint})}}
\par
{\bkmkstart AAAAAAACLU}
{\bkmkend AAAAAAACLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (PolygonStamped) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The orientation of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint_spec} \cell }{Basic shape of the footprint \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oriented_footprint} \cell }{Will be filled with the points in the oriented footprint of the robot \cell }
{\row }
}
}}
{\xe \v transformFootprint\:costmap_2d}
{\xe \v costmap_2d\:transformFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::transformFootprint (double  {\i x}, double  {\i y}, double  {\i theta}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec}, std::vector< geometry_msgs::Point > &  {\i oriented_footprint})}}
\par
{\bkmkstart AAAAAAACLV}
{\bkmkend AAAAAAACLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (list of Points) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The orientation of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint_spec} \cell }{Basic shape of the footprint \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oriented_footprint} \cell }{Will be filled with the points in the oriented footprint of the robot \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_a0928255ee5f8797cece2ab99f3eb310b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeFootprintToParam\:costmap_2d}
{\xe \v costmap_2d\:writeFootprintToParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::writeFootprintToParam (ros::NodeHandle &  {\i nh}, const std::vector< geometry_msgs::Point > &  {\i footprint})}}
\par
{\bkmkstart AAAAAAACLW}
{\bkmkend AAAAAAACLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write the current unpadded_footprint_ to the "footprint" parameter of the given NodeHandle so that dynamic_reconfigure will see the new value. }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacecostmap__2d_ae02b98da234ff50b2ef1e3fa6d53f33b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v FREE_SPACE\:costmap_2d}
{\xe \v costmap_2d\:FREE_SPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char costmap_2d::FREE_SPACE = 0{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLX}
{\bkmkend AAAAAAACLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INSCRIBED_INFLATED_OBSTACLE\:costmap_2d}
{\xe \v costmap_2d\:INSCRIBED_INFLATED_OBSTACLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char costmap_2d::INSCRIBED_INFLATED_OBSTACLE = 253{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLY}
{\bkmkend AAAAAAACLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LETHAL_OBSTACLE\:costmap_2d}
{\xe \v costmap_2d\:LETHAL_OBSTACLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char costmap_2d::LETHAL_OBSTACLE = 254{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACLZ}
{\bkmkend AAAAAAACLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NO_INFORMATION\:costmap_2d}
{\xe \v costmap_2d\:NO_INFORMATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char costmap_2d::NO_INFORMATION = 255{\f2 [static]}}}
\par
{\bkmkstart AAAAAAACMA}
{\bkmkend AAAAAAACMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner}
{\xe \v dwa_local_planner}
{\bkmkstart AAAAAAADBU}
{\bkmkend AAAAAAADBU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DWAPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6DWA\'CB\'E3\'B7\'A8\'B5\'C4\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'C0\'E0 }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DWAPlannerROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWAPlannerROS\'CA\'C7\'B7\'E2\'D7\'B0\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'C1\'CB\'D3\'EBmove_base\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'AC\'D7\'F7\'CE\'AAmove_base\'B5\'C4\'B2\'E5\'BC\'FE }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner}
{\xe \v global_planner}
{\bkmkstart AAAAAAADEE}
{\bkmkend AAAAAAADEE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AStarExpansion}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DijkstraExpansion}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Expander}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GlobalPlanner}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GradientPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b greater1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GridPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Index}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OrientationFilter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PlannerWithCostmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PotentialCalculator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b QuadraticCalculator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Traceback}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b OrientationMode} \{ {\b NONE}
, {\b FORWARD}
, {\b INTERPOLATE}
, {\b FORWARDTHENINTERPOLATE}
, {\b BACKWARD}
, {\b LEFTWARD}
, {\b RIGHTWARD}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b set_angle} (geometry_msgs::PoseStamped *pose, double angle)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v OrientationMode\:global_planner}
{\xe \v global_planner\:OrientationMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b global_planner::OrientationMode}}}
\par
{\bkmkstart AAAAAAADEF}
{\bkmkend AAAAAAADEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v NONE\:global_planner}
{\xe \v global_planner\:NONE}
{\qr NONE{\bkmkstart AAAAAAADEG}
{\bkmkend AAAAAAADEG}
\cell }{\cell }{\row }
{\xe \v FORWARD\:global_planner}
{\xe \v global_planner\:FORWARD}
{\qr FORWARD{\bkmkstart AAAAAAADEH}
{\bkmkend AAAAAAADEH}
\cell }{\cell }{\row }
{\xe \v INTERPOLATE\:global_planner}
{\xe \v global_planner\:INTERPOLATE}
{\qr INTERPOLATE{\bkmkstart AAAAAAADEI}
{\bkmkend AAAAAAADEI}
\cell }{\cell }{\row }
{\xe \v FORWARDTHENINTERPOLATE\:global_planner}
{\xe \v global_planner\:FORWARDTHENINTERPOLATE}
{\qr FORWARDTHENINTERPOLATE{\bkmkstart AAAAAAADEJ}
{\bkmkend AAAAAAADEJ}
\cell }{\cell }{\row }
{\xe \v BACKWARD\:global_planner}
{\xe \v global_planner\:BACKWARD}
{\qr BACKWARD{\bkmkstart AAAAAAADEK}
{\bkmkend AAAAAAADEK}
\cell }{\cell }{\row }
{\xe \v LEFTWARD\:global_planner}
{\xe \v global_planner\:LEFTWARD}
{\qr LEFTWARD{\bkmkstart AAAAAAADEL}
{\bkmkend AAAAAAADEL}
\cell }{\cell }{\row }
{\xe \v RIGHTWARD\:global_planner}
{\xe \v global_planner\:RIGHTWARD}
{\qr RIGHTWARD{\bkmkstart AAAAAAADEM}
{\bkmkend AAAAAAADEM}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v set_angle\:global_planner}
{\xe \v global_planner\:set_angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::set_angle (geometry_msgs::PoseStamped *  {\i pose}, double  {\i angle})}}
\par
{\bkmkstart AAAAAAADEN}
{\bkmkend AAAAAAADEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespaceglobal__planner_ad0324dd96d644d514929f39bf5b856cd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
local_planner_limits \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v local_planner_limits}
{\xe \v local_planner_limits}
{\bkmkstart AAAAAAADKN}
{\bkmkend AAAAAAADKN}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b add_generic_localplanner_params} (gen)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v add_generic_localplanner_params\:local_planner_limits}
{\xe \v local_planner_limits\:add_generic_localplanner_params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def local_planner_limits.add_generic_localplanner_params (  {\i gen})}}
\par
{\bkmkstart AAAAAAADKO}
{\bkmkend AAAAAAADKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server}
{\xe \v map_server}
{\bkmkstart AAAAAAADKP}
{\bkmkend AAAAAAADKP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadMapFromFile} (nav_msgs::GetMap::Response *resp, const char *fname, double res, bool negate, double occ_th, double free_th, double *origin, {\b MapMode} mode={\b TRINARY})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v loadMapFromFile\:map_server}
{\xe \v map_server\:loadMapFromFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_server::loadMapFromFile (nav_msgs::GetMap::Response *  {\i resp}, const char *  {\i fname}, double  {\i res}, bool  {\i negate}, double  {\i occ_th}, double  {\i free_th}, double *  {\i origin}, {\b MapMode}  {\i mode} = {\f2 {\b TRINARY}})}}
\par
{\bkmkstart AAAAAAADKQ}
{\bkmkend AAAAAAADKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the image from file and fill out the resp object, for later use when our services are requested.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i resp} \cell }{The map wil be written into here \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fname} \cell }{The image file to read from \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i res} \cell }{The resolution of the map (gets stored in resp) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i negate} \cell }{If true, then whiter pixels are occupied, and blacker pixels are free \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i occ_th} \cell }{Threshold above which pixels are occupied \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i free_th} \cell }{Threshold below which pixels are free \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin} \cell }{Triple specifying 2-D pose of lower-left corner of image \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{Map mode \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D2\'EC\'B3\'A3\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i std::runtime_error} \cell }{If the image file can't be loaded \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacemap__server_a9a1424290b6d4d4806dfb7621cab693d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_base \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_base}
{\xe \v move_base}
{\bkmkstart AAAAAAADKR}
{\bkmkend AAAAAAADKR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MoveBase}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that uses the actionlib::ActionServer interface that moves the robot base to a goal location. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef actionlib::SimpleActionServer< move_base_msgs::MoveBaseAction > {\b MoveBaseActionServer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MoveBaseState} \{ {\b PLANNING}
, {\b CONTROLLING}
, {\b CLEARING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b RecoveryTrigger} \{ {\b PLANNING_R}
, {\b CONTROLLING_R}
, {\b OSCILLATION_R}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MoveBaseActionServer\:move_base}
{\xe \v move_base\:MoveBaseActionServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef actionlib::SimpleActionServer<move_base_msgs::MoveBaseAction> {\b move_base::MoveBaseActionServer}}}
\par
{\bkmkstart AAAAAAADKS}
{\bkmkend AAAAAAADKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MoveBaseState\:move_base}
{\xe \v move_base\:MoveBaseState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b move_base::MoveBaseState}}}
\par
{\bkmkstart AAAAAAADKT}
{\bkmkend AAAAAAADKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PLANNING\:move_base}
{\xe \v move_base\:PLANNING}
{\qr PLANNING{\bkmkstart AAAAAAADKU}
{\bkmkend AAAAAAADKU}
\cell }{\cell }{\row }
{\xe \v CONTROLLING\:move_base}
{\xe \v move_base\:CONTROLLING}
{\qr CONTROLLING{\bkmkstart AAAAAAADKV}
{\bkmkend AAAAAAADKV}
\cell }{\cell }{\row }
{\xe \v CLEARING\:move_base}
{\xe \v move_base\:CLEARING}
{\qr CLEARING{\bkmkstart AAAAAAADKW}
{\bkmkend AAAAAAADKW}
\cell }{\cell }{\row }
}
}
{\xe \v RecoveryTrigger\:move_base}
{\xe \v move_base\:RecoveryTrigger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b move_base::RecoveryTrigger}}}
\par
{\bkmkstart AAAAAAADKX}
{\bkmkend AAAAAAADKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v PLANNING_R\:move_base}
{\xe \v move_base\:PLANNING_R}
{\qr PLANNING_R{\bkmkstart AAAAAAADKY}
{\bkmkend AAAAAAADKY}
\cell }{\cell }{\row }
{\xe \v CONTROLLING_R\:move_base}
{\xe \v move_base\:CONTROLLING_R}
{\qr CONTROLLING_R{\bkmkstart AAAAAAADKZ}
{\bkmkend AAAAAAADKZ}
\cell }{\cell }{\row }
{\xe \v OSCILLATION_R\:move_base}
{\xe \v move_base\:OSCILLATION_R}
{\qr OSCILLATION_R{\bkmkstart AAAAAAADLA}
{\bkmkend AAAAAAADLA}
\cell }{\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_slow_and_clear \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_slow_and_clear}
{\xe \v move_slow_and_clear}
{\bkmkstart AAAAAAADOF}
{\bkmkend AAAAAAADOF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MoveSlowAndClear}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core}
{\xe \v nav_core}
{\bkmkstart AAAAAAADPI}
{\bkmkend AAAAAAADPI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BaseGlobalPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA. navigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BaseLocalPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RecoveryBehavior}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'C4\'A3\'BF\'E9\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class param_t > param_t {\b loadParameterWithDeprecation} (const ros::NodeHandle &nh, const std::string current_name, const std::string old_name, const param_t &default_value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a parameter from one of two namespaces. Complain if it uses the old name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b warnRenamedParameter} (const ros::NodeHandle &nh, const std::string current_name, const std::string old_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Warn if a parameter exists under a deprecated (and unsupported) name. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v loadParameterWithDeprecation\:nav_core}
{\xe \v nav_core\:loadParameterWithDeprecation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class param_t > param_t nav_core::loadParameterWithDeprecation (const ros::NodeHandle &  {\i nh}, const std::string  {\i current_name}, const std::string  {\i old_name}, const param_t &  {\i default_value})}}
\par
{\bkmkstart AAAAAAADPJ}
{\bkmkend AAAAAAADPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a parameter from one of two namespaces. Complain if it uses the old name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nh} \cell }{NodeHandle to look for the parameter in \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i current_name} \cell }{Parameter name that is current, i.e. not deprecated \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i old_name} \cell }{Deprecated parameter name \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i default_value} \cell }{If neither parameter is present, return this value \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The value of the parameter or the default value \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacenav__core_ac1bc19a8eabb092a097d54d334066814_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v warnRenamedParameter\:nav_core}
{\xe \v nav_core\:warnRenamedParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void nav_core::warnRenamedParameter (const ros::NodeHandle &  {\i nh}, const std::string  {\i current_name}, const std::string  {\i old_name})}}
\par
{\bkmkstart AAAAAAADPK}
{\bkmkend AAAAAAADPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Warn if a parameter exists under a deprecated (and unsupported) name. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parameters loaded exclusively through dynamic reconfigure can't really use loadParamWithDeprecation. \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacenav__core_a6ae2b94985fa0d1a0f4c9269ba073327_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn}
{\xe \v navfn}
{\bkmkstart AAAAAAADPZ}
{\bkmkend AAAAAAADPZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NavFn}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navigation function class. Holds buffers for costmap, navfn map.\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'BA\'CDNavFn\'B5\'D8\'CD\'BC\'CA\'C7\'BB\'F9\'D3\'DA\'CF\'F1\'CB\'D8\'B5\'C4\'A3\'AC\'CB\'FB\'C3\'C7\'B5\'C4\'D4\'AD\'B5\'E3\'D4\'DA\'D7\'F3\'C9\'CF\'B7\'BD\'A3\'ACx \'D6\'E1\'CF\'F2\'D3\'D2\'A3\'ACy \'D6\'E1\'CF\'F2\'CF\'C2 }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NavfnROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navfn \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4ROS\'B7\'E2\'D7\'B0\'C0\'E0 }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NavfnWithCostmap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NavWin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b PotarrPoint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b create_nav_plan_astar} ({\b COSTTYPE} *costmap, int nx, int ny, int *{\b goal}, int *{\b start}, float *plan, int nplan)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v create_nav_plan_astar\:navfn}
{\xe \v navfn\:create_nav_plan_astar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::create_nav_plan_astar ({\b COSTTYPE} *  {\i costmap}, int  {\i nx}, int  {\i ny}, int *  {\i goal}, int *  {\i start}, float *  {\i plan}, int  {\i nplan})}}
\par
{\bkmkstart AAAAAAADQA}
{\bkmkend AAAAAAADQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Navigation function call.\par
\\param costmap Cost map array, of type COSTTYPE; origin is upper left\par
}
 NOTE: will be modified to have a border of obstacle costs {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nx} \cell }{Width of map in cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ny} \cell }{Height of map in cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{X,Y position of goal cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{X,Y position of start cell\cell }
{\row }
}
Returns length of plan if found, and fills an array with x,y interpolated positions at about 1/2 cell resolution; else returns 0. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacenavfn_a43e1cf99d005f4c0b40ce27c85ac3a0f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rotate_recovery \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v rotate_recovery}
{\xe \v rotate_recovery}
{\bkmkstart AAAAAAADUR}
{\bkmkend AAAAAAADUR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RotateRecovery}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'BB\'E1\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'B6\'A8\'B5\'E3\'D0\'FD\'D7\'AA\'D2\'BB\'C8\'A6\'A3\'AC\'B3\'A2\'CA\'D4\'C7\'E5\'B3\'FD\'B5\'F7\'D6\'DC\'CE\'A7\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF }}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
set_pose \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v set_pose}
{\xe \v set_pose}
{\bkmkstart AAAAAAADVE}
{\bkmkend AAAAAAADVE}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PoseSetter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pose} = list(map(float, rospy.myargv()[1:4]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b t_stamp} = rospy.Time()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b t_publish} = rospy.Time()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b anonymous}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pub} = rospy.Publisher("initialpose", PoseWithCovarianceStamped, {\b PoseSetter}({\b pose}, stamp={\b t_stamp}, publish_time={\b t_publish}), queue_size=1)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v anonymous\:set_pose}
{\xe \v set_pose\:anonymous}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.anonymous}}
\par
{\bkmkstart AAAAAAADVF}
{\bkmkend AAAAAAADVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pose\:set_pose}
{\xe \v set_pose\:pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.pose = list(map(float, rospy.myargv()[1:4]))}}
\par
{\bkmkstart AAAAAAADVG}
{\bkmkend AAAAAAADVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pub\:set_pose}
{\xe \v set_pose\:pub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.pub = rospy.Publisher("initialpose", PoseWithCovarianceStamped, {\b PoseSetter}({\b pose}, stamp={\b t_stamp}, publish_time={\b t_publish}), queue_size=1)}}
\par
{\bkmkstart AAAAAAADVH}
{\bkmkend AAAAAAADVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t_publish\:set_pose}
{\xe \v set_pose\:t_publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.t_publish = rospy.Time()}}
\par
{\bkmkstart AAAAAAADVI}
{\bkmkend AAAAAAADVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v t_stamp\:set_pose}
{\xe \v set_pose\:t_stamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.t_stamp = rospy.Time()}}
\par
{\bkmkstart AAAAAAADVJ}
{\bkmkend AAAAAAADVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
setup \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v setup}
{\xe \v setup}
{\bkmkstart AAAAAAADVQ}
{\bkmkend AAAAAAADVQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b d}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v d\:setup}
{\xe \v setup\:d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
setup.d}}
\par
{\bkmkstart AAAAAAADVR}
{\bkmkend AAAAAAADVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 =  generate_distutils_setup(\par
2     packages = [{\cf22 'local_planner_limits'}],\par
3     package_dir = \{{\cf22 ''}: {\cf22 'src'}\},\par
4     )\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
static_odom_broadcaster \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v static_odom_broadcaster}
{\xe \v static_odom_broadcaster}
{\bkmkstart AAAAAAADVS}
{\bkmkend AAAAAAADVS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b publishOdom} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v publishOdom\:static_odom_broadcaster}
{\xe \v static_odom_broadcaster\:publishOdom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def static_odom_broadcaster.publishOdom ()}}
\par
{\bkmkstart AAAAAAADVT}
{\bkmkend AAAAAAADVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacestatic__odom__broadcaster_ac64cc5324fdcfe744e1786d65093bc2c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "namespacestatic__odom__broadcaster_ac64cc5324fdcfe744e1786d65093bc2c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
tmap2 \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v tmap2}
{\xe \v tmap2}
{\bkmkstart AAAAAAADVU}
{\bkmkend AAAAAAADVU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b g_valid_image_content} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b g_valid_image_res} = 0.1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b g_valid_image_width} = 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b g_valid_image_height} = 12\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g_valid_image_content\:tmap2}
{\xe \v tmap2\:g_valid_image_content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char tmap2::g_valid_image_content}}
\par
{\bkmkstart AAAAAAADVV}
{\bkmkend AAAAAAADVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  100,100,100,100,100,100,100,100,100,100,100,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,0,100,100,100,100,100,100,100,100,0,100,\par
  100,0,100,0,0,0,0,0,0,100,0,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,0,100,0,0,0,0,0,0,100,0,100,\par
  100,0,0,0,0,0,0,0,0,0,0,100,\par
  100,100,100,100,100,100,100,100,100,100,100,100,\par
  \}\par
}
}
{\xe \v g_valid_image_height\:tmap2}
{\xe \v tmap2\:g_valid_image_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int tmap2::g_valid_image_height = 12}}
\par
{\bkmkstart AAAAAAADVW}
{\bkmkend AAAAAAADVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_res\:tmap2}
{\xe \v tmap2\:g_valid_image_res}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float tmap2::g_valid_image_res = 0.1}}
\par
{\bkmkstart AAAAAAADVX}
{\bkmkend AAAAAAADVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_width\:tmap2}
{\xe \v tmap2\:g_valid_image_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int tmap2::g_valid_image_width = 12}}
\par
{\bkmkstart AAAAAAADVY}
{\bkmkend AAAAAAADVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid \'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid}
{\xe \v voxel_grid}
{\bkmkstart AAAAAAADVZ}
{\bkmkend AAAAAAADVZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VoxelGrid}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b VoxelStatus} \{ {\b FREE} = 0
, {\b UNKNOWN} = 1
, {\b MARKED} = 2
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v VoxelStatus\:voxel_grid}
{\xe \v voxel_grid\:VoxelStatus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b voxel_grid::VoxelStatus}}}
\par
{\bkmkstart AAAAAAADWA}
{\bkmkend AAAAAAADWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v FREE\:voxel_grid}
{\xe \v voxel_grid\:FREE}
{\qr FREE{\bkmkstart AAAAAAADWB}
{\bkmkend AAAAAAADWB}
\cell }{\cell }{\row }
{\xe \v UNKNOWN\:voxel_grid}
{\xe \v voxel_grid\:UNKNOWN}
{\qr UNKNOWN{\bkmkstart AAAAAAADWC}
{\bkmkend AAAAAAADWC}
\cell }{\cell }{\row }
{\xe \v MARKED\:voxel_grid}
{\xe \v voxel_grid\:MARKED}
{\qr MARKED{\bkmkstart AAAAAAADWD}
{\bkmkend AAAAAAADWD}
\cell }{\cell }{\row }
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'C0\'E0\'CB\'B5\'C3\'F7{\tc \v \'C0\'E0\'CB\'B5\'C3\'F7}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_pf_sample_set_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v _pf_sample_set_t}
{\xe \v _pf_sample_set_t}
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
\par
{
{\f2 #include <pf.h>}}\par
_pf_sample_set_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct__pf__sample__set__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sample_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_sample_t} * {\b samples}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_kdtree_t} * {\b kdtree}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cluster_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cluster_max_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_cluster_t} * {\b clusters}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b mean}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b cov}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b converged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b n_effective}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cluster_count\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:cluster_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_sample_set_t::cluster_count}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cluster_max_count\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:cluster_max_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_sample_set_t::cluster_max_count}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clusters\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:clusters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_cluster_t}* _pf_sample_set_t::clusters}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v converged\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:converged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_sample_set_t::converged}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cov\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:cov}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} _pf_sample_set_t::cov}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kdtree\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:kdtree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_t}* _pf_sample_set_t::kdtree}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mean\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:mean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} _pf_sample_set_t::mean}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v n_effective\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:n_effective}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_sample_set_t::n_effective}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sample_count\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:sample_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_sample_set_t::sample_count}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v samples\:_pf_sample_set_t}
{\xe \v _pf_sample_set_t\:samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_sample_t}* _pf_sample_set_t::samples}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_pf_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v _pf_t}
{\xe \v _pf_t}
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
\par
{
{\f2 #include <pf.h>}}\par
_pf_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "struct__pf__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b min_samples}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_samples}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pop_err}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pop_z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b limit_cache}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b current_set}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_sample_set_t} {\b sets} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b w_slow}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b w_fast}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha_slow}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha_fast}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_init_model_fn_t} {\b random_pose_fn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b random_pose_data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dist_threshold}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b converged}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b selective_resampling}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v alpha_fast\:_pf_t}
{\xe \v _pf_t\:alpha_fast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::alpha_fast}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha_slow\:_pf_t}
{\xe \v _pf_t\:alpha_slow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::alpha_slow}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v converged\:_pf_t}
{\xe \v _pf_t\:converged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_t::converged}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v current_set\:_pf_t}
{\xe \v _pf_t\:current_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_t::current_set}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dist_threshold\:_pf_t}
{\xe \v _pf_t\:dist_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::dist_threshold}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limit_cache\:_pf_t}
{\xe \v _pf_t\:limit_cache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* _pf_t::limit_cache}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_samples\:_pf_t}
{\xe \v _pf_t\:max_samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_t::max_samples}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_samples\:_pf_t}
{\xe \v _pf_t\:min_samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_t::min_samples}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pop_err\:_pf_t}
{\xe \v _pf_t\:pop_err}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::pop_err}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pop_z\:_pf_t}
{\xe \v _pf_t\:pop_z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::pop_z}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v random_pose_data\:_pf_t}
{\xe \v _pf_t\:random_pose_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* _pf_t::random_pose_data}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v random_pose_fn\:_pf_t}
{\xe \v _pf_t\:random_pose_fn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_init_model_fn_t} _pf_t::random_pose_fn}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selective_resampling\:_pf_t}
{\xe \v _pf_t\:selective_resampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int _pf_t::selective_resampling}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sets\:_pf_t}
{\xe \v _pf_t\:sets}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_sample_set_t} _pf_t::sets[2]}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v w_fast\:_pf_t}
{\xe \v _pf_t\:w_fast}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::w_fast}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v w_slow\:_pf_t}
{\xe \v _pf_t\:w_slow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double _pf_t::w_slow}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl_hyp_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl_hyp_t}
{\xe \v amcl_hyp_t}
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
amcl_hyp_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structamcl__hyp__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b weight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_pose_mean}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b pf_pose_cov}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_pose_cov\:amcl_hyp_t}
{\xe \v amcl_hyp_t\:pf_pose_cov}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} amcl_hyp_t::pf_pose_cov}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_pose_mean\:amcl_hyp_t}
{\xe \v amcl_hyp_t\:pf_pose_mean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} amcl_hyp_t::pf_pose_mean}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v weight\:amcl_hyp_t}
{\xe \v amcl_hyp_t\:weight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl_hyp_t::weight}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/{\b amcl_node.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl::AMCLLaser\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser}
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
\par
{
{\f2 #include <amcl_laser.h>}}\par
\'C0\'E0 amcl::AMCLLaser \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
amcl::AMCLLaser \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLLaser} (size_t {\b max_beams}, {\b map_t} *{\b map})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AMCLLaser} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetModelBeam} (double {\b z_hit}, double {\b z_short}, double {\b z_max}, double {\b z_rand}, double {\b sigma_hit}, double {\b lambda_short}, double {\b chi_outlier})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetModelLikelihoodField} (double {\b z_hit}, double {\b z_rand}, double {\b sigma_hit}, double max_occ_dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetModelLikelihoodFieldProb} (double {\b z_hit}, double {\b z_rand}, double {\b sigma_hit}, double max_occ_dist, bool {\b do_beamskip}, double {\b beam_skip_distance}, double {\b beam_skip_threshold}, double {\b beam_skip_error_threshold})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b UpdateSensor} ({\b pf_t} *pf, {\b AMCLSensorData} *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetLaserPose} ({\b pf_vector_t} &{\b laser_pose})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reallocTempData} (int {\b max_samples}, int {\b max_obs})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b BeamModel} ({\b AMCLLaserData} *data, {\b pf_sample_set_t} *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b LikelihoodFieldModel} ({\b AMCLLaserData} *data, {\b pf_sample_set_t} *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b LikelihoodFieldModelProb} ({\b AMCLLaserData} *data, {\b pf_sample_set_t} *set)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b laser_model_t} {\b model_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_t} * {\b map}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b laser_pose}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_beams}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b do_beamskip}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b beam_skip_distance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b beam_skip_threshold}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b beam_skip_error_threshold}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_samples}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_obs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double ** {\b temp_obs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_hit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_short}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_max}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_rand}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sigma_hit}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lambda_short}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b chi_outlier}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AMCLLaser\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:AMCLLaser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AMCLLaser::AMCLLaser (size_t  {\i max_beams}, {\b map_t} *  {\i map})}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AMCLLaser\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:~AMCLLaser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AMCLLaser::~AMCLLaser (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v BeamModel\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:BeamModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AMCLLaser::BeamModel ({\b AMCLLaserData} *  {\i data}, {\b pf_sample_set_t} *  {\i set}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_a9cc5e4e32e3f5a1d3051729928215b35_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_a9cc5e4e32e3f5a1d3051729928215b35_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v LikelihoodFieldModel\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:LikelihoodFieldModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AMCLLaser::LikelihoodFieldModel ({\b AMCLLaserData} *  {\i data}, {\b pf_sample_set_t} *  {\i set}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_a0b48b3b2f50003cec1ba3adf2792bacc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_a0b48b3b2f50003cec1ba3adf2792bacc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v LikelihoodFieldModelProb\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:LikelihoodFieldModelProb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AMCLLaser::LikelihoodFieldModelProb ({\b AMCLLaserData} *  {\i data}, {\b pf_sample_set_t} *  {\i set}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_ab7b28821a86e6057ab81241f304bc2a2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_ab7b28821a86e6057ab81241f304bc2a2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reallocTempData\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:reallocTempData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLLaser::reallocTempData (int  {\i max_samples}, int  {\i max_obs}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_aaab1b8b1be18b2e14b81229e4f4e8d13_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v SetLaserPose\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:SetLaserPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void amcl::AMCLLaser::SetLaserPose ({\b pf_vector_t} &  {\i laser_pose}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetModelBeam\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:SetModelBeam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLLaser::SetModelBeam (double  {\i z_hit}, double  {\i z_short}, double  {\i z_max}, double  {\i z_rand}, double  {\i sigma_hit}, double  {\i lambda_short}, double  {\i chi_outlier})}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_affc6d5bb46e3f7ae7320f4fe0f959d4e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v SetModelLikelihoodField\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:SetModelLikelihoodField}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLLaser::SetModelLikelihoodField (double  {\i z_hit}, double  {\i z_rand}, double  {\i sigma_hit}, double  {\i max_occ_dist})}}
\par
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_ab9115fca9c56ad6f745efe8442c2d52f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_ab9115fca9c56ad6f745efe8442c2d52f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v SetModelLikelihoodFieldProb\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:SetModelLikelihoodFieldProb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLLaser::SetModelLikelihoodFieldProb (double  {\i z_hit}, double  {\i z_rand}, double  {\i sigma_hit}, double  {\i max_occ_dist}, bool  {\i do_beamskip}, double  {\i beam_skip_distance}, double  {\i beam_skip_threshold}, double  {\i beam_skip_error_threshold})}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_acdde5209bb6d160b6b561742036fcb09_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_acdde5209bb6d160b6b561742036fcb09_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v UpdateSensor\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:UpdateSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AMCLLaser::UpdateSensor ({\b pf_t} *  {\i pf}, {\b AMCLSensorData} *  {\i data}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b amcl::AMCLSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_a179090d0bcf37e2a3927010e5726ffe7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v beam_skip_distance\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:beam_skip_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::beam_skip_distance{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v beam_skip_error_threshold\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:beam_skip_error_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::beam_skip_error_threshold{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v beam_skip_threshold\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:beam_skip_threshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::beam_skip_threshold{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v chi_outlier\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:chi_outlier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::chi_outlier{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v do_beamskip\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:do_beamskip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool amcl::AMCLLaser::do_beamskip{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lambda_short\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:lambda_short}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::lambda_short{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_pose\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:laser_pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} amcl::AMCLLaser::laser_pose{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_t}* amcl::AMCLLaser::map{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_beams\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:max_beams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int amcl::AMCLLaser::max_beams{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_obs\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:max_obs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int amcl::AMCLLaser::max_obs{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_samples\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:max_samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int amcl::AMCLLaser::max_samples{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v model_type\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:model_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b laser_model_t} amcl::AMCLLaser::model_type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sigma_hit\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:sigma_hit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::sigma_hit{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v temp_obs\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:temp_obs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double** amcl::AMCLLaser::temp_obs{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::time{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_hit\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:z_hit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::z_hit{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_max\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:z_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::z_max{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_rand\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:z_rand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::z_rand{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_short\:amcl::AMCLLaser}
{\xe \v amcl::AMCLLaser\:z_short}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaser::z_short{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/sensors/{\b amcl_laser.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/amcl/sensors/{\b amcl_laser.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl::AMCLLaserData\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl::AMCLLaserData}
{\xe \v amcl::AMCLLaserData}
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
\par
{
{\f2 #include <amcl_laser.h>}}\par
\'C0\'E0 amcl::AMCLLaserData \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_data__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
amcl::AMCLLaserData \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_laser_data__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLLaserData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AMCLLaserData} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b range_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b range_max}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double(* {\b ranges} )[2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AMCLLaserData\:amcl::AMCLLaserData}
{\xe \v amcl::AMCLLaserData\:AMCLLaserData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
amcl::AMCLLaserData::AMCLLaserData (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AMCLLaserData\:amcl::AMCLLaserData}
{\xe \v amcl::AMCLLaserData\:~AMCLLaserData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual amcl::AMCLLaserData::~AMCLLaserData (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v range_count\:amcl::AMCLLaserData}
{\xe \v amcl::AMCLLaserData\:range_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int amcl::AMCLLaserData::range_count}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v range_max\:amcl::AMCLLaserData}
{\xe \v amcl::AMCLLaserData\:range_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLLaserData::range_max}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ranges\:amcl::AMCLLaserData}
{\xe \v amcl::AMCLLaserData\:ranges}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double(* amcl::AMCLLaserData::ranges)[2]}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/sensors/{\b amcl_laser.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
AmclNode\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v AmclNode}
{\xe \v AmclNode}
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
AmclNode \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AmclNode} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~AmclNode} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b runFromBag} (const std::string &in_bag_fn, bool trigger_global_localization=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses TF and LaserScan messages from bag file to drive AMCL instead }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b process} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b savePoseToServer} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b globalLocalizationCallback} (std_srvs::Empty::Request &req, std_srvs::Empty::Response &res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nomotionUpdateCallback} (std_srvs::Empty::Request &req, std_srvs::Empty::Response &res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setMapCallback} (nav_msgs::SetMap::Request &req, nav_msgs::SetMap::Response &res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b laserReceived} (const sensor_msgs::LaserScanConstPtr &laser_scan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialPoseReceived} (const geometry_msgs::PoseWithCovarianceStampedConstPtr &msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleInitialPoseMessage} (const geometry_msgs::PoseWithCovarianceStamped &msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapReceived} (const nav_msgs::OccupancyGridConstPtr &msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleMapMessage} (const nav_msgs::OccupancyGrid &msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b freeMapDependentMemory} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_t} * {\b convertMap} (const nav_msgs::OccupancyGrid &map_msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatePoseFromServer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b applyInitialPose} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b requestMap} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getOdomPose} (geometry_msgs::PoseStamped &pose, double &x, double &y, double &yaw, const ros::Time &t, const std::string &f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b standardDeviationDiagnostics} (diagnostic_updater::DiagnosticStatusWrapper &diagnostic_status)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (amcl::AMCLConfig &config, uint32_t level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkLaserReceived} (const ros::TimerEvent &event)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b pf_vector_t} {\b uniformPoseGenerator} (void *arg)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< tf2_ros::TransformBroadcaster > {\b tfb_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< tf2_ros::TransformListener > {\b tfl_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::shared_ptr< tf2_ros::Buffer > {\b tf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b sent_first_transform_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2::Transform {\b latest_tf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b latest_tf_valid_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b odom_frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b latest_odom_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b base_frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b use_map_topic_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b first_map_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Duration {\b gui_publish_period}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b save_pose_last_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Duration {\b save_pose_period}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseWithCovarianceStamped {\b last_published_pose}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_t} * {\b map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b mapdata}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b resolution}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
message_filters::Subscriber< sensor_msgs::LaserScan > * {\b laser_scan_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::MessageFilter< sensor_msgs::LaserScan > * {\b laser_scan_filter_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b initial_pose_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b AMCLLaser} * > {\b lasers_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< bool > {\b lasers_update_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< std::string, int > {\b frame_to_laser_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_t} * {\b pf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pf_err_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pf_z_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b pf_init_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_odom_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b d_thresh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b a_thresh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b resample_interval_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b resample_count_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b laser_min_range_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b laser_max_range_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_force_update}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLOdom} * {\b odom_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLLaser} * {\b laser_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Duration {\b cloud_pub_interval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_cloud_pub_time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::WallDuration {\b bag_scan_period_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Duration {\b transform_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b nh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b private_nh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b pose_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b particlecloud_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b global_loc_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b nomotion_update_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b set_map_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b initial_pose_sub_old_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b map_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
diagnostic_updater::Updater {\b diagnosic_updater_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b std_warn_level_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b std_warn_level_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b std_warn_level_yaw_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b amcl_hyp_t} * {\b initial_pose_hyp_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b first_map_received_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b first_reconfigure_call_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex {\b configuration_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< amcl::AMCLConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl::AMCLConfig {\b default_config_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Timer {\b check_laser_timer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_beams_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b min_particles_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_particles_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha1_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha2_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha3_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha4_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha5_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha_slow_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha_fast_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_hit_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_short_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_max_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_rand_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sigma_hit_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lambda_short_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b do_beamskip_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b beam_skip_distance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b beam_skip_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b beam_skip_error_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b laser_likelihood_max_dist_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b odom_model_t} {\b odom_model_type_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b init_pose_} [3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b init_cov_} [3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b laser_model_t} {\b laser_model_type_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tf_broadcast_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b selective_resampling_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_laser_received_ts_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Duration {\b laser_check_interval_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static std::vector< std::pair< int, int > > {\b free_space_indices}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AmclNode\:AmclNode}
{\xe \v AmclNode\:AmclNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AmclNode::AmclNode ()}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a41e7de8ffa5fdb0aaf4e0d8083950080_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~AmclNode\:AmclNode}
{\xe \v AmclNode\:~AmclNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AmclNode::~AmclNode ()}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a3aaabb3a67f2a4f8637c64c99e55087e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v applyInitialPose\:AmclNode}
{\xe \v AmclNode\:applyInitialPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::applyInitialPose (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If initial_pose_hyp_ and map_ are both non-null, apply the initial pose to the particle filter state. initial_pose_hyp_ is deleted and set to NULL after it is used. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a58c92caa391a8e7b5061778c724ffa4c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a58c92caa391a8e7b5061778c724ffa4c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v checkLaserReceived\:AmclNode}
{\xe \v AmclNode\:checkLaserReceived}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::checkLaserReceived (const ros::TimerEvent &  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a74d02277d002b2bec9e6e0cc86a0fd51_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v convertMap\:AmclNode}
{\xe \v AmclNode\:convertMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_t} * AmclNode::convertMap (const nav_msgs::OccupancyGrid &  {\i map_msg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert an OccupancyGrid map message into the internal representation. This allocates a {\b map_t} and returns it. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a2a81d4aceba212bde82ce4044d18a55d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a2a81d4aceba212bde82ce4044d18a55d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v freeMapDependentMemory\:AmclNode}
{\xe \v AmclNode\:freeMapDependentMemory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::freeMapDependentMemory (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a6ee0c6604650ae544c08be36df176e4d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a6ee0c6604650ae544c08be36df176e4d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getOdomPose\:AmclNode}
{\xe \v AmclNode\:getOdomPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::getOdomPose (geometry_msgs::PoseStamped &  {\i pose}, double &  {\i x}, double &  {\i y}, double &  {\i yaw}, const ros::Time &  {\i t}, const std::string &  {\i f}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a3c4e7d02b1dae91cfa328e149a61c908_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a3c4e7d02b1dae91cfa328e149a61c908_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v globalLocalizationCallback\:AmclNode}
{\xe \v AmclNode\:globalLocalizationCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::globalLocalizationCallback (std_srvs::Empty::Request &  {\i req}, std_srvs::Empty::Response &  {\i res}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_aba65e228a714fb29a56d179975dc6ad3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_aba65e228a714fb29a56d179975dc6ad3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleInitialPoseMessage\:AmclNode}
{\xe \v AmclNode\:handleInitialPoseMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::handleInitialPoseMessage (const geometry_msgs::PoseWithCovarianceStamped &  {\i msg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_aa0f02087f8d57a91834cc911aa7330b4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_aa0f02087f8d57a91834cc911aa7330b4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleMapMessage\:AmclNode}
{\xe \v AmclNode\:handleMapMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::handleMapMessage (const nav_msgs::OccupancyGrid &  {\i msg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a1e5dc369ab11dfe26dc1ec996ab423a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a1e5dc369ab11dfe26dc1ec996ab423a6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialPoseReceived\:AmclNode}
{\xe \v AmclNode\:initialPoseReceived}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::initialPoseReceived (const geometry_msgs::PoseWithCovarianceStampedConstPtr &  {\i msg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a5bab30a294236094c90192b25696bf75_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a5bab30a294236094c90192b25696bf75_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v laserReceived\:AmclNode}
{\xe \v AmclNode\:laserReceived}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::laserReceived (const sensor_msgs::LaserScanConstPtr &  {\i laser_scan}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
important: \'CA\'C7\'B7\'F1\'D0\'E8\'D2\'AA\'B8\'FC\'D0\'C2\'C2\'CB\'B2\'A8\'C6\'F7\par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a701205b2f4b7373a2ab1caa039eed8a5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a701205b2f4b7373a2ab1caa039eed8a5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapReceived\:AmclNode}
{\xe \v AmclNode\:mapReceived}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::mapReceived (const nav_msgs::OccupancyGridConstPtr &  {\i msg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a4b33c46a29dd9ecd0b974fe560b8b6d7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a4b33c46a29dd9ecd0b974fe560b8b6d7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v nomotionUpdateCallback\:AmclNode}
{\xe \v AmclNode\:nomotionUpdateCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::nomotionUpdateCallback (std_srvs::Empty::Request &  {\i req}, std_srvs::Empty::Response &  {\i res}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a8fd3afc197768b5f9c2c92945c566688_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v process\:AmclNode}
{\xe \v AmclNode\:process}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::process ()}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reconfigureCB\:AmclNode}
{\xe \v AmclNode\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::reconfigureCB (amcl::AMCLConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a2a32d93809d3e60334c312f807b020a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a2a32d93809d3e60334c312f807b020a6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v requestMap\:AmclNode}
{\xe \v AmclNode\:requestMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::requestMap (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a037c523da934628d0dd126c108266e3b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a037c523da934628d0dd126c108266e3b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v runFromBag\:AmclNode}
{\xe \v AmclNode\:runFromBag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::runFromBag (const std::string &  {\i in_bag_fn}, bool  {\i trigger_global_localization} = {\f2 false})}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses TF and LaserScan messages from bag file to drive AMCL instead }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i in_bag_fn} \cell }{input bagfile \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i trigger_global_localization} \cell }{whether to trigger global localization before starting to process the bagfile \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a0cf31d50e34411030c9046f8a12ae8cb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v savePoseToServer\:AmclNode}
{\xe \v AmclNode\:savePoseToServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::savePoseToServer ()}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_abdb37d978f9827e356cee35687a108ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setMapCallback\:AmclNode}
{\xe \v AmclNode\:setMapCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::setMapCallback (nav_msgs::SetMap::Request &  {\i req}, nav_msgs::SetMap::Response &  {\i res}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_aa7fe96700205b23c00dda87af08a77a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_aa7fe96700205b23c00dda87af08a77a6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v standardDeviationDiagnostics\:AmclNode}
{\xe \v AmclNode\:standardDeviationDiagnostics}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::standardDeviationDiagnostics (diagnostic_updater::DiagnosticStatusWrapper &  {\i diagnostic_status}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_a40ba76725d139a2b2b5af4cbcac18d51_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v uniformPoseGenerator\:AmclNode}
{\xe \v AmclNode\:uniformPoseGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} AmclNode::uniformPoseGenerator (void *  {\i arg}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_abf847690811aef2483524b793ad6ab1c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_abf847690811aef2483524b793ad6ab1c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updatePoseFromServer\:AmclNode}
{\xe \v AmclNode\:updatePoseFromServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AmclNode::updatePoseFromServer (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_amcl_node_ad17d58102ca153b5367345bea68732f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v a_thresh_\:AmclNode}
{\xe \v AmclNode\:a_thresh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::a_thresh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha1_\:AmclNode}
{\xe \v AmclNode\:alpha1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha1_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha2_\:AmclNode}
{\xe \v AmclNode\:alpha2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha2_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha3_\:AmclNode}
{\xe \v AmclNode\:alpha3_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha3_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha4_\:AmclNode}
{\xe \v AmclNode\:alpha4_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha4_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha5_\:AmclNode}
{\xe \v AmclNode\:alpha5_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha5_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha_fast_\:AmclNode}
{\xe \v AmclNode\:alpha_fast_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha_fast_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha_slow_\:AmclNode}
{\xe \v AmclNode\:alpha_slow_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::alpha_slow_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bag_scan_period_\:AmclNode}
{\xe \v AmclNode\:bag_scan_period_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::WallDuration AmclNode::bag_scan_period_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v base_frame_id_\:AmclNode}
{\xe \v AmclNode\:base_frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string AmclNode::base_frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v beam_skip_distance_\:AmclNode}
{\xe \v AmclNode\:beam_skip_distance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::beam_skip_distance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v beam_skip_error_threshold_\:AmclNode}
{\xe \v AmclNode\:beam_skip_error_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::beam_skip_error_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v beam_skip_threshold_\:AmclNode}
{\xe \v AmclNode\:beam_skip_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::beam_skip_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v check_laser_timer_\:AmclNode}
{\xe \v AmclNode\:check_laser_timer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Timer AmclNode::check_laser_timer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cloud_pub_interval\:AmclNode}
{\xe \v AmclNode\:cloud_pub_interval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Duration AmclNode::cloud_pub_interval{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v configuration_mutex_\:AmclNode}
{\xe \v AmclNode\:configuration_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex AmclNode::configuration_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v d_thresh_\:AmclNode}
{\xe \v AmclNode\:d_thresh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::d_thresh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_config_\:AmclNode}
{\xe \v AmclNode\:default_config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
amcl::AMCLConfig AmclNode::default_config_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v diagnosic_updater_\:AmclNode}
{\xe \v AmclNode\:diagnosic_updater_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
diagnostic_updater::Updater AmclNode::diagnosic_updater_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v do_beamskip_\:AmclNode}
{\xe \v AmclNode\:do_beamskip_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::do_beamskip_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:AmclNode}
{\xe \v AmclNode\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<amcl::AMCLConfig>* AmclNode::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v first_map_only_\:AmclNode}
{\xe \v AmclNode\:first_map_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::first_map_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v first_map_received_\:AmclNode}
{\xe \v AmclNode\:first_map_received_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::first_map_received_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v first_reconfigure_call_\:AmclNode}
{\xe \v AmclNode\:first_reconfigure_call_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::first_reconfigure_call_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frame_to_laser_\:AmclNode}
{\xe \v AmclNode\:frame_to_laser_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map< std::string, int > AmclNode::frame_to_laser_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free_space_indices\:AmclNode}
{\xe \v AmclNode\:free_space_indices}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::pair< int, int > > AmclNode::free_space_indices{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_id_\:AmclNode}
{\xe \v AmclNode\:global_frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string AmclNode::global_frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_loc_srv_\:AmclNode}
{\xe \v AmclNode\:global_loc_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer AmclNode::global_loc_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gui_publish_period\:AmclNode}
{\xe \v AmclNode\:gui_publish_period}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Duration AmclNode::gui_publish_period{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v init_cov_\:AmclNode}
{\xe \v AmclNode\:init_cov_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::init_cov_[3]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v init_pose_\:AmclNode}
{\xe \v AmclNode\:init_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::init_pose_[3]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initial_pose_hyp_\:AmclNode}
{\xe \v AmclNode\:initial_pose_hyp_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b amcl_hyp_t}* AmclNode::initial_pose_hyp_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initial_pose_sub_\:AmclNode}
{\xe \v AmclNode\:initial_pose_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber AmclNode::initial_pose_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initial_pose_sub_old_\:AmclNode}
{\xe \v AmclNode\:initial_pose_sub_old_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber AmclNode::initial_pose_sub_old_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lambda_short_\:AmclNode}
{\xe \v AmclNode\:lambda_short_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::lambda_short_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_\:AmclNode}
{\xe \v AmclNode\:laser_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AMCLLaser}* AmclNode::laser_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_check_interval_\:AmclNode}
{\xe \v AmclNode\:laser_check_interval_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Duration AmclNode::laser_check_interval_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_likelihood_max_dist_\:AmclNode}
{\xe \v AmclNode\:laser_likelihood_max_dist_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::laser_likelihood_max_dist_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_max_range_\:AmclNode}
{\xe \v AmclNode\:laser_max_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::laser_max_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_min_range_\:AmclNode}
{\xe \v AmclNode\:laser_min_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::laser_min_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_model_type_\:AmclNode}
{\xe \v AmclNode\:laser_model_type_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b laser_model_t} AmclNode::laser_model_type_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_scan_filter_\:AmclNode}
{\xe \v AmclNode\:laser_scan_filter_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::MessageFilter<sensor_msgs::LaserScan>* AmclNode::laser_scan_filter_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v laser_scan_sub_\:AmclNode}
{\xe \v AmclNode\:laser_scan_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
message_filters::Subscriber<sensor_msgs::LaserScan>* AmclNode::laser_scan_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lasers_\:AmclNode}
{\xe \v AmclNode\:lasers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< {\b AMCLLaser}* > AmclNode::lasers_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lasers_update_\:AmclNode}
{\xe \v AmclNode\:lasers_update_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< bool > AmclNode::lasers_update_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_cloud_pub_time\:AmclNode}
{\xe \v AmclNode\:last_cloud_pub_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time AmclNode::last_cloud_pub_time{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_laser_received_ts_\:AmclNode}
{\xe \v AmclNode\:last_laser_received_ts_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time AmclNode::last_laser_received_ts_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_published_pose\:AmclNode}
{\xe \v AmclNode\:last_published_pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseWithCovarianceStamped AmclNode::last_published_pose{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v latest_odom_pose_\:AmclNode}
{\xe \v AmclNode\:latest_odom_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped AmclNode::latest_odom_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v latest_tf_\:AmclNode}
{\xe \v AmclNode\:latest_tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2::Transform AmclNode::latest_tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v latest_tf_valid_\:AmclNode}
{\xe \v AmclNode\:latest_tf_valid_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::latest_tf_valid_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_force_update\:AmclNode}
{\xe \v AmclNode\:m_force_update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::m_force_update{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_\:AmclNode}
{\xe \v AmclNode\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_t}* AmclNode::map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_sub_\:AmclNode}
{\xe \v AmclNode\:map_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber AmclNode::map_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mapdata\:AmclNode}
{\xe \v AmclNode\:mapdata}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* AmclNode::mapdata{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_beams_\:AmclNode}
{\xe \v AmclNode\:max_beams_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::max_beams_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_particles_\:AmclNode}
{\xe \v AmclNode\:max_particles_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::max_particles_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_particles_\:AmclNode}
{\xe \v AmclNode\:min_particles_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::min_particles_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nh_\:AmclNode}
{\xe \v AmclNode\:nh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle AmclNode::nh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nomotion_update_srv_\:AmclNode}
{\xe \v AmclNode\:nomotion_update_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer AmclNode::nomotion_update_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_\:AmclNode}
{\xe \v AmclNode\:odom_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AMCLOdom}* AmclNode::odom_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_frame_id_\:AmclNode}
{\xe \v AmclNode\:odom_frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string AmclNode::odom_frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_model_type_\:AmclNode}
{\xe \v AmclNode\:odom_model_type_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b odom_model_t} AmclNode::odom_model_type_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v particlecloud_pub_\:AmclNode}
{\xe \v AmclNode\:particlecloud_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher AmclNode::particlecloud_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_\:AmclNode}
{\xe \v AmclNode\:pf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_t}* AmclNode::pf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_err_\:AmclNode}
{\xe \v AmclNode\:pf_err_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::pf_err_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_init_\:AmclNode}
{\xe \v AmclNode\:pf_init_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::pf_init_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_odom_pose_\:AmclNode}
{\xe \v AmclNode\:pf_odom_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} AmclNode::pf_odom_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_z_\:AmclNode}
{\xe \v AmclNode\:pf_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::pf_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pose_pub_\:AmclNode}
{\xe \v AmclNode\:pose_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher AmclNode::pose_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v private_nh_\:AmclNode}
{\xe \v AmclNode\:private_nh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle AmclNode::private_nh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resample_count_\:AmclNode}
{\xe \v AmclNode\:resample_count_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::resample_count_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resample_interval_\:AmclNode}
{\xe \v AmclNode\:resample_interval_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::resample_interval_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resolution\:AmclNode}
{\xe \v AmclNode\:resolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::resolution{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v save_pose_last_time\:AmclNode}
{\xe \v AmclNode\:save_pose_last_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time AmclNode::save_pose_last_time{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v save_pose_period\:AmclNode}
{\xe \v AmclNode\:save_pose_period}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Duration AmclNode::save_pose_period{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v selective_resampling_\:AmclNode}
{\xe \v AmclNode\:selective_resampling_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::selective_resampling_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sent_first_transform_\:AmclNode}
{\xe \v AmclNode\:sent_first_transform_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::sent_first_transform_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_map_srv_\:AmclNode}
{\xe \v AmclNode\:set_map_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer AmclNode::set_map_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sigma_hit_\:AmclNode}
{\xe \v AmclNode\:sigma_hit_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::sigma_hit_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v std_warn_level_x_\:AmclNode}
{\xe \v AmclNode\:std_warn_level_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::std_warn_level_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v std_warn_level_y_\:AmclNode}
{\xe \v AmclNode\:std_warn_level_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::std_warn_level_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v std_warn_level_yaw_\:AmclNode}
{\xe \v AmclNode\:std_warn_level_yaw_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::std_warn_level_yaw_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sx\:AmclNode}
{\xe \v AmclNode\:sx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::sx{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sy\:AmclNode}
{\xe \v AmclNode\:sy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int AmclNode::sy{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:AmclNode}
{\xe \v AmclNode\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<tf2_ros::Buffer> AmclNode::tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_broadcast_\:AmclNode}
{\xe \v AmclNode\:tf_broadcast_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::tf_broadcast_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tfb_\:AmclNode}
{\xe \v AmclNode\:tfb_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<tf2_ros::TransformBroadcaster> AmclNode::tfb_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tfl_\:AmclNode}
{\xe \v AmclNode\:tfl_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::shared_ptr<tf2_ros::TransformListener> AmclNode::tfl_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transform_tolerance_\:AmclNode}
{\xe \v AmclNode\:transform_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Duration AmclNode::transform_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v use_map_topic_\:AmclNode}
{\xe \v AmclNode\:use_map_topic_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AmclNode::use_map_topic_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_hit_\:AmclNode}
{\xe \v AmclNode\:z_hit_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::z_hit_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_max_\:AmclNode}
{\xe \v AmclNode\:z_max_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::z_max_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_rand_\:AmclNode}
{\xe \v AmclNode\:z_rand_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::z_rand_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_short_\:AmclNode}
{\xe \v AmclNode\:z_short_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double AmclNode::z_short_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/{\b amcl_node.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl::AMCLOdom\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom}
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\par
{
{\f2 #include <amcl_odom.h>}}\par
\'C0\'E0 amcl::AMCLOdom \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
amcl::AMCLOdom \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLOdom} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetModelDiff} (double {\b alpha1}, double {\b alpha2}, double {\b alpha3}, double {\b alpha4})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetModelOmni} (double {\b alpha1}, double {\b alpha2}, double {\b alpha3}, double {\b alpha4}, double {\b alpha5})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetModel} ({\b odom_model_t} type, double {\b alpha1}, double {\b alpha2}, double {\b alpha3}, double {\b alpha4}, double {\b alpha5}=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b UpdateAction} ({\b pf_t} *pf, {\b AMCLSensorData} *data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b time}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b odom_model_t} {\b model_type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b alpha5}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AMCLOdom\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:AMCLOdom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AMCLOdom::AMCLOdom ()}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v SetModel\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:SetModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLOdom::SetModel ({\b odom_model_t}  {\i type}, double  {\i alpha1}, double  {\i alpha2}, double  {\i alpha3}, double  {\i alpha4}, double  {\i alpha5} = {\f2 0})}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom_a678c97475e8924ebc3541bfec91a65fc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v SetModelDiff\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:SetModelDiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLOdom::SetModelDiff (double  {\i alpha1}, double  {\i alpha2}, double  {\i alpha3}, double  {\i alpha4})}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetModelOmni\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:SetModelOmni}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void AMCLOdom::SetModelOmni (double  {\i alpha1}, double  {\i alpha2}, double  {\i alpha3}, double  {\i alpha4}, double  {\i alpha5})}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateAction\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:UpdateAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AMCLOdom::UpdateAction ({\b pf_t} *  {\i pf}, {\b AMCLSensorData} *  {\i data}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b amcl::AMCLSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLP \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom_a94a2e645cfae2fb775f454ebab9fa110_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom_a94a2e645cfae2fb775f454ebab9fa110_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v alpha1\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:alpha1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLOdom::alpha1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha2\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:alpha2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLOdom::alpha2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha3\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:alpha3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLOdom::alpha3{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha4\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:alpha4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLOdom::alpha4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v alpha5\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:alpha5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLOdom::alpha5{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v model_type\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:model_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b odom_model_t} amcl::AMCLOdom::model_type{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:amcl::AMCLOdom}
{\xe \v amcl::AMCLOdom\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLOdom::time{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/sensors/{\b amcl_odom.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/amcl/sensors/{\b amcl_odom.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl::AMCLOdomData\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl::AMCLOdomData}
{\xe \v amcl::AMCLOdomData}
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
\par
{
{\f2 #include <amcl_odom.h>}}\par
\'C0\'E0 amcl::AMCLOdomData \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom_data__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
amcl::AMCLOdomData \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_odom_data__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pose}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b delta}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v delta\:amcl::AMCLOdomData}
{\xe \v amcl::AMCLOdomData\:delta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} amcl::AMCLOdomData::delta}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pose\:amcl::AMCLOdomData}
{\xe \v amcl::AMCLOdomData\:pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} amcl::AMCLOdomData::pose}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/sensors/{\b amcl_odom.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl::AMCLSensor\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor}
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
\par
{
{\f2 #include <amcl_sensor.h>}}\par
\'C0\'E0 amcl::AMCLSensor \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_sensor__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
amcl::AMCLSensor \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_sensor__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLSensor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AMCLSensor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b UpdateAction} ({\b pf_t} *pf, {\b AMCLSensorData} *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b InitSensor} ({\b pf_t} *pf, {\b AMCLSensorData} *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b UpdateSensor} ({\b pf_t} *pf, {\b AMCLSensorData} *data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_action}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pose}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AMCLSensor\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:AMCLSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AMCLSensor::AMCLSensor ()}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AMCLSensor\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:~AMCLSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
AMCLSensor::~AMCLSensor (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v InitSensor\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:InitSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AMCLSensor::InitSensor ({\b pf_t} *  {\i pf}, {\b AMCLSensorData} *  {\i data}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UpdateAction\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:UpdateAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AMCLSensor::UpdateAction ({\b pf_t} *  {\i pf}, {\b AMCLSensorData} *  {\i data}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'B1\'BB {\b amcl::AMCLOdom} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABLO \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v UpdateSensor\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:UpdateSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool AMCLSensor::UpdateSensor ({\b pf_t} *  {\i pf}, {\b AMCLSensorData} *  {\i data}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'B1\'BB {\b amcl::AMCLLaser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABKI \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v is_action\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:is_action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool amcl::AMCLSensor::is_action}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pose\:amcl::AMCLSensor}
{\xe \v amcl::AMCLSensor\:pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} amcl::AMCLSensor::pose}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/sensors/{\b amcl_sensor.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/amcl/sensors/{\b amcl_sensor.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl::AMCLSensorData\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl::AMCLSensorData}
{\xe \v amcl::AMCLSensorData}
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
\par
{
{\f2 #include <amcl_sensor.h>}}\par
\'C0\'E0 amcl::AMCLSensorData \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_sensor_data__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
amcl::AMCLSensorData \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classamcl_1_1_a_m_c_l_sensor_data__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AMCLSensorData} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AMCLSensor} * {\b sensor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b time}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~AMCLSensorData\:amcl::AMCLSensorData}
{\xe \v amcl::AMCLSensorData\:~AMCLSensorData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual amcl::AMCLSensorData::~AMCLSensorData (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v sensor\:amcl::AMCLSensorData}
{\xe \v amcl::AMCLSensorData\:sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AMCLSensor}* amcl::AMCLSensorData::sensor}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v time\:amcl::AMCLSensorData}
{\xe \v amcl::AMCLSensorData\:time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double amcl::AMCLSensorData::time}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/sensors/{\b amcl_sensor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::AStarExpansion\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::AStarExpansion}
{\xe \v global_planner::AStarExpansion}
{\bkmkstart AAAAAAADEO}
{\bkmkend AAAAAAADEO}
\par
{
{\f2 #include <astar.h>}}\par
\'C0\'E0 global_planner::AStarExpansion \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_a_star_expansion__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::AStarExpansion \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_a_star_expansion__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AStarExpansion} ({\b PotentialCalculator} *p_calc, int nx, int ny)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~AStarExpansion} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b calculatePotentials} (unsigned char *costs, double start_x, double start_y, double end_x, double end_y, int cycles, float *potential)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b add} (unsigned char *costs, float *potential, float prev_potential, int next_i, int end_x, int end_y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b Index} > {\b queue_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v AStarExpansion\:global_planner::AStarExpansion}
{\xe \v global_planner::AStarExpansion\:AStarExpansion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::AStarExpansion::AStarExpansion ({\b PotentialCalculator} *  {\i p_calc}, int  {\i nx}, int  {\i ny})}}
\par
{\bkmkstart AAAAAAADEP}
{\bkmkend AAAAAAADEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~AStarExpansion\:global_planner::AStarExpansion}
{\xe \v global_planner::AStarExpansion\:~AStarExpansion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual global_planner::AStarExpansion::~AStarExpansion (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEQ}
{\bkmkend AAAAAAADEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v add\:global_planner::AStarExpansion}
{\xe \v global_planner::AStarExpansion\:add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::AStarExpansion::add (unsigned char *  {\i costs}, float *  {\i potential}, float  {\i prev_potential}, int  {\i next_i}, int  {\i end_x}, int  {\i end_y}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADER}
{\bkmkend AAAAAAADER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_a_star_expansion_a14922f2bde1222050478a4c6289ea874_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_a_star_expansion_a14922f2bde1222050478a4c6289ea874_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calculatePotentials\:global_planner::AStarExpansion}
{\xe \v global_planner::AStarExpansion\:calculatePotentials}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::AStarExpansion::calculatePotentials (unsigned char *  {\i costs}, double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, int  {\i cycles}, float *  {\i potential}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADES}
{\bkmkend AAAAAAADES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b global_planner::Expander} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_a_star_expansion_a71ddf1440a2f487c6f10af7a25757371_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v queue_\:global_planner::AStarExpansion}
{\xe \v global_planner::AStarExpansion\:queue_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b Index}> global_planner::AStarExpansion::queue_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEU}
{\bkmkend AAAAAAADEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b astar.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b astar.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core::BaseGlobalPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core::BaseGlobalPlanner}
{\xe \v nav_core::BaseGlobalPlanner}
{\bkmkstart AAAAAAADPL}
{\bkmkend AAAAAAADPL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA. navigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par
{
{\f2 #include <base_global_planner.h>}}\par
\'C0\'E0 nav_core::BaseGlobalPlanner \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnav__core_1_1_base_global_planner__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'D1\'D6\'AA\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan, double &cost)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'D1\'D6\'AA\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initialize} (std::string name, {\b costmap_2d::Costmap2DROS} *costmap_ros)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b BaseGlobalPlanner} \'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~BaseGlobalPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E9\'CE\'F6\'B9\'B9 }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BaseGlobalPlanner} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA. navigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~BaseGlobalPlanner\:nav_core::BaseGlobalPlanner}
{\xe \v nav_core::BaseGlobalPlanner\:~BaseGlobalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual nav_core::BaseGlobalPlanner::~BaseGlobalPlanner (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPM}
{\bkmkend AAAAAAADPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D0\'E9\'CE\'F6\'B9\'B9 }}\par
}
{\xe \v BaseGlobalPlanner\:nav_core::BaseGlobalPlanner}
{\xe \v nav_core::BaseGlobalPlanner\:BaseGlobalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_core::BaseGlobalPlanner::BaseGlobalPlanner (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADPN}
{\bkmkend AAAAAAADPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v initialize\:nav_core::BaseGlobalPlanner}
{\xe \v nav_core::BaseGlobalPlanner\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void nav_core::BaseGlobalPlanner::initialize (std::string  {\i name}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACJW}
{\bkmkend AAAAAAACJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b BaseGlobalPlanner} \'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{\'D6\'B8\'CF\'F2\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BCROS\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}{
\'D4\'DA {\b carrot_planner::CarrotPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b global_planner::GlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADGT \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b navfn::NavfnROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPO \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\xe \v makePlan\:nav_core::BaseGlobalPlanner}
{\xe \v nav_core::BaseGlobalPlanner\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool nav_core::BaseGlobalPlanner::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACJY}
{\bkmkend AAAAAAACJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'D1\'D6\'AA\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{\'C6\'F0\'CA\'BC\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'B1\'BB\'CC\'EE\'B3\'E4\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B1\'ED\'CA\'BE\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6 \par
}}}{
\'D4\'DA {\b carrot_planner::CarrotPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b global_planner::GlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADGV \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b navfn::NavfnROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPP \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnav__core_1_1_base_global_planner_ae34a7c7cf96ebdfaf6b33f24a646156c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:nav_core::BaseGlobalPlanner}
{\xe \v nav_core::BaseGlobalPlanner\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool nav_core::BaseGlobalPlanner::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}, double &  {\i cost}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPQ}
{\bkmkend AAAAAAADPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'D1\'D6\'AA\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{\'C6\'F0\'CA\'BC\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'B1\'BB\'CC\'EE\'B3\'E4\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cost} \cell }{\'B8\'C3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B5\'C4\'B4\'FA\'BC\'DB \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B1\'ED\'CA\'BE\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnav__core_1_1_base_global_planner_afbc2b0f16bdd55a8b619f9fb5b7aa8da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_core/include/nav_core/{\b base_global_planner.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core::BaseLocalPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner}
{\bkmkstart AAAAAAADPR}
{\bkmkend AAAAAAADPR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par
{
{\f2 #include <base_local_planner.h>}}\par
\'C0\'E0 nav_core::BaseLocalPlanner \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnav__core_1_1_base_local_planner__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b computeVelocityCommands} (geometry_msgs::Twist &cmd_vel)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'B1\'C7\'B0\'CE\'BB\'D6\'C3\'BA\'CD\'B3\'AF\'CF\'F2\'A3\'AC\'BB\'FA\'C6\'F7\'C8\'CB\'CB\'D9\'B6\'C8\'A3\'AC\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'B8\'F8\'B5\'D7\'D7\'F9\'B5\'C4\'CB\'D9\'B6\'C8\'C3\'FC\'C1\'EE }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b isGoalReached} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'CA\'C7\'B7\'F1\'D2\'D1\'BE\'AD\'B5\'BD\'B4\'EF\'C1\'CB\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b setPlan} (const std::vector< geometry_msgs::PoseStamped > &plan)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initialize} (std::string name, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *costmap_ros)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~BaseLocalPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BD\'D3\'BF\'DA\'B5\'C4\'D0\'E9\'CE\'F6\'B9\'B9 }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BaseLocalPlanner} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~BaseLocalPlanner\:nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner\:~BaseLocalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual nav_core::BaseLocalPlanner::~BaseLocalPlanner (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPS}
{\bkmkend AAAAAAADPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BD\'D3\'BF\'DA\'B5\'C4\'D0\'E9\'CE\'F6\'B9\'B9 }}\par
}
{\xe \v BaseLocalPlanner\:nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner\:BaseLocalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_core::BaseLocalPlanner::BaseLocalPlanner (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADPT}
{\bkmkend AAAAAAADPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v computeVelocityCommands\:nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner\:computeVelocityCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool nav_core::BaseLocalPlanner::computeVelocityCommands (geometry_msgs::Twist &  {\i cmd_vel}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACEQ}
{\bkmkend AAAAAAACEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'B1\'C7\'B0\'CE\'BB\'D6\'C3\'BA\'CD\'B3\'AF\'CF\'F2\'A3\'AC\'BB\'FA\'C6\'F7\'C8\'CB\'CB\'D9\'B6\'C8\'A3\'AC\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'B8\'F8\'B5\'D7\'D7\'F9\'B5\'C4\'CB\'D9\'B6\'C8\'C3\'FC\'C1\'EE }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'B4\'E6\'B4\'A2\'D5\'DF\'CF\'C2\'B7\'A2\'B5\'C4\'CB\'D9\'B6\'C8\'C3\'FC\'C1\'EE \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B1\'ED\'CA\'BE\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'CB\'D9\'B6\'C8\'C3\'FC\'C1\'EE \par
}}}{
\'D4\'DA {\b base_local_planner::TrajectoryPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEP \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b dwa_local_planner::DWAPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDH \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\xe \v initialize\:nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void nav_core::BaseLocalPlanner::initialize (std::string  {\i name}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACET}
{\bkmkend AAAAAAACET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'CA\'B5\'C0\'FD\'C3\'FB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{transform listener\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{\'D6\'B8\'CF\'F2\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BCROS\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}{
\'D4\'DA {\b base_local_planner::TrajectoryPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACES \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b dwa_local_planner::DWAPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\xe \v isGoalReached\:nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner\:isGoalReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool nav_core::BaseLocalPlanner::isGoalReached (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACEV}
{\bkmkend AAAAAAACEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'CA\'C7\'B7\'F1\'D2\'D1\'BE\'AD\'B5\'BD\'B4\'EF\'C1\'CB\'C4\'BF\'B1\'EA\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D2\'D1\'BE\'AD\'B5\'BD\'B4\'EF \par
}}}{
\'D4\'DA {\b base_local_planner::TrajectoryPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEU \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b dwa_local_planner::DWAPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDK \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\xe \v setPlan\:nav_core::BaseLocalPlanner}
{\xe \v nav_core::BaseLocalPlanner\:setPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool nav_core::BaseLocalPlanner::setPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i plan}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACFC}
{\bkmkend AAAAAAACFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'B8\'FC\'D0\'C2\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'B8\'FC\'D0\'C2\'B3\'C9\'B9\'A6 \par
}}}{
\'D4\'DA {\b base_local_planner::TrajectoryPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFB \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b dwa_local_planner::DWAPlannerROS} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADDP \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_core/include/nav_core/{\b base_local_planner.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CachedDistanceMap\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v CachedDistanceMap}
{\xe \v CachedDistanceMap}
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CachedDistanceMap} (double scale, double max_dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CachedDistanceMap} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double ** {\b distances_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scale_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_dist_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cell_radius_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CachedDistanceMap\:CachedDistanceMap}
{\xe \v CachedDistanceMap\:CachedDistanceMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CachedDistanceMap::CachedDistanceMap (double  {\i scale}, double  {\i max_dist}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~CachedDistanceMap\:CachedDistanceMap}
{\xe \v CachedDistanceMap\:~CachedDistanceMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CachedDistanceMap::~CachedDistanceMap (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cell_radius_\:CachedDistanceMap}
{\xe \v CachedDistanceMap\:cell_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CachedDistanceMap::cell_radius_}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distances_\:CachedDistanceMap}
{\xe \v CachedDistanceMap\:distances_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double** CachedDistanceMap::distances_}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_dist_\:CachedDistanceMap}
{\xe \v CachedDistanceMap\:max_dist_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CachedDistanceMap::max_dist_}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scale_\:CachedDistanceMap}
{\xe \v CachedDistanceMap\:scale_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CachedDistanceMap::scale_}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/amcl/map/{\b map_cspace.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
carrot_planner::CarrotPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner}
{\bkmkstart AAAAAAACJQ}
{\bkmkend AAAAAAACJQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple global planner that will compute a valid goal point for the local planner by walking back along the vector between the robot and the user-specified goal point until a valid cost is found. }}\par
{
{\f2 #include <carrot_planner.h>}}\par
\'C0\'E0 carrot_planner::CarrotPlanner \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
carrot_planner::CarrotPlanner \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CarrotPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b CarrotPlanner} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CarrotPlanner} (std::string name, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b CarrotPlanner} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CarrotPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization function for the {\b CarrotPlanner} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a goal pose in the world, compute a plan }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (double x_i, double y_i, double theta_i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the legality of the robot footprint at a position and orientation using the world model }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b costmap_ros_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b step_size_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_dist_from_robot_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::WorldModel} * {\b world_model_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The world model that the controller will use }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple global planner that will compute a valid goal point for the local planner by walking back along the vector between the robot and the user-specified goal point until a valid cost is found. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CarrotPlanner\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:CarrotPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
carrot_planner::CarrotPlanner::CarrotPlanner ()}}
\par
{\bkmkstart AAAAAAACJR}
{\bkmkend AAAAAAACJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b CarrotPlanner} }}\par
}
{\xe \v CarrotPlanner\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:CarrotPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
carrot_planner::CarrotPlanner::CarrotPlanner (std::string  {\i name}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros})}}
\par
{\bkmkstart AAAAAAACJS}
{\bkmkend AAAAAAACJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b CarrotPlanner} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name of this planner \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{A pointer to the ROS wrapper of the costmap to use for planning \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner_a4046ba14bc9523f59305115c530dfc0b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~CarrotPlanner\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:~CarrotPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
carrot_planner::CarrotPlanner::~CarrotPlanner ()}}
\par
{\bkmkstart AAAAAAACJT}
{\bkmkend AAAAAAACJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v footprintCost\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double carrot_planner::CarrotPlanner::footprintCost (double  {\i x_i}, double  {\i y_i}, double  {\i theta_i}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACJU}
{\bkmkend AAAAAAACJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the legality of the robot footprint at a position and orientation using the world model }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x_i} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y_i} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta_i} \cell }{The orientation of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner_afb2445d0a140b7f9a47a4bed3ee3a63d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner_afb2445d0a140b7f9a47a4bed3ee3a63d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void carrot_planner::CarrotPlanner::initialize (std::string  {\i name}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJV}
{\bkmkend AAAAAAACJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization function for the {\b CarrotPlanner} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name of this planner \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{A pointer to the ROS wrapper of the costmap to use for planning \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseGlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner_a83b1bb77b4ef4a2719dcc29bf90d077e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner_a83b1bb77b4ef4a2719dcc29bf90d077e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool carrot_planner::CarrotPlanner::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACJX}
{\bkmkend AAAAAAACJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a goal pose in the world, compute a plan }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{The start pose \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{The goal pose \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{The plan... filled by the planner \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if a valid plan was found, false otherwise \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseGlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcarrot__planner_1_1_carrot_planner_a59c64d61f2e992d08b32438116614ab5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* carrot_planner::CarrotPlanner::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACJZ}
{\bkmkend AAAAAAACJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_ros_\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:costmap_ros_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* carrot_planner::CarrotPlanner::costmap_ros_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKA}
{\bkmkend AAAAAAACKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool carrot_planner::CarrotPlanner::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKB}
{\bkmkend AAAAAAACKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_dist_from_robot_\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:min_dist_from_robot_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double carrot_planner::CarrotPlanner::min_dist_from_robot_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKC}
{\bkmkend AAAAAAACKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v step_size_\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:step_size_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double carrot_planner::CarrotPlanner::step_size_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKD}
{\bkmkend AAAAAAACKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v world_model_\:carrot_planner::CarrotPlanner}
{\xe \v carrot_planner::CarrotPlanner\:world_model_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::WorldModel}* carrot_planner::CarrotPlanner::world_model_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKE}
{\bkmkend AAAAAAACKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The world model that the controller will use }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
carrot_planner/include/carrot_planner/{\b carrot_planner.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
carrot_planner/src/{\b carrot_planner.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Cell\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v Cell}
{\xe \v Cell}
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b voxel_grid::VoxelStatus} {\b status}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v status\:Cell}
{\xe \v Cell\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b voxel_grid::VoxelStatus} Cell::status}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:Cell}
{\xe \v Cell\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Cell::x}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:Cell}
{\xe \v Cell\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Cell::y}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z\:Cell}
{\xe \v Cell\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Cell::z}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b costmap_2d_cloud.cpp}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b costmap_2d_markers.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CellData\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v CellData}
{\xe \v CellData}
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
CellData \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_cell_data__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_t} * {\b map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b i_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b j_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b src_i_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b src_j_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v i_\:CellData}
{\xe \v CellData\:i_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int CellData::i_}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v j_\:CellData}
{\xe \v CellData\:j_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int CellData::j_}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_\:CellData}
{\xe \v CellData\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_t}* CellData::map_}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v src_i_\:CellData}
{\xe \v CellData\:src_i_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int CellData::src_i_}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v src_j_\:CellData}
{\xe \v CellData\:src_j_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int CellData::src_j_}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/src/amcl/map/{\b map_cspace.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::CellData\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::CellData}
{\xe \v costmap_2d::CellData}
{\bkmkstart AAAAAAACMB}
{\bkmkend AAAAAAACMB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for cell information used during obstacle inflation }}\par
{
{\f2 #include <inflation_layer.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CellData} (double i, unsigned int x, unsigned int y, unsigned int sx, unsigned int sy)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for a {\b CellData} objects }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b index_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b src_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b src_y_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for cell information used during obstacle inflation \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CellData\:costmap_2d::CellData}
{\xe \v costmap_2d::CellData\:CellData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::CellData::CellData (double  {\i i}, unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i sx}, unsigned int  {\i sy}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMC}
{\bkmkend AAAAAAACMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for a {\b CellData} objects }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{The index of the cell in the cost map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x coordinate of the cell in the cost map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y coordinate of the cell in the cost map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sx} \cell }{The x coordinate of the closest obstacle cell in the costmap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sy} \cell }{The y coordinate of the closest obstacle cell in the costmap \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v index_\:costmap_2d::CellData}
{\xe \v costmap_2d::CellData\:index_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::CellData::index_}}
\par
{\bkmkstart AAAAAAACMD}
{\bkmkend AAAAAAACMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v src_x_\:costmap_2d::CellData}
{\xe \v costmap_2d::CellData\:src_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::CellData::src_x_}}
\par
{\bkmkstart AAAAAAACME}
{\bkmkend AAAAAAACME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v src_y_\:costmap_2d::CellData}
{\xe \v costmap_2d::CellData\:src_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::CellData::src_y_}}
\par
{\bkmkstart AAAAAAACMF}
{\bkmkend AAAAAAACMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x_\:costmap_2d::CellData}
{\xe \v costmap_2d::CellData\:x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::CellData::x_}}
\par
{\bkmkstart AAAAAAACMG}
{\bkmkend AAAAAAACMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_\:costmap_2d::CellData}
{\xe \v costmap_2d::CellData\:y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::CellData::y_}}
\par
{\bkmkstart AAAAAAACMH}
{\bkmkend AAAAAAACMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b inflation_layer.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clear_costmap_recovery::ClearCostmapRecovery\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery}
{\bkmkstart AAAAAAACKG}
{\bkmkend AAAAAAACKG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A recovery behavior that reverts the navigation stack's costmaps to the static map outside of a user-specified region. }}\par
{
{\f2 #include <clear_costmap_recovery.h>}}\par
\'C0\'E0 clear_costmap_recovery::ClearCostmapRecovery \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
clear_costmap_recovery::ClearCostmapRecovery \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClearCostmapRecovery} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor, make sure to call initialize in addition to actually initialize the object }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *global_costmap, {\b costmap_2d::Costmap2DROS} *local_costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization function for the {\b ClearCostmapRecovery} recovery behavior }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b runBehavior} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run the {\b ClearCostmapRecovery} recovery behavior. Reverts the costmap to the static map outside of a user-specified window and clears unknown space around the robot. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clear} ({\b costmap_2d::Costmap2DROS} *costmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearMap} (boost::shared_ptr< {\b costmap_2d::CostmapLayer} > costmap, double pose_x, double pose_y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b global_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b local_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b tf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b force_updating_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
force costmap update after clearing, so we don't need to wait for update thread }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b reset_distance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b invert_area_to_clear_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b affected_maps_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
clear only local, global or both costmaps }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::set< std::string > {\b clearable_layers_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layer names which will be cleared. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A recovery behavior that reverts the navigation stack's costmaps to the static map outside of a user-specified region. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ClearCostmapRecovery\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:ClearCostmapRecovery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
clear_costmap_recovery::ClearCostmapRecovery::ClearCostmapRecovery ()}}
\par
{\bkmkstart AAAAAAACKH}
{\bkmkend AAAAAAACKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor, make sure to call initialize in addition to actually initialize the object }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i } \cell }{\cell }
{\row }
}
return \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clear\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear_costmap_recovery::ClearCostmapRecovery::clear ({\b costmap_2d::Costmap2DROS} *  {\i costmap}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKI}
{\bkmkend AAAAAAACKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery_afa64ceeb9a0ab7eb3796e3a0095545a7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery_afa64ceeb9a0ab7eb3796e3a0095545a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearMap\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:clearMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear_costmap_recovery::ClearCostmapRecovery::clearMap (boost::shared_ptr< {\b costmap_2d::CostmapLayer} >  {\i costmap}, double  {\i pose_x}, double  {\i pose_y}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKJ}
{\bkmkend AAAAAAACKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery_a0155fa0d47c9b12477c64d32bc167039_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear_costmap_recovery::ClearCostmapRecovery::initialize (std::string  {\i name}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i global_costmap}, {\b costmap_2d::Costmap2DROS} *  {\i local_costmap}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKK}
{\bkmkend AAAAAAACKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialization function for the {\b ClearCostmapRecovery} recovery behavior }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{A pointer to a transform listener \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_costmap} \cell }{A pointer to the global_costmap used by the navigation stack \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i local_costmap} \cell }{A pointer to the local_costmap used by the navigation stack \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::RecoveryBehavior} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery_a5b0e81f3ad151bb9d4058a36c9411efd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v runBehavior\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:runBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void clear_costmap_recovery::ClearCostmapRecovery::runBehavior (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACKM}
{\bkmkend AAAAAAACKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run the {\b ClearCostmapRecovery} recovery behavior. Reverts the costmap to the static map outside of a user-specified window and clears unknown space around the robot. }}\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::RecoveryBehavior} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery_a7306f9a6b3db7e909e07e7fac7ee84a4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classclear__costmap__recovery_1_1_clear_costmap_recovery_a7306f9a6b3db7e909e07e7fac7ee84a4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v affected_maps_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:affected_maps_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string clear_costmap_recovery::ClearCostmapRecovery::affected_maps_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKO}
{\bkmkend AAAAAAACKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
clear only local, global or both costmaps }}\par
}
{\xe \v clearable_layers_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:clearable_layers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::set<std::string> clear_costmap_recovery::ClearCostmapRecovery::clearable_layers_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKP}
{\bkmkend AAAAAAACKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Layer names which will be cleared. }}\par
}
{\xe \v force_updating_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:force_updating_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool clear_costmap_recovery::ClearCostmapRecovery::force_updating_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKQ}
{\bkmkend AAAAAAACKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
force costmap update after clearing, so we don't need to wait for update thread }}\par
}
{\xe \v global_costmap_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:global_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* clear_costmap_recovery::ClearCostmapRecovery::global_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKR}
{\bkmkend AAAAAAACKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool clear_costmap_recovery::ClearCostmapRecovery::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKS}
{\bkmkend AAAAAAACKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v invert_area_to_clear_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:invert_area_to_clear_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool clear_costmap_recovery::ClearCostmapRecovery::invert_area_to_clear_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKT}
{\bkmkend AAAAAAACKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v local_costmap_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:local_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS} * clear_costmap_recovery::ClearCostmapRecovery::local_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKU}
{\bkmkend AAAAAAACKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string clear_costmap_recovery::ClearCostmapRecovery::name_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKV}
{\bkmkend AAAAAAACKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reset_distance_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:reset_distance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double clear_costmap_recovery::ClearCostmapRecovery::reset_distance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKW}
{\bkmkend AAAAAAACKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:clear_costmap_recovery::ClearCostmapRecovery}
{\xe \v clear_costmap_recovery::ClearCostmapRecovery\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* clear_costmap_recovery::ClearCostmapRecovery::tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACKX}
{\bkmkend AAAAAAACKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clear_costmap_recovery/include/clear_costmap_recovery/{\b clear_costmap_recovery.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clear_costmap_recovery/src/{\b clear_costmap_recovery.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid::VoxelGrid::ClearVoxel\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid::VoxelGrid::ClearVoxel}
{\xe \v voxel_grid::VoxelGrid::ClearVoxel}
{\bkmkstart AAAAAAADXL}
{\bkmkend AAAAAAADXL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClearVoxel} (uint32_t *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (unsigned int offset, unsigned int z_mask)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t * {\b data_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ClearVoxel\:voxel_grid::VoxelGrid::ClearVoxel}
{\xe \v voxel_grid::VoxelGrid::ClearVoxel\:ClearVoxel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
voxel_grid::VoxelGrid::ClearVoxel::ClearVoxel (uint32_t *  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXM}
{\bkmkend AAAAAAADXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:voxel_grid::VoxelGrid::ClearVoxel}
{\xe \v voxel_grid::VoxelGrid::ClearVoxel\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::ClearVoxel::operator() (unsigned int  {\i offset}, unsigned int  {\i z_mask}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXN}
{\bkmkend AAAAAAADXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v data_\:voxel_grid::VoxelGrid::ClearVoxel}
{\xe \v voxel_grid::VoxelGrid::ClearVoxel\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t* voxel_grid::VoxelGrid::ClearVoxel::data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXO}
{\bkmkend AAAAAAADXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid::VoxelGrid::ClearVoxelInMap\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap}
{\bkmkstart AAAAAAADXP}
{\bkmkend AAAAAAADXP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ClearVoxelInMap} (uint32_t *data, unsigned char *{\b costmap}, unsigned int unknown_clear_threshold, unsigned int marked_clear_threshold, unsigned char free_cost=0, unsigned char unknown_cost=255)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (unsigned int offset, unsigned int z_mask)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bitsBelowThreshold} (unsigned int {\b n}, unsigned int bit_threshold)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t * {\b data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b unknown_clear_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b marked_clear_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b free_cost_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b unknown_cost_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ClearVoxelInMap\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:ClearVoxelInMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
voxel_grid::VoxelGrid::ClearVoxelInMap::ClearVoxelInMap (uint32_t *  {\i data}, unsigned char *  {\i costmap}, unsigned int  {\i unknown_clear_threshold}, unsigned int  {\i marked_clear_threshold}, unsigned char  {\i free_cost} = {\f2 0}, unsigned char  {\i unknown_cost} = {\f2 255}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXQ}
{\bkmkend AAAAAAADXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bitsBelowThreshold\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:bitsBelowThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool voxel_grid::VoxelGrid::ClearVoxelInMap::bitsBelowThreshold (unsigned int  {\i n}, unsigned int  {\i bit_threshold}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXR}
{\bkmkend AAAAAAADXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_1_1_clear_voxel_in_map_af795f0b432e2d627e7eb92c05f3a1898_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator()\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::ClearVoxelInMap::operator() (unsigned int  {\i offset}, unsigned int  {\i z_mask}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADXS}
{\bkmkend AAAAAAADXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_1_1_clear_voxel_in_map_a5a61c2c6bdddaee95bc38e770507761b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* voxel_grid::VoxelGrid::ClearVoxelInMap::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXT}
{\bkmkend AAAAAAADXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data_\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t* voxel_grid::VoxelGrid::ClearVoxelInMap::data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXU}
{\bkmkend AAAAAAADXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v free_cost_\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:free_cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char voxel_grid::VoxelGrid::ClearVoxelInMap::free_cost_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXV}
{\bkmkend AAAAAAADXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v marked_clear_threshold_\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:marked_clear_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int voxel_grid::VoxelGrid::ClearVoxelInMap::marked_clear_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXW}
{\bkmkend AAAAAAADXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unknown_clear_threshold_\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:unknown_clear_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int voxel_grid::VoxelGrid::ClearVoxelInMap::unknown_clear_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXX}
{\bkmkend AAAAAAADXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unknown_cost_\:voxel_grid::VoxelGrid::ClearVoxelInMap}
{\xe \v voxel_grid::VoxelGrid::ClearVoxelInMap\:unknown_cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char voxel_grid::VoxelGrid::ClearVoxelInMap::unknown_cost_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXY}
{\bkmkend AAAAAAADXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Costmap2D\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D}
{\bkmkstart AAAAAAACMI}
{\bkmkend AAAAAAACMI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D costmap provides a mapping between points in the world and their associated "costs". }}\par
{
{\f2 #include <costmap_2d.h>}}\par
\'C0\'E0 costmap_2d::Costmap2D \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MarkCell}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PolygonOutlineCells}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'C0\'E0\'D0\'CD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef boost::recursive_mutex {\b mutex_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} (unsigned int cells_size_x, unsigned int cells_size_y, double resolution, double origin_x, double origin_y, unsigned char default_value=0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} (const {\b Costmap2D} &map)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor for a costmap, creates a copy efficiently }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} & {\b operator=} (const {\b Costmap2D} &map)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overloaded assignment operator }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b copyCostmapWindow} (const {\b Costmap2D} &map, double win_origin_x, double win_origin_y, double win_size_x, double win_size_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn this costmap into a copy of a window of a costmap passed in }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Costmap2D} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b getCost} (unsigned int mx, unsigned int my) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the cost of a cell in the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCost} (unsigned int mx, unsigned int my, unsigned char cost)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the cost of a cell in the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapToWorld} (unsigned int mx, unsigned int my, double &wx, double &wy) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from map coordinates to world coordinates }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b worldToMap} (double wx, double wy, unsigned int &mx, unsigned int &my) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to map coordinates }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b worldToMapNoBounds} (double wx, double wy, int &mx, int &my) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to map coordinates without checking for legal bounds }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b worldToMapEnforceBounds} (double wx, double wy, int &mx, int &my) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to map coordinates, constraining results to legal bounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getIndex} (unsigned int mx, unsigned int my) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given two map coordinates... compute the associated index }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b indexToCells} (unsigned int index, unsigned int &mx, unsigned int &my) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given an index... compute the associated map coordinates }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b getCharMap} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Will return a pointer to the underlying unsigned char array used as the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getSizeInCellsX} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x size of the costmap in cells }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getSizeInCellsY} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y size of the costmap in cells }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getSizeInMetersX} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x size of the costmap in meters }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getSizeInMetersY} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y size of the costmap in meters }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getOriginX} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x origin of the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getOriginY} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y origin of the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getResolution} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the resolution of the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDefaultValue} (unsigned char c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b getDefaultValue} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setConvexPolygonCost} (const std::vector< geometry_msgs::Point > &polygon, unsigned char cost_value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the cost of a convex polygon to a desired value }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b polygonOutlineCells} (const std::vector< {\b MapLocation} > &polygon, std::vector< {\b MapLocation} > &polygon_cells)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the map cells that make up the outline of a polygon }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b convexFillCells} (const std::vector< {\b MapLocation} > &polygon, std::vector< {\b MapLocation} > &polygon_cells)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the map cells that fill a convex polygon }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateOrigin} (double new_origin_x, double new_origin_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the origin of the costmap to a new location.... keeping data when it can }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveMap} (std::string file_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save the costmap out to a pgm file }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resizeMap} (unsigned int size_x, unsigned int size_y, double resolution, double origin_x, double origin_y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetMap} (unsigned int x0, unsigned int y0, unsigned int xn, unsigned int yn)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cellDistance} (double world_dist)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given distance in the world... convert it to cells }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mutex_t} * {\b getMutex} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename data_type > void {\b copyMapRegion} (data_type *source_map, unsigned int sm_lower_left_x, unsigned int sm_lower_left_y, unsigned int sm_size_x, data_type *dest_map, unsigned int dm_lower_left_x, unsigned int dm_lower_left_y, unsigned int dm_size_x, unsigned int region_size_x, unsigned int region_size_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy a region of a source map into a destination map }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deleteMaps} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes the costmap, static_map, and markers data structures }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b resetMaps} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the costmap and static_map to be unknown space }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initMaps} (unsigned int size_x, unsigned int size_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the costmap, static_map, and markers data structures }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ActionType > void {\b raytraceLine} (ActionType at, unsigned int x0, unsigned int y0, unsigned int x1, unsigned int y1, unsigned int max_length=UINT_MAX)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raytrace a line and apply some action at each step }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b resolution_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b default_value_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ActionType > void {\b bresenham2D} (ActionType at, unsigned int abs_da, unsigned int abs_db, int error_b, int offset_a, int offset_b, unsigned int offset, unsigned int max_length)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D implementation of Bresenham's raytracing algorithm... applies an action at each step \'CA\'B5\'CF\'D6\'C1\'CB \'B6\'D4\'D3\'DA\'C0\'EB\'C9\'A2\'B5\'C4\'C6\'BD\'C3\'E6\'B5\'E3\'A3\'AC\'D6\'B8\'B6\'A8\'C1\'BD\'B8\'F6\'B5\'E3\'A3\'AC\'D5\'D2\'B5\'BD\'C1\'BD\'B5\'E3\'D6\'AE\'BC\'E4\'B5\'C4\'C6\'E4\'CB\'FB\'B5\'E3\'A3\'AC\'CA\'B9\'B5\'C3\'D5\'E2\'D0\'A9\'D6\'D0\'BC\'E4\'D7\'E9\'B3\'C9\'D2\'BB\'B8\'F6\'BE\'A1\'BF\'C9\'C4\'DC\'C7\'F7\'BD\'FC\'D6\'B1\'CF\'DF\'B5\'C4\'B5\'E3\'BC\'AF\'A1\'A3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sign} (int x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b mutex_t} * {\b access_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D3\'D1\'D4\'AA\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CostmapTester}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D costmap provides a mapping between points in the world and their associated "costs". \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v mutex_t\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:mutex_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef boost::recursive_mutex {\b costmap_2d::Costmap2D::mutex_t}}}
\par
{\bkmkstart AAAAAAACMJ}
{\bkmkend AAAAAAACMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Costmap2D\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:Costmap2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2D::Costmap2D (unsigned int  {\i cells_size_x}, unsigned int  {\i cells_size_y}, double  {\i resolution}, double  {\i origin_x}, double  {\i origin_y}, unsigned char  {\i default_value} = {\f2 0})}}
\par
{\bkmkstart AAAAAAACMK}
{\bkmkend AAAAAAACMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cells_size_x} \cell }{The x size of the map in cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cells_size_y} \cell }{The y size of the map in cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i resolution} \cell }{The resolution of the map in meters/cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin_x} \cell }{The x origin of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin_y} \cell }{The y origin of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i default_value} \cell }{Default Value \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a5c41d42532693430c002c16258925d82_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Costmap2D\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:Costmap2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2D::Costmap2D (const {\b Costmap2D} &  {\i map})}}
\par
{\bkmkstart AAAAAAACML}
{\bkmkend AAAAAAACML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor for a costmap, creates a copy efficiently }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i map} \cell }{The costmap to copy \cell }
{\row }
}
}}
{\xe \v Costmap2D\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:Costmap2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2D::Costmap2D ()}}
\par
{\bkmkstart AAAAAAACMM}
{\bkmkend AAAAAAACMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }}\par
}
{\xe \v ~Costmap2D\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:~Costmap2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2D::~Costmap2D (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMN}
{\bkmkend AAAAAAACMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a3087bd649bca6c2fb4f795d433e93f3a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bresenham2D\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:bresenham2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ActionType > void costmap_2d::Costmap2D::bresenham2D (ActionType  {\i at}, unsigned int  {\i abs_da}, unsigned int  {\i abs_db}, int  {\i error_b}, int  {\i offset_a}, int  {\i offset_b}, unsigned int  {\i offset}, unsigned int  {\i max_length}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACMO}
{\bkmkend AAAAAAACMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D implementation of Bresenham's raytracing algorithm... applies an action at each step \'CA\'B5\'CF\'D6\'C1\'CB \'B6\'D4\'D3\'DA\'C0\'EB\'C9\'A2\'B5\'C4\'C6\'BD\'C3\'E6\'B5\'E3\'A3\'AC\'D6\'B8\'B6\'A8\'C1\'BD\'B8\'F6\'B5\'E3\'A3\'AC\'D5\'D2\'B5\'BD\'C1\'BD\'B5\'E3\'D6\'AE\'BC\'E4\'B5\'C4\'C6\'E4\'CB\'FB\'B5\'E3\'A3\'AC\'CA\'B9\'B5\'C3\'D5\'E2\'D0\'A9\'D6\'D0\'BC\'E4\'D7\'E9\'B3\'C9\'D2\'BB\'B8\'F6\'BE\'A1\'BF\'C9\'C4\'DC\'C7\'F7\'BD\'FC\'D6\'B1\'CF\'DF\'B5\'C4\'B5\'E3\'BC\'AF\'A1\'A3 }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a54462e95337134adf0a59785b39b57f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v cellDistance\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:cellDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2D::cellDistance (double  {\i world_dist})}}
\par
{\bkmkstart AAAAAAACMP}
{\bkmkend AAAAAAACMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given distance in the world... convert it to cells }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_dist} \cell }{The world distance \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The equivalent cell distance \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_abffbb5c7d49fae947d70c4e6d0fbeae9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v convexFillCells\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:convexFillCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::convexFillCells (const std::vector< {\b MapLocation} > &  {\i polygon}, std::vector< {\b MapLocation} > &  {\i polygon_cells})}}
\par
{\bkmkstart AAAAAAACMQ}
{\bkmkend AAAAAAACMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the map cells that fill a convex polygon }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i polygon} \cell }{The polygon in map coordinates to rasterize \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i polygon_cells} \cell }{Will be set to the cells that fill the polygon \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_aa3c49f2d63f6edfb7396d1b0c79a4b12_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_aa3c49f2d63f6edfb7396d1b0c79a4b12_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v copyCostmapWindow\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:copyCostmapWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2D::copyCostmapWindow (const {\b Costmap2D} &  {\i map}, double  {\i win_origin_x}, double  {\i win_origin_y}, double  {\i win_size_x}, double  {\i win_size_y})}}
\par
{\bkmkstart AAAAAAACMR}
{\bkmkend AAAAAAACMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Turn this costmap into a copy of a window of a costmap passed in }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i map} \cell }{The costmap to copy \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i win_origin_x} \cell }{The x origin (lower left corner) for the window to copy, in meters \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i win_origin_y} \cell }{The y origin (lower left corner) for the window to copy, in meters \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i win_size_x} \cell }{The x size of the window, in meters \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i win_size_y} \cell }{The y size of the window, in meters \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a8fb9538b17743071ea041b32bcc3b381_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a8fb9538b17743071ea041b32bcc3b381_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v copyMapRegion\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:copyMapRegion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename data_type > void costmap_2d::Costmap2D::copyMapRegion (data_type *  {\i source_map}, unsigned int  {\i sm_lower_left_x}, unsigned int  {\i sm_lower_left_y}, unsigned int  {\i sm_size_x}, data_type *  {\i dest_map}, unsigned int  {\i dm_lower_left_x}, unsigned int  {\i dm_lower_left_y}, unsigned int  {\i dm_size_x}, unsigned int  {\i region_size_x}, unsigned int  {\i region_size_y}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACMS}
{\bkmkend AAAAAAACMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy a region of a source map into a destination map }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i source_map} \cell }{The source map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sm_lower_left_x} \cell }{The lower left x point of the source map to start the copy \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sm_lower_left_y} \cell }{The lower left y point of the source map to start the copy \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sm_size_x} \cell }{The x size of the source map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dest_map} \cell }{The destination map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dm_lower_left_x} \cell }{The lower left x point of the destination map to start the copy \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dm_lower_left_y} \cell }{The lower left y point of the destination map to start the copy \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dm_size_x} \cell }{The x size of the destination map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i region_size_x} \cell }{The x size of the region to copy \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i region_size_y} \cell }{The y size of the region to copy \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ab857ec41de2e14d601b85bbf6497b612_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v deleteMaps\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:deleteMaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::deleteMaps (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACMT}
{\bkmkend AAAAAAACMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Deletes the costmap, static_map, and markers data structures }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_af536407a80cef61e20226c28dbef9eee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCharMap\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getCharMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char * costmap_2d::Costmap2D::getCharMap () const}}
\par
{\bkmkstart AAAAAAACMU}
{\bkmkend AAAAAAACMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Will return a pointer to the underlying unsigned char array used as the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A pointer to the underlying unsigned char array storing cost values \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a951c218252d6e66e23062a123dbde34d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCost\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::Costmap2D::getCost (unsigned int  {\i mx}, unsigned int  {\i my}) const}}
\par
{\bkmkstart AAAAAAACMV}
{\bkmkend AAAAAAACMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the cost of a cell in the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y coordinate of the cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The cost of the cell \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a2a8ad2c3fc3aa47be8d2d0f9ae113c27_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a2a8ad2c3fc3aa47be8d2d0f9ae113c27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getDefaultValue\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getDefaultValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::Costmap2D::getDefaultValue (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMW}
{\bkmkend AAAAAAACMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a35fbb86d10502ab91fb6e133c1364cd9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getIndex\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2D::getIndex (unsigned int  {\i mx}, unsigned int  {\i my}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMX}
{\bkmkend AAAAAAACMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given two map coordinates... compute the associated index }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y coordinate \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The associated index \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a57d2ea3f3a039d72640c159cd149ff9d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getMutex\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getMutex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mutex_t} * costmap_2d::Costmap2D::getMutex (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACMY}
{\bkmkend AAAAAAACMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a48c32f1cbe1cae7d2fb6a0a96192db21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getOriginX\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getOriginX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::getOriginX () const}}
\par
{\bkmkstart AAAAAAACMZ}
{\bkmkend AAAAAAACMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x origin of the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The x origin of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a9aae81be964f5fff675f9a10c3bf2e82_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getOriginY\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getOriginY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::getOriginY () const}}
\par
{\bkmkstart AAAAAAACNA}
{\bkmkend AAAAAAACNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y origin of the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The y origin of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a686124b010e121eb87629ff17a032d7f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getResolution\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::getResolution () const}}
\par
{\bkmkstart AAAAAAACNB}
{\bkmkend AAAAAAACNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the resolution of the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The resolution of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ade55f512e27c62cec28a3de5ca775759_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSizeInCellsX\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getSizeInCellsX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2D::getSizeInCellsX () const}}
\par
{\bkmkstart AAAAAAACNC}
{\bkmkend AAAAAAACNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x size of the costmap in cells }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The x size of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a615a4186649d8970111f8a356906b320_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSizeInCellsY\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getSizeInCellsY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2D::getSizeInCellsY () const}}
\par
{\bkmkstart AAAAAAACND}
{\bkmkend AAAAAAACND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y size of the costmap in cells }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The y size of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a702f4ed109f94c8513500cf97ff066a4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSizeInMetersX\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getSizeInMetersX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::getSizeInMetersX () const}}
\par
{\bkmkstart AAAAAAACNE}
{\bkmkend AAAAAAACNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x size of the costmap in meters }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The x size of the costmap (returns the centerpoint of the last legal cell in the map) \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a645ea4720d5cab8bcf662687cc81d087_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSizeInMetersY\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:getSizeInMetersY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::getSizeInMetersY () const}}
\par
{\bkmkstart AAAAAAACNF}
{\bkmkend AAAAAAACNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y size of the costmap in meters }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The y size of the costmap (returns the centerpoint of the last legal cell in the map) \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_afb1d6cdc01d77452175487955e6aff4d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v indexToCells\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:indexToCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::indexToCells (unsigned int  {\i index}, unsigned int &  {\i mx}, unsigned int &  {\i my}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNG}
{\bkmkend AAAAAAACNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given an index... compute the associated map coordinates }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{The index \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{Will be set to the x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{Will be set to the y coordinate \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_aa10c1734472f485473302598113fcddc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initMaps\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:initMaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::initMaps (unsigned int  {\i size_x}, unsigned int  {\i size_y}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNH}
{\bkmkend AAAAAAACNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the costmap, static_map, and markers data structures }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The x size to use for map initialization \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The y size to use for map initialization \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a1da91220df45a19376a3e3df3a517c27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapToWorld\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:mapToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::mapToWorld (unsigned int  {\i mx}, unsigned int  {\i my}, double &  {\i wx}, double &  {\i wy}) const}}
\par
{\bkmkstart AAAAAAACNI}
{\bkmkend AAAAAAACNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from map coordinates to world coordinates }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x map coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y map coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wx} \cell }{Will be set to the associated world x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wy} \cell }{Will be set to the associated world y coordinate \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a8e39feaa7ee4446347674b3701a1394c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator=\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2D} & costmap_2d::Costmap2D::operator= (const {\b Costmap2D} &  {\i map})}}
\par
{\bkmkstart AAAAAAACNJ}
{\bkmkend AAAAAAACNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Overloaded assignment operator }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i map} \cell }{The costmap to copy \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A reference to the map after the copy has finished \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a404b9898ed689c8f6b1eb3503c358db0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v polygonOutlineCells\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:polygonOutlineCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::polygonOutlineCells (const std::vector< {\b MapLocation} > &  {\i polygon}, std::vector< {\b MapLocation} > &  {\i polygon_cells})}}
\par
{\bkmkstart AAAAAAACNK}
{\bkmkend AAAAAAACNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the map cells that make up the outline of a polygon }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i polygon} \cell }{The polygon in map coordinates to rasterize \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i polygon_cells} \cell }{Will be set to the cells contained in the outline of the polygon \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ad0c6f7cb8e11569a02f873c545acec90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ad0c6f7cb8e11569a02f873c545acec90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v raytraceLine\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:raytraceLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ActionType > void costmap_2d::Costmap2D::raytraceLine (ActionType  {\i at}, unsigned int  {\i x0}, unsigned int  {\i y0}, unsigned int  {\i x1}, unsigned int  {\i y1}, unsigned int  {\i max_length} = {\f2 UINT_MAX}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACNL}
{\bkmkend AAAAAAACNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Raytrace a line and apply some action at each step }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i at} \cell }{The action to take... a functor \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x0} \cell }{The starting x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y0} \cell }{The starting y coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x1} \cell }{The ending x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y1} \cell }{The ending y coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_length} \cell }{The maximum desired length of the segment... allows you to not go all the way to the endpoint \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_af1d619d9b49b6851cb0a33de4e39ec78_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_af1d619d9b49b6851cb0a33de4e39ec78_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetMap\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:resetMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::resetMap (unsigned int  {\i x0}, unsigned int  {\i y0}, unsigned int  {\i xn}, unsigned int  {\i yn})}}
\par
{\bkmkstart AAAAAAACNM}
{\bkmkend AAAAAAACNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_aba344550cbc08bcc3a54c64290f8f568_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetMaps\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:resetMaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::resetMaps (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNN}
{\bkmkend AAAAAAACNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the costmap and static_map to be unknown space }}\par
{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNO \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ab4424e85f6daaf91eaf455e4bb241c19_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resizeMap\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:resizeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::resizeMap (unsigned int  {\i size_x}, unsigned int  {\i size_y}, double  {\i resolution}, double  {\i origin_x}, double  {\i origin_y})}}
\par
{\bkmkstart AAAAAAACNP}
{\bkmkend AAAAAAACNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a95bae6eccd820a77d8040562e2a51118_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a95bae6eccd820a77d8040562e2a51118_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveMap\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:saveMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2D::saveMap (std::string  {\i file_name})}}
\par
{\bkmkstart AAAAAAACNQ}
{\bkmkend AAAAAAACNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Save the costmap out to a pgm file }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i file_name} \cell }{The name of the file to save \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a04cd3558a672159a3ad1b151b1d19661_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a04cd3558a672159a3ad1b151b1d19661_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setConvexPolygonCost\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:setConvexPolygonCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2D::setConvexPolygonCost (const std::vector< geometry_msgs::Point > &  {\i polygon}, unsigned char  {\i cost_value})}}
\par
{\bkmkstart AAAAAAACNR}
{\bkmkend AAAAAAACNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the cost of a convex polygon to a desired value }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i polygon} \cell }{The polygon to perform the operation on \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cost_value} \cell }{The value to set costs to \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the polygon was filled... false if it could not be filled \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_afb8a42c3810e796107ed04c0ca3cbf90_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_afb8a42c3810e796107ed04c0ca3cbf90_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setCost\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:setCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::setCost (unsigned int  {\i mx}, unsigned int  {\i my}, unsigned char  {\i cost})}}
\par
{\bkmkstart AAAAAAACNS}
{\bkmkend AAAAAAACNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the cost of a cell in the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cost} \cell }{The cost to set the cell to \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ae1703900adbbf1e0d929cec0735a8b0e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ae1703900adbbf1e0d929cec0735a8b0e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setDefaultValue\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:setDefaultValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::setDefaultValue (unsigned char  {\i c}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACNT}
{\bkmkend AAAAAAACNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a8a9f535f98f1ba4c0a74f88aa706bcd2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sign\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int costmap_2d::Costmap2D::sign (int  {\i x}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACNU}
{\bkmkend AAAAAAACNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a947041f50d5fb1a44c3fd0601c4fc608_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateOrigin\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:updateOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::updateOrigin (double  {\i new_origin_x}, double  {\i new_origin_y}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNV}
{\bkmkend AAAAAAACNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the origin of the costmap to a new location.... keeping data when it can }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_origin_x} \cell }{The x coordinate of the new origin \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_origin_y} \cell }{The y coordinate of the new origin \cell }
{\row }
}
}{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNW \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a5ca05c95f95e1408ca9e23d2e7f8987a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a5ca05c95f95e1408ca9e23d2e7f8987a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMap\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:worldToMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2D::worldToMap (double  {\i wx}, double  {\i wy}, unsigned int &  {\i mx}, unsigned int &  {\i my}) const}}
\par
{\bkmkstart AAAAAAACNX}
{\bkmkend AAAAAAACNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to map coordinates }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'F2map\'D7\'F8\'B1\'EA\'CF\'B5\'D7\'AA\'BB\'BB\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wx} \cell }{The x world coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wy} \cell }{The y world coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{Will be set to the associated map x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{Will be set to the associated map y coordinate \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the conversion was successful (legal bounds) false otherwise\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wx} \cell }{\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'B5\'C4x\'D6\'B5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wy} \cell }{\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'B5\'C4y\'D6\'B5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{\'CF\'E0\'B9\'D8map\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4x\'D6\'B5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{\'CF\'E0\'B9\'D8map\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4y\'D6\'B5 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the conversion was successful (legal bounds) false otherwise \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a9a2c824d4cd3bcad3ac3435d81982986_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMapEnforceBounds\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:worldToMapEnforceBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::worldToMapEnforceBounds (double  {\i wx}, double  {\i wy}, int &  {\i mx}, int &  {\i my}) const}}
\par
{\bkmkstart AAAAAAACNY}
{\bkmkend AAAAAAACNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to map coordinates, constraining results to legal bounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wx} \cell }{The x world coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wy} \cell }{The y world coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{Will be set to the associated map x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{Will be set to the associated map y coordinate \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D7\'A2\'BD\'E2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The returned map coordinates are guaranteed to lie within the map. \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_ae412173f42af7edba9996f86754b7cbf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMapNoBounds\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:worldToMapNoBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::worldToMapNoBounds (double  {\i wx}, double  {\i wy}, int &  {\i mx}, int &  {\i my}) const}}
\par
{\bkmkstart AAAAAAACNZ}
{\bkmkend AAAAAAACNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to map coordinates without checking for legal bounds }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wx} \cell }{The x world coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i wy} \cell }{The y world coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{Will be set to the associated map x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{Will be set to the associated map y coordinate \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D7\'A2\'BD\'E2\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The returned map coordinates {\b are not guaranteed to lie within the map.}  \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_a2da39cb06d192795614df9c2bf00692f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D3\'D1\'D4\'AA\'BC\'B0\'CF\'E0\'B9\'D8\'BA\'AF\'CA\'FD\'CE\'C4\'B5\'B5\par
\pard\plain 
{\xe \v CostmapTester\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:CostmapTester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b CostmapTester}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACOA}
{\bkmkend AAAAAAACOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v access_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:access_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b mutex_t}* costmap_2d::Costmap2D::access_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOB}
{\bkmkend AAAAAAACOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* costmap_2d::Costmap2D::costmap_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOC}
{\bkmkend AAAAAAACOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_value_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:default_value_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::Costmap2D::default_value_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOD}
{\bkmkend AAAAAAACOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_x_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:origin_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::origin_x_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOE}
{\bkmkend AAAAAAACOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_y_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:origin_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::origin_y_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOF}
{\bkmkend AAAAAAACOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v resolution_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:resolution_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2D::resolution_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOG}
{\bkmkend AAAAAAACOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_x_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:size_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2D::size_x_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOH}
{\bkmkend AAAAAAACOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_y_\:costmap_2d::Costmap2D}
{\xe \v costmap_2d::Costmap2D\:size_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2D::size_y_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACOI}
{\bkmkend AAAAAAACOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b costmap_2d.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Costmap2DPublisher\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher}
{\bkmkstart AAAAAAACOU}
{\bkmkend AAAAAAACOU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tool to periodically publish visualization data from a {\b Costmap2D} }}\par
{
{\f2 #include <costmap_2d_publisher.h>}}\par
costmap_2d::Costmap2DPublisher \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2DPublisher} (ros::NodeHandle *ros_node, {\b Costmap2D} *costmap, std::string global_frame, std::string topic_name, bool always_send_full_costmap=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b Costmap2DPublisher} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Costmap2DPublisher} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateBounds} (unsigned int x0, unsigned int xn, unsigned int y0, unsigned int yn)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include the given bounds in the changed-rectangle. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishCostmap} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publishes the visualization data over ROS }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b active} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the publisher is active }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b prepareGrid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepare grid_ message for publication. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b onNewSubscription} (const ros::SingleSubscriberPublisher &pub)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publish the latest full costmap to the new subscriber. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle * {\b node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b x0_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b xn_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b y0_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b yn_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b saved_origin_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b saved_origin_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b active_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b always_send_full_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b costmap_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b costmap_update_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_msgs::OccupancyGrid {\b grid_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static char * {\b cost_translation_table_} = NULL\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Translate from 0-255 values in costmap to -1 to 100 values in message. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tool to periodically publish visualization data from a {\b Costmap2D} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Costmap2DPublisher\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:Costmap2DPublisher}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2DPublisher::Costmap2DPublisher (ros::NodeHandle *  {\i ros_node}, {\b Costmap2D} *  {\i costmap}, std::string  {\i global_frame}, std::string  {\i topic_name}, bool  {\i always_send_full_costmap} = {\f2 false})}}
\par
{\bkmkstart AAAAAAACOV}
{\bkmkend AAAAAAACOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b Costmap2DPublisher} }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_a56d27ca488f09b70a8698b2491d036e7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~Costmap2DPublisher\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:~Costmap2DPublisher}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2DPublisher::~Costmap2DPublisher ()}}
\par
{\bkmkstart AAAAAAACOW}
{\bkmkend AAAAAAACOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v active\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:active}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DPublisher::active (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOX}
{\bkmkend AAAAAAACOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the publisher is active }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the frequency for the publisher is non-zero, false otherwise \par
}}}}
{\xe \v onNewSubscription\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:onNewSubscription}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DPublisher::onNewSubscription (const ros::SingleSubscriberPublisher &  {\i pub}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOY}
{\bkmkend AAAAAAACOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publish the latest full costmap to the new subscriber. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_aee87acfd9d19093239ec59a88e3e4add_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_aee87acfd9d19093239ec59a88e3e4add_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v prepareGrid\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:prepareGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DPublisher::prepareGrid (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOZ}
{\bkmkend AAAAAAACOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Prepare grid_ message for publication. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_a2bb9ed054a418a59554668a9d1bc723a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_a2bb9ed054a418a59554668a9d1bc723a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishCostmap\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:publishCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DPublisher::publishCostmap ()}}
\par
{\bkmkstart AAAAAAACPA}
{\bkmkend AAAAAAACPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publishes the visualization data over ROS }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_a47e5b5d93113f39786112919a6981953_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_a47e5b5d93113f39786112919a6981953_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateBounds\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:updateBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DPublisher::updateBounds (unsigned int  {\i x0}, unsigned int  {\i xn}, unsigned int  {\i y0}, unsigned int  {\i yn}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPB}
{\bkmkend AAAAAAACPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Include the given bounds in the changed-rectangle. }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_publisher_a51c026184908fb427babad570150df30_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v active_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:active_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DPublisher::active_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPC}
{\bkmkend AAAAAAACPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v always_send_full_costmap_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:always_send_full_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DPublisher::always_send_full_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPD}
{\bkmkend AAAAAAACPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cost_translation_table_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:cost_translation_table_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * costmap_2d::Costmap2DPublisher::cost_translation_table_ = NULL{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPE}
{\bkmkend AAAAAAACPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Translate from 0-255 values in costmap to -1 to 100 values in message. }}\par
}
{\xe \v costmap_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2D}* costmap_2d::Costmap2DPublisher::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPF}
{\bkmkend AAAAAAACPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_pub_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:costmap_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher costmap_2d::Costmap2DPublisher::costmap_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPG}
{\bkmkend AAAAAAACPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_update_pub_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:costmap_update_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher costmap_2d::Costmap2DPublisher::costmap_update_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPH}
{\bkmkend AAAAAAACPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::Costmap2DPublisher::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPI}
{\bkmkend AAAAAAACPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v grid_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:grid_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_msgs::OccupancyGrid costmap_2d::Costmap2DPublisher::grid_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPJ}
{\bkmkend AAAAAAACPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v node\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle* costmap_2d::Costmap2DPublisher::node{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPK}
{\bkmkend AAAAAAACPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saved_origin_x_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:saved_origin_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2DPublisher::saved_origin_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPL}
{\bkmkend AAAAAAACPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saved_origin_y_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:saved_origin_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2DPublisher::saved_origin_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPM}
{\bkmkend AAAAAAACPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x0_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:x0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2DPublisher::x0_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPN}
{\bkmkend AAAAAAACPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xn_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:xn_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2DPublisher::xn_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPO}
{\bkmkend AAAAAAACPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y0_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:y0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2DPublisher::y0_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPP}
{\bkmkend AAAAAAACPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yn_\:costmap_2d::Costmap2DPublisher}
{\xe \v costmap_2d::Costmap2DPublisher\:yn_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::Costmap2DPublisher::yn_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPQ}
{\bkmkend AAAAAAACPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d_publisher.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b costmap_2d_publisher.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Costmap2DROS\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS}
{\bkmkstart AAAAAAACPR}
{\bkmkend AAAAAAACPR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for a 2D Costmap. Handles subscribing to topics that provide observations about obstacles in either the form of PointCloud or LaserScan messages. }}\par
{
{\f2 #include <costmap_2d_ros.h>}}\par
costmap_2d::Costmap2DROS \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2DROS} (const std::string &name, tf2_ros::Buffer &tf)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the wrapper }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Costmap2DROS} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b start} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subscribes to sensor topics if necessary and starts costmap updates, can be called to restart the costmap after calls to either {\b stop()} or {\b pause()} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stop} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops costmap updates and unsubscribes from sensor topics }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pause} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the costmap from updating, but sensor data still comes in over the wire }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resume} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resumes costmap updates }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateMap} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetLayers} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset each individual layer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isCurrent} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b getLayeredCostmap()}->{\b isCurrent()}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isStopped} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is the costmap stopped }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getRobotPose} (geometry_msgs::PoseStamped &global_pose) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pose of the robot in the global frame of the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getName} () const noexcept\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns costmap name }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTransformTolerance} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the delay in transform (tf) data that is tolerable in seconds }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} * {\b getCostmap} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the "master" costmap which receives updates from all the layers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getGlobalFrameID} () const noexcept\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the global frame of the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getBaseFrameID} () const noexcept\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the local frame of the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LayeredCostmap} * {\b getLayeredCostmap} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Polygon {\b getRobotFootprintPolygon} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current padded footprint as a geometry_msgs::Polygon. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< geometry_msgs::Point > & {\b getRobotFootprint} () const noexcept\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the current footprint of the robot as a vector of points. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< geometry_msgs::Point > & {\b getUnpaddedRobotFootprint} () const noexcept\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the current unpadded footprint of the robot as a vector of points. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getOrientedFootprint} (std::vector< geometry_msgs::Point > &oriented_footprint) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build the oriented footprint of the robot at the robot's current pose }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUnpaddedRobotFootprint} (const std::vector< geometry_msgs::Point > &points)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint of the robot to be the given set of points, padded by footprint_padding. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setUnpaddedRobotFootprintPolygon} (const geometry_msgs::Polygon &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint of the robot to be the given polygon, padded by footprint_padding. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LayeredCostmap} * {\b layered_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer & {\b tf_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used for transforming point clouds }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The global frame for the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b robot_base_frame_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The frame_id of the robot base }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b transform_tolerance_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout before transform errors }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readFootprintFromConfig} (const costmap_2d::Costmap2DConfig &new_config, const costmap_2d::Costmap2DConfig &old_config)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint from the new_config object. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadOldParameters} (ros::NodeHandle &nh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b warnForOldParameters} (ros::NodeHandle &nh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkOldParam} (ros::NodeHandle &nh, const std::string &param_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copyParentParameters} (const std::string &plugin_name, const std::string &plugin_type, ros::NodeHandle &nh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (costmap_2d::Costmap2DConfig &config, uint32_t level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b movementCB} (const ros::TimerEvent &event)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapUpdateLoop} (double frequency)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b map_update_thread_shutdown_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stop_updates_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stopped_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b robot_stopped_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::thread * {\b map_update_thread_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A thread for updating the map }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Timer {\b timer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_publish_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Duration {\b publish_cycle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pluginlib::ClassLoader< {\b Layer} > {\b plugin_loader_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b old_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2DPublisher} * {\b publisher_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< costmap_2d::Costmap2DConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex {\b configuration_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b footprint_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b footprint_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b unpadded_footprint_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b padded_footprint_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b footprint_padding_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d::Costmap2DConfig {\b old_config_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for a 2D Costmap. Handles subscribing to topics that provide observations about obstacles in either the form of PointCloud or LaserScan messages. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Costmap2DROS\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:Costmap2DROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2DROS::Costmap2DROS (const std::string &  {\i name}, tf2_ros::Buffer &  {\i tf})}}
\par
{\bkmkstart AAAAAAACPS}
{\bkmkend AAAAAAACPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the wrapper }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name for this costmap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{A reference to a TransformListener \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a8e6acdb79ef3eb738e8f4d9a5197a9ed_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~Costmap2DROS\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:~Costmap2DROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2DROS::~Costmap2DROS ()}}
\par
{\bkmkstart AAAAAAACPT}
{\bkmkend AAAAAAACPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkOldParam\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:checkOldParam}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::checkOldParam (ros::NodeHandle &  {\i nh}, const std::string &  {\i param_name}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPU}
{\bkmkend AAAAAAACPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a2a604f02c2216cb8c18e0a224016dd37_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v copyParentParameters\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:copyParentParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::copyParentParameters (const std::string &  {\i plugin_name}, const std::string &  {\i plugin_type}, ros::NodeHandle &  {\i nh}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACPV}
{\bkmkend AAAAAAACPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a6109471406414a981d79f582082687af_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a6109471406414a981d79f582082687af_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getBaseFrameID\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getBaseFrameID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & costmap_2d::Costmap2DROS::getBaseFrameID () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACPW}
{\bkmkend AAAAAAACPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the local frame of the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The local frame of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a9d02596d6352e0153a579427bbc2c394_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCostmap\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2D} * costmap_2d::Costmap2DROS::getCostmap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPX}
{\bkmkend AAAAAAACPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return a pointer to the "master" costmap which receives updates from all the layers. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as calling {\b getLayeredCostmap()}->{\b getCostmap()}. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a1fe322e03f6a103e3fbf9beeef530c0f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a1fe322e03f6a103e3fbf9beeef530c0f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGlobalFrameID\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getGlobalFrameID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & costmap_2d::Costmap2DROS::getGlobalFrameID () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACPY}
{\bkmkend AAAAAAACPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the global frame of the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The global frame of the costmap \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_aa2942240e1eb2ecadf166c56f8e79bd7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLayeredCostmap\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getLayeredCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LayeredCostmap} * costmap_2d::Costmap2DROS::getLayeredCostmap () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACPZ}
{\bkmkend AAAAAAACPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_ad95bf403e3210d99bcd207529cf6b5ba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getName\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & costmap_2d::Costmap2DROS::getName () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACQA}
{\bkmkend AAAAAAACQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns costmap name }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a94655d85e11b8c1e542a26674bcdc9b2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getOrientedFootprint\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getOrientedFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::getOrientedFootprint (std::vector< geometry_msgs::Point > &  {\i oriented_footprint}) const}}
\par
{\bkmkstart AAAAAAACQB}
{\bkmkend AAAAAAACQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build the oriented footprint of the robot at the robot's current pose }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oriented_footprint} \cell }{Will be filled with the points in the oriented footprint of the robot \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a66b8eaac1ba4252fd663adfddfecbb7e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getRobotFootprint\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getRobotFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< geometry_msgs::Point > & costmap_2d::Costmap2DROS::getRobotFootprint () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACQC}
{\bkmkend AAAAAAACQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the current footprint of the robot as a vector of points. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This version of the footprint is padded by the footprint_padding_ distance, set in the rosparam "footprint_padding".\par
The footprint initially comes from the rosparam "footprint" but can be overwritten by dynamic reconfigure or by messages received on the "footprint" topic. \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a4688b58dc94afe64bdaed02dceab5afd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getRobotFootprintPolygon\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getRobotFootprintPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Polygon costmap_2d::Costmap2DROS::getRobotFootprintPolygon () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACQD}
{\bkmkend AAAAAAACQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the current padded footprint as a geometry_msgs::Polygon. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_ae3688f38a8066eb3b6867f224edcc697_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getRobotPose\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getRobotPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::getRobotPose (geometry_msgs::PoseStamped &  {\i global_pose}) const}}
\par
{\bkmkstart AAAAAAACQE}
{\bkmkend AAAAAAACQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the pose of the robot in the global frame of the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{Will be set to the pose of the robot in the global frame of the costmap \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the pose was set successfully, false otherwise \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_adcf3512b555a02dbbe2f57e784defce9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getTransformTolerance\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getTransformTolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2DROS::getTransformTolerance () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACQF}
{\bkmkend AAAAAAACQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the delay in transform (tf) data that is tolerable in seconds }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_aa96116a5847c4cbbe872e7ace18dc67c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getUnpaddedRobotFootprint\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:getUnpaddedRobotFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< geometry_msgs::Point > & costmap_2d::Costmap2DROS::getUnpaddedRobotFootprint () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACQG}
{\bkmkend AAAAAAACQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the current unpadded footprint of the robot as a vector of points. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the raw version of the footprint without padding.\par
The footprint initially comes from the rosparam "footprint" but can be overwritten by dynamic reconfigure or by messages received on the "footprint" topic. \par
}}
{\xe \v isCurrent\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:isCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::isCurrent () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACQH}
{\bkmkend AAAAAAACQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as {\b getLayeredCostmap()}->{\b isCurrent()}. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a1c8735ead3c927906ca31e015bfc9ab7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a1c8735ead3c927906ca31e015bfc9ab7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isStopped\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:isStopped}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::isStopped () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACQI}
{\bkmkend AAAAAAACQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is the costmap stopped }}\par
}
{\xe \v loadOldParameters\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:loadOldParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::loadOldParameters (ros::NodeHandle &  {\i nh}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQJ}
{\bkmkend AAAAAAACQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_abb434405d6047ba76c6cbe4eeaa17d6f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_abb434405d6047ba76c6cbe4eeaa17d6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapUpdateLoop\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:mapUpdateLoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::mapUpdateLoop (double  {\i frequency}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQK}
{\bkmkend AAAAAAACQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a82872c177faeaaf9c5e0c93039329391_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a82872c177faeaaf9c5e0c93039329391_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v movementCB\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:movementCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::movementCB (const ros::TimerEvent &  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQL}
{\bkmkend AAAAAAACQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_ad6876d803a3eaa3006984e94b5a82397_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_ad6876d803a3eaa3006984e94b5a82397_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pause\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:pause}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::pause ()}}
\par
{\bkmkstart AAAAAAACQM}
{\bkmkend AAAAAAACQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops the costmap from updating, but sensor data still comes in over the wire }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a9df641b15f263c18d7a39e55224d5df3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readFootprintFromConfig\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:readFootprintFromConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::readFootprintFromConfig (const costmap_2d::Costmap2DConfig &  {\i new_config}, const costmap_2d::Costmap2DConfig &  {\i old_config}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQN}
{\bkmkend AAAAAAACQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint from the new_config object. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If the values of footprint and robot_radius are the same in new_config and old_config, nothing is changed. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_ae68ab88626d6d5f7a8b3f9dd44d60ff2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_ae68ab88626d6d5f7a8b3f9dd44d60ff2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::reconfigureCB (costmap_2d::Costmap2DConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQO}
{\bkmkend AAAAAAACQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a600b1395b84f782470c4c7a7fa661834_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a600b1395b84f782470c4c7a7fa661834_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetLayers\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:resetLayers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::resetLayers ()}}
\par
{\bkmkstart AAAAAAACQP}
{\bkmkend AAAAAAACQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset each individual layer }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_af0370b7b97c5d8cfcc961abb8d190f21_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_af0370b7b97c5d8cfcc961abb8d190f21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resume\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:resume}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::resume ()}}
\par
{\bkmkstart AAAAAAACQQ}
{\bkmkend AAAAAAACQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resumes costmap updates }}\par
}
{\xe \v setUnpaddedRobotFootprint\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:setUnpaddedRobotFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::setUnpaddedRobotFootprint (const std::vector< geometry_msgs::Point > &  {\i points})}}
\par
{\bkmkstart AAAAAAACQR}
{\bkmkend AAAAAAACQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint of the robot to be the given set of points, padded by footprint_padding. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should be a convex polygon, though this is not enforced.\par
First expands the given polygon by footprint_padding_ and then sets padded_footprint_ and calls layered_costmap_->setFootprint(). Also saves the unpadded footprint, which is available from {\b getUnpaddedRobotFootprint()}. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a220a578102cf3592a744ad5264bf09ed_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a220a578102cf3592a744ad5264bf09ed_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setUnpaddedRobotFootprintPolygon\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:setUnpaddedRobotFootprintPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::setUnpaddedRobotFootprintPolygon (const geometry_msgs::Polygon &  {\i footprint})}}
\par
{\bkmkstart AAAAAAACQS}
{\bkmkend AAAAAAACQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint of the robot to be the given polygon, padded by footprint_padding. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should be a convex polygon, though this is not enforced.\par
First expands the given polygon by footprint_padding_ and then sets padded_footprint_ and calls layered_costmap_->setFootprint(). Also saves the unpadded footprint, which is available from {\b getUnpaddedRobotFootprint()}. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a05c662c0ad169c124480ed3d9ee500e8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a05c662c0ad169c124480ed3d9ee500e8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v start\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::start ()}}
\par
{\bkmkstart AAAAAAACQT}
{\bkmkend AAAAAAACQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subscribes to sensor topics if necessary and starts costmap updates, can be called to restart the costmap after calls to either {\b stop()} or {\b pause()} }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a426e3bfc085f9534b908807d1d734396_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a426e3bfc085f9534b908807d1d734396_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stop\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::stop ()}}
\par
{\bkmkstart AAAAAAACQU}
{\bkmkend AAAAAAACQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stops costmap updates and unsubscribes from sensor topics }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a6034554ce34557a2426eda649629c670_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a6034554ce34557a2426eda649629c670_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateMap\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:updateMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::updateMap ()}}
\par
{\bkmkstart AAAAAAACQV}
{\bkmkend AAAAAAACQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a9c3aa244e7890b363a6317500d66e900_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a9c3aa244e7890b363a6317500d66e900_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v warnForOldParameters\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:warnForOldParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2DROS::warnForOldParameters (ros::NodeHandle &  {\i nh}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQW}
{\bkmkend AAAAAAACQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a202e22282dc4902dcde5b51e8a467268_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_r_o_s_a202e22282dc4902dcde5b51e8a467268_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v configuration_mutex_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:configuration_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex costmap_2d::Costmap2DROS::configuration_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQX}
{\bkmkend AAAAAAACQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<costmap_2d::Costmap2DConfig>* costmap_2d::Costmap2DROS::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQY}
{\bkmkend AAAAAAACQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_padding_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:footprint_padding_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float costmap_2d::Costmap2DROS::footprint_padding_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACQZ}
{\bkmkend AAAAAAACQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_pub_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:footprint_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher costmap_2d::Costmap2DROS::footprint_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRA}
{\bkmkend AAAAAAACRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_sub_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:footprint_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber costmap_2d::Costmap2DROS::footprint_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRB}
{\bkmkend AAAAAAACRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::Costmap2DROS::global_frame_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRC}
{\bkmkend AAAAAAACRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The global frame for the costmap }}\par
}
{\xe \v initialized_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRD}
{\bkmkend AAAAAAACRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_publish_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:last_publish_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time costmap_2d::Costmap2DROS::last_publish_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRE}
{\bkmkend AAAAAAACRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layered_costmap_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:layered_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LayeredCostmap}* costmap_2d::Costmap2DROS::layered_costmap_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRF}
{\bkmkend AAAAAAACRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_update_thread_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:map_update_thread_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::thread* costmap_2d::Costmap2DROS::map_update_thread_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRG}
{\bkmkend AAAAAAACRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A thread for updating the map }}\par
}
{\xe \v map_update_thread_shutdown_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:map_update_thread_shutdown_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::map_update_thread_shutdown_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRH}
{\bkmkend AAAAAAACRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::Costmap2DROS::name_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRI}
{\bkmkend AAAAAAACRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v old_config_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:old_config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2DConfig costmap_2d::Costmap2DROS::old_config_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRJ}
{\bkmkend AAAAAAACRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v old_pose_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:old_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped costmap_2d::Costmap2DROS::old_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRK}
{\bkmkend AAAAAAACRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v padded_footprint_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:padded_footprint_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> costmap_2d::Costmap2DROS::padded_footprint_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRL}
{\bkmkend AAAAAAACRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plugin_loader_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:plugin_loader_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pluginlib::ClassLoader<{\b Layer}> costmap_2d::Costmap2DROS::plugin_loader_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRM}
{\bkmkend AAAAAAACRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_cycle\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:publish_cycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Duration costmap_2d::Costmap2DROS::publish_cycle{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRN}
{\bkmkend AAAAAAACRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publisher_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:publisher_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2DPublisher}* costmap_2d::Costmap2DROS::publisher_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRO}
{\bkmkend AAAAAAACRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v robot_base_frame_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:robot_base_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::Costmap2DROS::robot_base_frame_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRP}
{\bkmkend AAAAAAACRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The frame_id of the robot base }}\par
}
{\xe \v robot_stopped_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:robot_stopped_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::robot_stopped_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRQ}
{\bkmkend AAAAAAACRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stop_updates_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:stop_updates_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::stop_updates_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRR}
{\bkmkend AAAAAAACRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stopped_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:stopped_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Costmap2DROS::stopped_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRS}
{\bkmkend AAAAAAACRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer& costmap_2d::Costmap2DROS::tf_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRT}
{\bkmkend AAAAAAACRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used for transforming point clouds }}\par
}
{\xe \v timer_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:timer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Timer costmap_2d::Costmap2DROS::timer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRU}
{\bkmkend AAAAAAACRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transform_tolerance_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:transform_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Costmap2DROS::transform_tolerance_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACRV}
{\bkmkend AAAAAAACRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
timeout before transform errors }}\par
}
{\xe \v unpadded_footprint_\:costmap_2d::Costmap2DROS}
{\xe \v costmap_2d::Costmap2DROS\:unpadded_footprint_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> costmap_2d::Costmap2DROS::unpadded_footprint_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACRW}
{\bkmkend AAAAAAACRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d_ros.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b costmap_2d_ros.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::CostmapLayer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer}
{\bkmkstart AAAAAAACRX}
{\bkmkend AAAAAAACRX}
\par
{
{\f2 #include <costmap_layer.h>}}\par
\'C0\'E0 costmap_2d::CostmapLayer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::CostmapLayer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CostmapLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isDiscretized} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b matchSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b clearArea} (int start_x, int start_y, int end_x, int end_y, bool invert_area=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addExtraBounds} (double mx0, double my0, double mx1, double my1)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateWithTrueOverwrite} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateWithOverwrite} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateWithMax} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateWithAddition} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b touch} (double x, double y, double *min_x, double *min_y, double *max_x, double *max_y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b useExtraBounds} (double *min_x, double *min_y, double *max_x, double *max_y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b has_extra_bounds_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b extra_min_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b extra_max_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b extra_min_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b extra_max_y_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CostmapLayer\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:CostmapLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::CostmapLayer::CostmapLayer (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACRY}
{\bkmkend AAAAAAACRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addExtraBounds\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:addExtraBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::addExtraBounds (double  {\i mx0}, double  {\i my0}, double  {\i mx1}, double  {\i my1})}}
\par
{\bkmkstart AAAAAAACRZ}
{\bkmkend AAAAAAACRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If an external source changes values in the costmap, it should call this method with the area that it changed to ensure that the costmap includes this region as well. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx0} \cell }{Minimum x value of the bounding box \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my0} \cell }{Minimum y value of the bounding box \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx1} \cell }{Maximum x value of the bounding box \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my1} \cell }{Maximum y value of the bounding box \cell }
{\row }
}
}}
{\xe \v clearArea\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:clearArea}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::clearArea (int  {\i start_x}, int  {\i start_y}, int  {\i end_x}, int  {\i end_y}, bool  {\i invert_area} = {\f2 false}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSA}
{\bkmkend AAAAAAACSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_a2d7de3edced6d1c27a678ab0ebc10f50_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isDiscretized\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:isDiscretized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::CostmapLayer::isDiscretized (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACSB}
{\bkmkend AAAAAAACSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v matchSize\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:matchSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::matchSize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSC}
{\bkmkend AAAAAAACSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSD \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
{
\'B1\'BB {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSE \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSF \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_a9260d210630b6522cad87397506f9696_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_a9260d210630b6522cad87397506f9696_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v touch\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:touch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::touch (double  {\i x}, double  {\i y}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSG}
{\bkmkend AAAAAAACSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the bounding box specified in the parameters to include the location (x,y)\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{x-coordinate to include \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{y-coordinate to include \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_x} \cell }{bounding box \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_y} \cell }{bounding box \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_x} \cell }{bounding box \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_y} \cell }{bounding box \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_a7ae82ac5b75c5627ded6cda139849f6c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateWithAddition\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:updateWithAddition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::updateWithAddition ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSH}
{\bkmkend AAAAAAACSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_ab76205b8052d66f0096e5942a3ed1530_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateWithMax\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:updateWithMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::updateWithMax ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSI}
{\bkmkend AAAAAAACSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_acd9d236d8d16c8b4a004ae3b1709aa92_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_acd9d236d8d16c8b4a004ae3b1709aa92_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateWithOverwrite\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:updateWithOverwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::updateWithOverwrite ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSJ}
{\bkmkend AAAAAAACSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_ac01cf9ead24877e522dece2254c87632_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_ac01cf9ead24877e522dece2254c87632_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateWithTrueOverwrite\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:updateWithTrueOverwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::updateWithTrueOverwrite ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSK}
{\bkmkend AAAAAAACSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_adc52dfe36cea8be621d560231e861dbd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_adc52dfe36cea8be621d560231e861dbd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v useExtraBounds\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:useExtraBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapLayer::useExtraBounds (double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSL}
{\bkmkend AAAAAAACSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_layer_aeca7c78b12489bcfff974cd60753a6f1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v extra_max_x_\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:extra_max_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::CostmapLayer::extra_max_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSM}
{\bkmkend AAAAAAACSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v extra_max_y_\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:extra_max_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::CostmapLayer::extra_max_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSN}
{\bkmkend AAAAAAACSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v extra_min_x_\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:extra_min_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::CostmapLayer::extra_min_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSO}
{\bkmkend AAAAAAACSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v extra_min_y_\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:extra_min_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::CostmapLayer::extra_min_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSP}
{\bkmkend AAAAAAACSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v has_extra_bounds_\:costmap_2d::CostmapLayer}
{\xe \v costmap_2d::CostmapLayer\:has_extra_bounds_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::CostmapLayer::has_extra_bounds_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACSQ}
{\bkmkend AAAAAAACSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_layer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b costmap_layer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::CostmapModel\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel}
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using the costmap. }}\par
{
{\f2 #include <costmap_model.h>}}\par
\'C0\'E0 base_local_planner::CostmapModel \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::CostmapModel \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CostmapModel} (const {\b costmap_2d::Costmap2D} &costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'C4\'A3\'D0\'CD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~CostmapModel} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'C0\'BD\'E7\'C4\'A3\'D0\'CD\'B5\'C4\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'CA\'C7\'B7\'F1\'D3\'D0\'D5\'CF\'B0\'AD\'CE\'EF\'C2\'E4\'B5\'BD\'CD\'B9footprint\'C0\'EF\'C3\'E6\'A3\'AC\'C6\'E4\'D6\'D0footprint\'D2\'D1\'BE\'AD\'B1\'BB\'D5\'A4\'B8\'F1\'BB\'AF\'B3\'C9\'CD\'F8\'B8\'F1 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lineCost} (int x0, int x1, int y0, int y1) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'A4\'B8\'F1\'BB\'AF\'D2\'BB\'CC\'F5\'CF\'DF\'B6\'CE\'B5\'BD\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'B2\'A2\'C7\'D2\'BD\'F8\'D0\'D0\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointCost} (int x, int y) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'C4\'B3\'B8\'F6\'B5\'E3\'D4\'DA\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'D6\'D0\'B5\'C4\'B4\'FA\'BC\'DB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, double inscribed_radius=0.0, double circumscribed_radius=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius, double extra)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b costmap_2d::Costmap2D} & {\b costmap_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows access of costmap obstacle information }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using the costmap. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CostmapModel\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:CostmapModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::CostmapModel::CostmapModel (const {\b costmap_2d::Costmap2D} &  {\i costmap})}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'C4\'A3\'D0\'CD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'D3\'C3\'B5\'BD\'B5\'C4\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}}
{\xe \v ~CostmapModel\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:~CostmapModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::CostmapModel::~CostmapModel (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'C0\'BD\'E7\'C4\'A3\'D0\'CD\'B5\'C4\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v footprintCost\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::CostmapModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'CA\'C7\'B7\'F1\'D3\'D0\'D5\'CF\'B0\'AD\'CE\'EF\'C2\'E4\'B5\'BD\'CD\'B9footprint\'C0\'EF\'C3\'E6\'A3\'AC\'C6\'E4\'D6\'D0footprint\'D2\'D1\'BE\'AD\'B1\'BB\'D5\'A4\'B8\'F1\'BB\'AF\'B3\'C9\'CD\'F8\'B8\'F1 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'C4\'DA\'C7\'D0\'D4\'B2\'B0\'EB\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CD\'E2\'BD\'D3\'D4\'B2\'B0\'EB\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B7\'B5\'BB\'D8\'D5\'FD\'CA\'FD\'C8\'E7\'B9\'FB\'CB\'F9\'D3\'D0\'B5\'C4\'B5\'E3\'B6\'BC\'D4\'DAfootprint\'CD\'E2\'B2\'BF\'A3\'AC\'B8\'BA\'CA\'FD\'D4\'F2\'B7\'D6\'B1\'F0\'B4\'FA\'B1\'ED: -1 \'B4\'FA\'B1\'ED footprint \'C5\'F6\'B5\'BD\'D6\'C1\'C9\'D9\'D2\'BB\'B8\'F6\'D6\'C2\'C3\'FC\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'A5\'D4\'AA\'B8\'F1(lethal obstacle cell) -2 \'B4\'FA\'B1\'ED footprint \'C5\'F6\'B5\'BD\'D6\'C1\'C9\'D9\'D2\'BB\'B8\'F6\'CE\'DE\'D0\'C5\'CF\'A2\'B5\'A5\'D4\'AA\'B8\'F1 (no-information cell) -3 \'B4\'FA\'B1\'ED footprint \'D3\'D0\'D2\'BB\'B2\'BF\'B7\'D6\'D4\'DA\'B5\'D8\'CD\'BC\'CD\'E2\'C3\'E6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::WorldModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model_a80d896d06af4f1c0bd5b61cd758743af_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model_a80d896d06af4f1c0bd5b61cd758743af_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise: -1 if footprint covers at least a lethal obstacle cell, or -2 if footprint covers at least a no-information cell, or -3 if footprint is partially or totally outside of the map \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::WorldModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v footprintCost\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}, double  {\i extra}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise \par
}}}}
{\xe \v footprintCost\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (double  {\i x}, double  {\i y}, double  {\i theta}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec}, double  {\i inscribed_radius} = {\f2 0.0}, double  {\i circumscribed_radius} = {\f2 0.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineCost\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:lineCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::CostmapModel::lineCost (int  {\i x0}, int  {\i x1}, int  {\i y0}, int  {\i y1}) const}}
\par
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'A4\'B8\'F1\'BB\'AF\'D2\'BB\'CC\'F5\'CF\'DF\'B6\'CE\'B5\'BD\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'B2\'A2\'C7\'D2\'BD\'F8\'D0\'D0\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x0} \cell }{\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'DA\'D2\'BB\'B8\'F6\'B5\'A5\'D4\'AA\'B8\'F1\'B5\'C4x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y0} \cell }{\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'DA\'D2\'BB\'B8\'F6\'B5\'A5\'D4\'AA\'B8\'F1\'B5\'C4y\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x1} \cell }{\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'DA\'B6\'FE\'B8\'F6\'B5\'A5\'D4\'AA\'B8\'F1\'B5\'C4x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y1} \cell }{\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'DA\'B6\'FE\'B8\'F6\'B5\'A5\'D4\'AA\'B8\'F1\'B5\'C4y\'D7\'F8\'B1\'EA \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B6\'D4\'D3\'DA\'BA\'CF\'B7\'A8\'B5\'C4\'CF\'DF\'B6\'CE\'B7\'B5\'BB\'D8\'D5\'FD\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model_a8c65ee26aa8032afb635c3cb544e57cf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model_a8c65ee26aa8032afb635c3cb544e57cf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pointCost\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:pointCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::CostmapModel::pointCost (int  {\i x}, int  {\i y}) const}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'C4\'B3\'B8\'F6\'B5\'E3\'D4\'DA\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'D6\'D0\'B5\'C4\'B4\'FA\'BC\'DB }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{\'B5\'E3\'D4\'DA\'B5\'A5\'D4\'AA\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'C4x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{\'B5\'E3\'D4\'DA\'B5\'A5\'D4\'AA\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'C4y\'D7\'F8\'B1\'EA \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B6\'D4\'D3\'DA\'BA\'CF\'B7\'A8\'B5\'C4\'CF\'DF\'B6\'CE\'B7\'B5\'BB\'D8\'D5\'FD\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model_abfd021e995f9493ddeb64184a0bd3cf8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_costmap_model_abfd021e995f9493ddeb64184a0bd3cf8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_\:base_local_planner::CostmapModel}
{\xe \v base_local_planner::CostmapModel\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b costmap_2d::Costmap2D}& base_local_planner::CostmapModel::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Allows access of costmap obstacle information }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b costmap_model.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b costmap_model.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::CostmapTester\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester}
{\bkmkstart AAAAAAACSR}
{\bkmkend AAAAAAACSR}
\'C0\'E0 costmap_2d::CostmapTester \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::CostmapTester \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CostmapTester} (tf2_ros::Buffer &tf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkConsistentCosts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compareCellToNeighbors} ({\b costmap_2d::Costmap2D} &costmap, unsigned int x, unsigned int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compareCells} ({\b costmap_2d::Costmap2D} &costmap, unsigned int x, unsigned int y, unsigned int nx, unsigned int ny)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TestBody} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} {\b costmap_ros_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CostmapTester\:costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester\:CostmapTester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::CostmapTester::CostmapTester (tf2_ros::Buffer &  {\i tf})}}
\par
{\bkmkstart AAAAAAACSS}
{\bkmkend AAAAAAACSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkConsistentCosts\:costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester\:checkConsistentCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapTester::checkConsistentCosts ()}}
\par
{\bkmkstart AAAAAAACST}
{\bkmkend AAAAAAACST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester_a73e0c2048004f4c99a2cc868aed060b3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester_a73e0c2048004f4c99a2cc868aed060b3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v compareCells\:costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester\:compareCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapTester::compareCells ({\b costmap_2d::Costmap2D} &  {\i costmap}, unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i nx}, unsigned int  {\i ny})}}
\par
{\bkmkstart AAAAAAACSU}
{\bkmkend AAAAAAACSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester_a027acc4743f9e864ac5216ef32bd4a79_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester_a027acc4743f9e864ac5216ef32bd4a79_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v compareCellToNeighbors\:costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester\:compareCellToNeighbors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::CostmapTester::compareCellToNeighbors ({\b costmap_2d::Costmap2D} &  {\i costmap}, unsigned int  {\i x}, unsigned int  {\i y})}}
\par
{\bkmkstart AAAAAAACSV}
{\bkmkend AAAAAAACSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester_abaef05f8bb941945e031a4f5c70d9402_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap_tester_abaef05f8bb941945e031a4f5c70d9402_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TestBody\:costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester\:TestBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::CostmapTester::TestBody (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSW}
{\bkmkend AAAAAAACSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_ros_\:costmap_2d::CostmapTester}
{\xe \v costmap_2d::CostmapTester\:costmap_ros_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS} costmap_2d::CostmapTester::costmap_ros_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACSX}
{\bkmkend AAAAAAACSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/test/{\b costmap_tester.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::DijkstraExpansion\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion}
{\bkmkstart AAAAAAADEV}
{\bkmkend AAAAAAADEV}
\par
{
{\f2 #include <dijkstra.h>}}\par
\'C0\'E0 global_planner::DijkstraExpansion \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::DijkstraExpansion \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DijkstraExpansion} ({\b PotentialCalculator} *p_calc, int nx, int ny)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~DijkstraExpansion} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b calculatePotentials} (unsigned char *costs, double start_x, double start_y, double end_x, double end_y, int cycles, float *potential)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (int nx, int ny)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNeutralCost} (unsigned char neutral_cost)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPreciseStart} (bool precise)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateCell} (unsigned char *costs, float *potential, int {\b n})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the cell at index n }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getCost} (unsigned char *costs, int {\b n})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b buffer1_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b buffer2_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b buffer3_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b currentBuffer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b nextBuffer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b overBuffer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b currentEnd_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nextEnd_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b overEnd_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool * {\b pending_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b precise_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b priorityIncrement_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v DijkstraExpansion\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:DijkstraExpansion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::DijkstraExpansion::DijkstraExpansion ({\b PotentialCalculator} *  {\i p_calc}, int  {\i nx}, int  {\i ny})}}
\par
{\bkmkstart AAAAAAADEW}
{\bkmkend AAAAAAADEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~DijkstraExpansion\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:~DijkstraExpansion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::DijkstraExpansion::~DijkstraExpansion (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEX}
{\bkmkend AAAAAAADEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v calculatePotentials\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:calculatePotentials}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::DijkstraExpansion::calculatePotentials (unsigned char *  {\i costs}, double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, int  {\i cycles}, float *  {\i potential}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADEY}
{\bkmkend AAAAAAADEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b global_planner::Expander} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion_a1102e169bb79dac31de8fe5ca5ace39b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCost\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:getCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::DijkstraExpansion::getCost (unsigned char *  {\i costs}, int  {\i n}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEZ}
{\bkmkend AAAAAAADEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
updates the cell at index n \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion_a13395ccfa132ce826ee5f88865b73aee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setNeutralCost\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:setNeutralCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::DijkstraExpansion::setNeutralCost (unsigned char  {\i neutral_cost}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFA}
{\bkmkend AAAAAAADFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setPreciseStart\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:setPreciseStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::DijkstraExpansion::setPreciseStart (bool  {\i precise}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFB}
{\bkmkend AAAAAAADFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion_a5ba5aa2bff86fd1b18b24163379d9e2b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setSize\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::DijkstraExpansion::setSize (int  {\i nx}, int  {\i ny}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADFC}
{\bkmkend AAAAAAADFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nx} \cell }{The x size of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ny} \cell }{The y size of the map sets or resets the size of the map \cell }
{\row }
}
}{
\'D6\'D8\'D4\'D8 {\b global_planner::Expander} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADFD \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion_a7d286126b2c478fc55c5e995e1deff29_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateCell\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:updateCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::DijkstraExpansion::updateCell (unsigned char *  {\i costs}, float *  {\i potential}, int  {\i n}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFE}
{\bkmkend AAAAAAADFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the cell at index n }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costs} \cell }{The costmap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i potential} \cell }{The potential array in which we are calculating \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i n} \cell }{The index to update \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion_a037961c97a953fddf61bbae64f9c1b97_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_dijkstra_expansion_a037961c97a953fddf61bbae64f9c1b97_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v buffer1_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:buffer1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* global_planner::DijkstraExpansion::buffer1_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFF}
{\bkmkend AAAAAAADFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block priority buffers \par
}}
{\xe \v buffer2_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:buffer2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * global_planner::DijkstraExpansion::buffer2_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFG}
{\bkmkend AAAAAAADFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v buffer3_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:buffer3_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * global_planner::DijkstraExpansion::buffer3_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFH}
{\bkmkend AAAAAAADFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
storage buffers for priority blocks \par
}}
{\xe \v currentBuffer_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:currentBuffer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* global_planner::DijkstraExpansion::currentBuffer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFI}
{\bkmkend AAAAAAADFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentEnd_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:currentEnd_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::DijkstraExpansion::currentEnd_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFJ}
{\bkmkend AAAAAAADFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextBuffer_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:nextBuffer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * global_planner::DijkstraExpansion::nextBuffer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFK}
{\bkmkend AAAAAAADFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextEnd_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:nextEnd_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::DijkstraExpansion::nextEnd_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFL}
{\bkmkend AAAAAAADFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v overBuffer_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:overBuffer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * global_planner::DijkstraExpansion::overBuffer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFM}
{\bkmkend AAAAAAADFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
priority buffer block ptrs \par
}}
{\xe \v overEnd_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:overEnd_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::DijkstraExpansion::overEnd_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFN}
{\bkmkend AAAAAAADFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
end points of arrays \par
}}
{\xe \v pending_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:pending_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool* global_planner::DijkstraExpansion::pending_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFO}
{\bkmkend AAAAAAADFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pending_ cells during propagation \par
}}
{\xe \v precise_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:precise_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::DijkstraExpansion::precise_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFP}
{\bkmkend AAAAAAADFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v priorityIncrement_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:priorityIncrement_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::DijkstraExpansion::priorityIncrement_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFQ}
{\bkmkend AAAAAAADFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
priority threshold increment \par
}}
{\xe \v threshold_\:global_planner::DijkstraExpansion}
{\xe \v global_planner::DijkstraExpansion\:threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::DijkstraExpansion::threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADFR}
{\bkmkend AAAAAAADFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block priority thresholds current threshold \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b dijkstra.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b dijkstra.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner::DWAPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner}
{\bkmkstart AAAAAAADBV}
{\bkmkend AAAAAAADBV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6DWA\'CB\'E3\'B7\'A8\'B5\'C4\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'C0\'E0 }}\par
{
{\f2 #include <dwa_planner.h>}}\par
dwa_local_planner::DWAPlanner \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DWAPlanner} (std::string name, {\b base_local_planner::LocalPlannerUtil} *planner_util)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'B9\'B9\'D4\'EC }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigure} (DWAPlannerConfig &cfg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C5\'E4\'D6\'C3\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkTrajectory} (const Eigen::Vector3f pos, const Eigen::Vector3f vel, const Eigen::Vector3f vel_samples)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B6\'D4\'D3\'DA\'CE\'BB\'D6\'C3/\'CB\'D9\'B6\'C8\'D7\'E9\'BA\'CF\'A3\'AC\'B9\'EC\'BC\'A3\'CA\'C7\'B7\'F1\'BA\'CF\'B7\'A8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::Trajectory} {\b findBestPath} (const geometry_msgs::PoseStamped &global_pose, const geometry_msgs::PoseStamped &global_vel, geometry_msgs::PoseStamped &drive_velocities)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'D3\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'B1\'C7\'B0\'B5\'C4\'CE\'BB\'D6\'C3\'BA\'CD\'CB\'D9\'B6\'C8\'D5\'D2\'B3\'F6\'D7\'EE\'BA\'C3\'B5\'C4\'B9\'EC\'BC\'A3\'C8\'A5\'D6\'B4\'D0\'D0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatePlanAndLocalCosts} (const geometry_msgs::PoseStamped &global_pose, const std::vector< geometry_msgs::PoseStamped > &new_plan, const std::vector< geometry_msgs::Point > &footprint_spec)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'DA\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C7\'B0\'B8\'FC\'D0\'C2\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getSimPeriod} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'B5\'C3\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D4\'A4\'C6\'DA\'CB\'F9\'D0\'E8\'D2\'AA\'B5\'C4\'BC\'C6\'CB\'E3\'CA\'B1\'BC\'E4 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getCellCosts} (int cx, int cy, float &path_cost, float &goal_cost, float &occ_cost, float &total_cost)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the components and total cost for a map grid cell \'BC\'C6\'CB\'E3\'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'B5\'A5\'D4\'AA\'B5\'C4\'B4\'FA\'BC\'DB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setPlan} (const std::vector< geometry_msgs::PoseStamped > &orig_global_plan)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::LocalPlannerUtil} * {\b planner_util_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stop_time_buffer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b path_distance_bias_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b goal_distance_bias_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b occdist_scale_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eigen::Vector3f {\b vsamples_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_period_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::Trajectory} {\b result_traj_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b forward_point_distance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > {\b global_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b configuration_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b traj_cloud_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b publish_cost_grid_pc_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b publish_traj_pc_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cheat_factor_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::MapGridVisualizer} {\b map_viz_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::SimpleTrajectoryGenerator} {\b generator_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::OscillationCostFunction} {\b oscillation_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::ObstacleCostFunction} {\b obstacle_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::MapGridCostFunction} {\b path_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::MapGridCostFunction} {\b goal_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::MapGridCostFunction} {\b goal_front_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::MapGridCostFunction} {\b alignment_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TwirlingCostFunction} {\b twirling_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::SimpleScoredSamplingPlanner} {\b scored_sampling_planner_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6DWA\'CB\'E3\'B7\'A8\'B5\'C4\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'C0\'E0 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v DWAPlanner\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:DWAPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dwa_local_planner::DWAPlanner::DWAPlanner (std::string  {\i name}, {\b base_local_planner::LocalPlannerUtil} *  {\i planner_util})}}
\par
{\bkmkstart AAAAAAADBW}
{\bkmkend AAAAAAADBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'B9\'B9\'D4\'EC }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'BD\'AB\'D3\'C3\'B5\'BD\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'CA\'B5\'C0\'FD\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{\'D3\'C3\'B5\'BD\'B5\'C4tf frame \'D6\'D0\'B5\'C4frame id \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_ab2c1143a3a54638d0dc38f9b6fa16e53_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkTrajectory\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:checkTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlanner::checkTrajectory (const Eigen::Vector3f  {\i pos}, const Eigen::Vector3f  {\i vel}, const Eigen::Vector3f  {\i vel_samples})}}
\par
{\bkmkstart AAAAAAADBX}
{\bkmkend AAAAAAADBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B6\'D4\'D3\'DA\'CE\'BB\'D6\'C3/\'CB\'D9\'B6\'C8\'D7\'E9\'BA\'CF\'A3\'AC\'B9\'EC\'BC\'A3\'CA\'C7\'B7\'F1\'BA\'CF\'B7\'A8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pos} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vel} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vel_samples} \cell }{\'C6\'DA\'CD\'FB\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C8\'E7\'B9\'FB\'CA\'C7True, \'B9\'EC\'BC\'A3\'BA\'CF\'B7\'A8\par
}}This function is used when other strategies are to be applied, but the cost functions for obstacles are to be reused. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_a1200e7b997f2acd8c3b912bed37e69d5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_a1200e7b997f2acd8c3b912bed37e69d5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBestPath\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:findBestPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::Trajectory} dwa_local_planner::DWAPlanner::findBestPath (const geometry_msgs::PoseStamped &  {\i global_pose}, const geometry_msgs::PoseStamped &  {\i global_vel}, geometry_msgs::PoseStamped &  {\i drive_velocities})}}
\par
{\bkmkstart AAAAAAADBY}
{\bkmkend AAAAAAADBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'D3\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'B1\'C7\'B0\'B5\'C4\'CE\'BB\'D6\'C3\'BA\'CD\'CB\'D9\'B6\'C8\'D5\'D2\'B3\'F6\'D7\'EE\'BA\'C3\'B5\'C4\'B9\'EC\'BC\'A3\'C8\'A5\'D6\'B4\'D0\'D0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_vel} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i drive_velocities} \cell }{\'B8\'F8\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'D7\'D7\'F9\'B5\'C4\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B7\'B5\'BB\'D8\'D7\'EE\'B8\'DF\'B5\'C3\'B7\'D6\'B5\'C4\'B9\'EC\'BC\'A3, cost >= 0 \'D2\'E2\'CE\'B6\'D7\'C5\'B8\'C3\'B9\'EC\'BC\'A3\'BF\'C9\'D2\'D4\'B1\'BB\'D6\'B4\'D0\'D0 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_acf862f4cbfd701bacf1eb359cd05892f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCellCosts\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:getCellCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlanner::getCellCosts (int  {\i cx}, int  {\i cy}, float &  {\i path_cost}, float &  {\i goal_cost}, float &  {\i occ_cost}, float &  {\i total_cost})}}
\par
{\bkmkstart AAAAAAADBZ}
{\bkmkend AAAAAAADBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the components and total cost for a map grid cell \'BC\'C6\'CB\'E3\'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'B5\'A5\'D4\'AA\'B5\'C4\'B4\'FA\'BC\'DB }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cx} \cell }{\'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'D6\'D0\'B5\'A5\'D4\'AA\'B8\'F1x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cy} \cell }{\'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'D6\'D0\'B5\'A5\'D4\'AA\'B8\'F1y\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path_cost} \cell }{\'C2\'B7\'BE\'B6\'B5\'C4\'B4\'FA\'BC\'DB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_cost} \cell }{\'B5\'BD\'C4\'BF\'B1\'EA\'B5\'E3\'BE\'E0\'C0\'EB\'B5\'C4\'B4\'FA\'BC\'DB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i occ_cost} \cell }{\'B5\'A5\'D4\'AA\'B8\'F1\'B4\'FA\'BC\'DB\'D6\'B5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i total_cost} \cell }{\'D7\'DC\'CC\'E5\'B4\'FA\'BC\'DB\'A3\'AC\'D3\'D0\'B0\'D1\'B3\'DF\'B6\'C8\'D2\'F2\'D7\'D3\'BF\'BC\'C2\'C7\'BD\'F8\'C8\'A5 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True : \'D5\'E2\'B8\'F6\'B5\'A5\'D4\'AA\'B8\'F1\'BF\'C9\'D2\'D4\'CD\'A8\'B9\'FD \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_ab62d6664d13e90e42327de34a2ed1cfb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_ab62d6664d13e90e42327de34a2ed1cfb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSimPeriod\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:getSimPeriod}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::getSimPeriod (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADCA}
{\bkmkend AAAAAAADCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'B5\'C3\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D4\'A4\'C6\'DA\'CB\'F9\'D0\'E8\'D2\'AA\'B5\'C4\'BC\'C6\'CB\'E3\'CA\'B1\'BC\'E4 }}\par
}
{\xe \v reconfigure\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:reconfigure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dwa_local_planner::DWAPlanner::reconfigure (DWAPlannerConfig &  {\i cfg})}}
\par
{\bkmkstart AAAAAAADCB}
{\bkmkend AAAAAAADCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C5\'E4\'D6\'C3\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7 }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_a9388b62309f6148c697aef4ebf5fe20a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPlan\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:setPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlanner::setPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i orig_global_plan})}}
\par
{\bkmkstart AAAAAAADCC}
{\bkmkend AAAAAAADCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C9\'E8\'D6\'C3\'D0\'C2\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'BA\'CD\'D6\'D8\'D6\'C3\'D7\'B4\'CC\'AC \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_ac0ab6d668b0b9e867ca2ba3ec2f235bf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updatePlanAndLocalCosts\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:updatePlanAndLocalCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dwa_local_planner::DWAPlanner::updatePlanAndLocalCosts (const geometry_msgs::PoseStamped &  {\i global_pose}, const std::vector< geometry_msgs::PoseStamped > &  {\i new_plan}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec})}}
\par
{\bkmkstart AAAAAAADCD}
{\bkmkend AAAAAAADCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'DA\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C7\'B0\'B8\'FC\'D0\'C2\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_plan} \cell }{\'D0\'C2\'B5\'C4\'B9\'E6\'BB\'AE\'C2\'B7\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint_spec} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint(\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'B5\'D7\'C5\'CC\'D0\'CE\'D7\'B4)\cell }
{\row }
}
The obstacle cost function gets the footprint. The path and goal cost functions get the global_plan The alignment cost functions get a version of the global plan that is modified based on the global_pose \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_aa681debca2e138a957652e9451893f67_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v alignment_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:alignment_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::MapGridCostFunction} dwa_local_planner::DWAPlanner::alignment_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCE}
{\bkmkend AAAAAAADCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cheat_factor_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:cheat_factor_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::cheat_factor_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCF}
{\bkmkend AAAAAAADCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v configuration_mutex_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:configuration_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex dwa_local_planner::DWAPlanner::configuration_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCG}
{\bkmkend AAAAAAADCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v forward_point_distance_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:forward_point_distance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::forward_point_distance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCH}
{\bkmkend AAAAAAADCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frame_id_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string dwa_local_planner::DWAPlanner::frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCI}
{\bkmkend AAAAAAADCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v generator_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:generator_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::SimpleTrajectoryGenerator} dwa_local_planner::DWAPlanner::generator_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCJ}
{\bkmkend AAAAAAADCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_plan_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:global_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped> dwa_local_planner::DWAPlanner::global_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCK}
{\bkmkend AAAAAAADCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:goal_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::MapGridCostFunction} dwa_local_planner::DWAPlanner::goal_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCL}
{\bkmkend AAAAAAADCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_distance_bias_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:goal_distance_bias_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::goal_distance_bias_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCM}
{\bkmkend AAAAAAADCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_front_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:goal_front_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::MapGridCostFunction} dwa_local_planner::DWAPlanner::goal_front_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCN}
{\bkmkend AAAAAAADCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_viz_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:map_viz_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::MapGridVisualizer} dwa_local_planner::DWAPlanner::map_viz_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCO}
{\bkmkend AAAAAAADCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v obstacle_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:obstacle_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::ObstacleCostFunction} dwa_local_planner::DWAPlanner::obstacle_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCP}
{\bkmkend AAAAAAADCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v occdist_scale_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:occdist_scale_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::occdist_scale_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCQ}
{\bkmkend AAAAAAADCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oscillation_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:oscillation_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::OscillationCostFunction} dwa_local_planner::DWAPlanner::oscillation_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCR}
{\bkmkend AAAAAAADCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v path_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:path_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::MapGridCostFunction} dwa_local_planner::DWAPlanner::path_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCS}
{\bkmkend AAAAAAADCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v path_distance_bias_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:path_distance_bias_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::path_distance_bias_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCT}
{\bkmkend AAAAAAADCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_util_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:planner_util_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::LocalPlannerUtil}* dwa_local_planner::DWAPlanner::planner_util_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCU}
{\bkmkend AAAAAAADCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_cost_grid_pc_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:publish_cost_grid_pc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlanner::publish_cost_grid_pc_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCV}
{\bkmkend AAAAAAADCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_traj_pc_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:publish_traj_pc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlanner::publish_traj_pc_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCW}
{\bkmkend AAAAAAADCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v result_traj_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:result_traj_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::Trajectory} dwa_local_planner::DWAPlanner::result_traj_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCX}
{\bkmkend AAAAAAADCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scored_sampling_planner_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:scored_sampling_planner_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::SimpleScoredSamplingPlanner} dwa_local_planner::DWAPlanner::scored_sampling_planner_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCY}
{\bkmkend AAAAAAADCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sim_period_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:sim_period_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::sim_period_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADCZ}
{\bkmkend AAAAAAADCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stop_time_buffer_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:stop_time_buffer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double dwa_local_planner::DWAPlanner::stop_time_buffer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDA}
{\bkmkend AAAAAAADDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v traj_cloud_pub_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:traj_cloud_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher dwa_local_planner::DWAPlanner::traj_cloud_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDB}
{\bkmkend AAAAAAADDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v twirling_costs_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:twirling_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::TwirlingCostFunction} dwa_local_planner::DWAPlanner::twirling_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDC}
{\bkmkend AAAAAAADDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vsamples_\:dwa_local_planner::DWAPlanner}
{\xe \v dwa_local_planner::DWAPlanner\:vsamples_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f dwa_local_planner::DWAPlanner::vsamples_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDD}
{\bkmkend AAAAAAADDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dwa_local_planner/include/dwa_local_planner/{\b dwa_planner.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dwa_local_planner/src/{\b dwa_planner.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner::DWAPlannerROS\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS}
{\bkmkstart AAAAAAADDE}
{\bkmkend AAAAAAADDE}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWAPlannerROS\'CA\'C7\'B7\'E2\'D7\'B0\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'C1\'CB\'D3\'EBmove_base\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'AC\'D7\'F7\'CE\'AAmove_base\'B5\'C4\'B2\'E5\'BC\'FE }}\par
{
{\f2 #include <dwa_planner_ros.h>}}\par
\'C0\'E0 dwa_local_planner::DWAPlannerROS \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
dwa_local_planner::DWAPlannerROS \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DWAPlannerROS} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b DWAPlannerROS} \'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'B9\'B9\'D4\'EC }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'BD\'A8ros\'B5\'C4\'B7\'E2\'D7\'B0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~DWAPlannerROS} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'CE\'F6\'B9\'B9 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b computeVelocityCommands} (geometry_msgs::Twist &cmd_vel)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8\'B8\'F9\'BE\'DD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8\'BA\'CD\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dwaComputeVelocityCommands} (geometry_msgs::PoseStamped &global_pose, geometry_msgs::Twist &cmd_vel)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8\'BA\'CD\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'D3\'C3\'B6\'AF\'CC\'AC\'B4\'B0\'BF\'DA\'B7\'BD\'B7\'A8\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setPlan} (const std::vector< geometry_msgs::PoseStamped > &orig_global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isGoalReached} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isInitialized} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (DWAPlannerConfig &config, uint32_t level)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B6\'AF\'CC\'AC\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'CE\'CA\'FD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishLocalPlan} (std::vector< geometry_msgs::PoseStamped > &path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishGlobalPlan} (std::vector< geometry_msgs::PoseStamped > &path)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b tf_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'C3\'D3\'DA\'B5\'E3\'D4\'C6\'D7\'AA\'BB\'BB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b g_plan_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b l_plan_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::LocalPlannerUtil} {\b planner_util_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< {\b DWAPlanner} > {\b dp_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b costmap_ros_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< DWAPlannerConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dwa_local_planner::DWAPlannerConfig {\b default_config_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setup_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b current_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::LatchedStopRotateController} {\b latchedStopRotateController_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::OdometryHelperRos} {\b odom_helper_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b odom_topic_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWAPlannerROS\'CA\'C7\'B7\'E2\'D7\'B0\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'C1\'CB\'D3\'EBmove_base\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'AC\'D7\'F7\'CE\'AAmove_base\'B5\'C4\'B2\'E5\'BC\'FE \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v DWAPlannerROS\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:DWAPlannerROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dwa_local_planner::DWAPlannerROS::DWAPlannerROS ()}}
\par
{\bkmkstart AAAAAAADDF}
{\bkmkend AAAAAAADDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b DWAPlannerROS} \'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'B9\'B9\'D4\'EC }}\par
}
{\xe \v ~DWAPlannerROS\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:~DWAPlannerROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dwa_local_planner::DWAPlannerROS::~DWAPlannerROS ()}}
\par
{\bkmkstart AAAAAAADDG}
{\bkmkend AAAAAAADDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'CE\'F6\'B9\'B9 }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v computeVelocityCommands\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:computeVelocityCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::computeVelocityCommands (geometry_msgs::Twist &  {\i cmd_vel}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDH}
{\bkmkend AAAAAAADDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8\'B8\'F9\'BE\'DD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8\'BA\'CD\'C4\'BF\'B1\'EA\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True:\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a700178e32159b614d328326b6ba5f8b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v dwaComputeVelocityCommands\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:dwaComputeVelocityCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::dwaComputeVelocityCommands (geometry_msgs::PoseStamped &  {\i global_pose}, geometry_msgs::Twist &  {\i cmd_vel})}}
\par
{\bkmkstart AAAAAAADDI}
{\bkmkend AAAAAAADDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8\'BA\'CD\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'D3\'C3\'B6\'AF\'CC\'AC\'B4\'B0\'BF\'DA\'B7\'BD\'B7\'A8\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True:\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a6d5796c54a10c3e2c89ec9afb64e9b5e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a6d5796c54a10c3e2c89ec9afb64e9b5e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dwa_local_planner::DWAPlannerROS::initialize (std::string  {\i name}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDJ}
{\bkmkend AAAAAAADDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'BD\'A8ros\'B5\'C4\'B7\'E2\'D7\'B0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{transform listener \'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a61c4737a8e5eb82f4c2407326e411d85_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isGoalReached\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:isGoalReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::isGoalReached (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDK}
{\bkmkend AAAAAAADDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True : \'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a847c1877d967acd515d7ddf1ac246941_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isInitialized\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:isInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::isInitialized (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADDL}
{\bkmkend AAAAAAADDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_ae6d59b99f11c5998b10fba331ef077a8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishGlobalPlan\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:publishGlobalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dwa_local_planner::DWAPlannerROS::publishGlobalPlan (std::vector< geometry_msgs::PoseStamped > &  {\i path}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDM}
{\bkmkend AAAAAAADDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_acf570c8f336f17667f8a068b77aa9c48_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_acf570c8f336f17667f8a068b77aa9c48_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishLocalPlan\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:publishLocalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dwa_local_planner::DWAPlannerROS::publishLocalPlan (std::vector< geometry_msgs::PoseStamped > &  {\i path}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDN}
{\bkmkend AAAAAAADDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a3ed5e8084732aae21c15adc1f98a68ca_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a3ed5e8084732aae21c15adc1f98a68ca_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dwa_local_planner::DWAPlannerROS::reconfigureCB (DWAPlannerConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDO}
{\bkmkend AAAAAAADDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B6\'AF\'CC\'AC\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'CE\'CA\'FD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a75d528df04f8600bf205441855c28695_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a75d528df04f8600bf205441855c28695_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPlan\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:setPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::setPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i orig_global_plan}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADDP}
{\bkmkend AAAAAAADDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i orig_global_plan} \cell }{\'B4\'AB\'B5\'DD\'B8\'F8\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True: \'B8\'FC\'D0\'C2\'B3\'C9\'B9\'A6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classdwa__local__planner_1_1_d_w_a_planner_r_o_s_a0cfcf517c3112678a7eabeb498d9b2ce_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_ros_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:costmap_ros_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* dwa_local_planner::DWAPlannerROS::costmap_ros_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDQ}
{\bkmkend AAAAAAADDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v current_pose_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:current_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped dwa_local_planner::DWAPlannerROS::current_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDR}
{\bkmkend AAAAAAADDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_config_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:default_config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dwa_local_planner::DWAPlannerConfig dwa_local_planner::DWAPlannerROS::default_config_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDS}
{\bkmkend AAAAAAADDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dp_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:dp_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<{\b DWAPlanner}> dwa_local_planner::DWAPlannerROS::dp_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDT}
{\bkmkend AAAAAAADDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<DWAPlannerConfig>* dwa_local_planner::DWAPlannerROS::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDU}
{\bkmkend AAAAAAADDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_plan_pub_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:g_plan_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher dwa_local_planner::DWAPlannerROS::g_plan_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDV}
{\bkmkend AAAAAAADDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDW}
{\bkmkend AAAAAAADDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v l_plan_pub_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:l_plan_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher dwa_local_planner::DWAPlannerROS::l_plan_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDX}
{\bkmkend AAAAAAADDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v latchedStopRotateController_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:latchedStopRotateController_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::LatchedStopRotateController} dwa_local_planner::DWAPlannerROS::latchedStopRotateController_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDY}
{\bkmkend AAAAAAADDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_helper_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:odom_helper_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::OdometryHelperRos} dwa_local_planner::DWAPlannerROS::odom_helper_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADDZ}
{\bkmkend AAAAAAADDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_topic_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:odom_topic_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string dwa_local_planner::DWAPlannerROS::odom_topic_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEA}
{\bkmkend AAAAAAADEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_util_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:planner_util_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::LocalPlannerUtil} dwa_local_planner::DWAPlannerROS::planner_util_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEB}
{\bkmkend AAAAAAADEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setup_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:setup_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool dwa_local_planner::DWAPlannerROS::setup_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADEC}
{\bkmkend AAAAAAADEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:dwa_local_planner::DWAPlannerROS}
{\xe \v dwa_local_planner::DWAPlannerROS\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* dwa_local_planner::DWAPlannerROS::tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADED}
{\bkmkend AAAAAAADED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'C3\'D3\'DA\'B5\'E3\'D4\'C6\'D7\'AA\'BB\'BB }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dwa_local_planner/include/dwa_local_planner/{\b dwa_planner_ros.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dwa_local_planner/src/{\b dwa_planner_ros.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::Expander\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::Expander}
{\xe \v global_planner::Expander}
{\bkmkstart AAAAAAADFS}
{\bkmkend AAAAAAADFS}
\par
{
{\f2 #include <expander.h>}}\par
\'C0\'E0 global_planner::Expander \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::Expander \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expander} ({\b PotentialCalculator} *p_calc, int nx, int ny)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Expander} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b calculatePotentials} (unsigned char *costs, double start_x, double start_y, double end_x, double end_y, int cycles, float *potential)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setSize} (int nx, int ny)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLethalCost} (unsigned char lethal_cost)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNeutralCost} (unsigned char neutral_cost)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFactor} (float factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setHasUnknown} (bool unknown)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearEndpoint} (unsigned char *costs, float *potential, int gx, int gy, int s)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b toIndex} (int x, int y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nx_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ny_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ns_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b unknown_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b lethal_cost_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b neutral_cost_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cells_visited_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b factor_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PotentialCalculator} * {\b p_calc_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Expander\:global_planner::Expander}
{\xe \v global_planner::Expander\:Expander}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::Expander::Expander ({\b PotentialCalculator} *  {\i p_calc}, int  {\i nx}, int  {\i ny}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFT}
{\bkmkend AAAAAAADFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a8ccb306a28ea41d2bfd9202d4b16f26a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~Expander\:global_planner::Expander}
{\xe \v global_planner::Expander\:~Expander}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual global_planner::Expander::~Expander (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADFU}
{\bkmkend AAAAAAADFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v calculatePotentials\:global_planner::Expander}
{\xe \v global_planner::Expander\:calculatePotentials}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool global_planner::Expander::calculatePotentials (unsigned char *  {\i costs}, double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, int  {\i cycles}, float *  {\i potential}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADET}
{\bkmkend AAAAAAADET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA {\b global_planner::AStarExpansion} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADES \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b global_planner::DijkstraExpansion} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADEY \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a7c352121a2ea1e1b650b219004c98786_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearEndpoint\:global_planner::Expander}
{\xe \v global_planner::Expander\:clearEndpoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::Expander::clearEndpoint (unsigned char *  {\i costs}, float *  {\i potential}, int  {\i gx}, int  {\i gy}, int  {\i s}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFV}
{\bkmkend AAAAAAADFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a02060106b60c2661cb1f1878a151a40e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a02060106b60c2661cb1f1878a151a40e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setFactor\:global_planner::Expander}
{\xe \v global_planner::Expander\:setFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::Expander::setFactor (float  {\i factor}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFW}
{\bkmkend AAAAAAADFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a53a3174aef024f0a4d01ac3fa7a74489_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setHasUnknown\:global_planner::Expander}
{\xe \v global_planner::Expander\:setHasUnknown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::Expander::setHasUnknown (bool  {\i unknown}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFX}
{\bkmkend AAAAAAADFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a1dcbac968719e195552d063c4314618e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setLethalCost\:global_planner::Expander}
{\xe \v global_planner::Expander\:setLethalCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::Expander::setLethalCost (unsigned char  {\i lethal_cost}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFY}
{\bkmkend AAAAAAADFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_aee9c360fb6316c538bbadcccc6bf98b1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setNeutralCost\:global_planner::Expander}
{\xe \v global_planner::Expander\:setNeutralCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::Expander::setNeutralCost (unsigned char  {\i neutral_cost}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADFZ}
{\bkmkend AAAAAAADFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_a386d3239f3aaa7a5e583bad9893a8ca1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setSize\:global_planner::Expander}
{\xe \v global_planner::Expander\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void global_planner::Expander::setSize (int  {\i nx}, int  {\i ny}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADFD}
{\bkmkend AAAAAAADFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nx} \cell }{The x size of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ny} \cell }{The y size of the map sets or resets the size of the map \cell }
{\row }
}
}{
\'B1\'BB {\b global_planner::DijkstraExpansion} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADFC \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_aeeaa60103de1ee71a1969e40a3735094_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toIndex\:global_planner::Expander}
{\xe \v global_planner::Expander\:toIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Expander::toIndex (int  {\i x}, int  {\i y}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGA}
{\bkmkend AAAAAAADGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_expander_ab9ed0e500049774014960dfb68f1e50c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cells_visited_\:global_planner::Expander}
{\xe \v global_planner::Expander\:cells_visited_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Expander::cells_visited_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGB}
{\bkmkend AAAAAAADGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v factor_\:global_planner::Expander}
{\xe \v global_planner::Expander\:factor_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::Expander::factor_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGC}
{\bkmkend AAAAAAADGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lethal_cost_\:global_planner::Expander}
{\xe \v global_planner::Expander\:lethal_cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char global_planner::Expander::lethal_cost_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGD}
{\bkmkend AAAAAAADGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v neutral_cost_\:global_planner::Expander}
{\xe \v global_planner::Expander\:neutral_cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char global_planner::Expander::neutral_cost_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGE}
{\bkmkend AAAAAAADGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ns_\:global_planner::Expander}
{\xe \v global_planner::Expander\:ns_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Expander::ns_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGF}
{\bkmkend AAAAAAADGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
size of grid, in pixels \par
}}
{\xe \v nx_\:global_planner::Expander}
{\xe \v global_planner::Expander\:nx_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Expander::nx_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGG}
{\bkmkend AAAAAAADGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ny_\:global_planner::Expander}
{\xe \v global_planner::Expander\:ny_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Expander::ny_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGH}
{\bkmkend AAAAAAADGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p_calc_\:global_planner::Expander}
{\xe \v global_planner::Expander\:p_calc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PotentialCalculator}* global_planner::Expander::p_calc_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGI}
{\bkmkend AAAAAAADGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unknown_\:global_planner::Expander}
{\xe \v global_planner::Expander\:unknown_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::Expander::unknown_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADGJ}
{\bkmkend AAAAAAADGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b expander.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
FakeOdomNode\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v FakeOdomNode}
{\xe \v FakeOdomNode}
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
FakeOdomNode \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_fake_odom_node__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FakeOdomNode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~FakeOdomNode} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b stuffFilter} (const nav_msgs::OdometryConstPtr &odom_msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} (const nav_msgs::OdometryConstPtr &message)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initPoseReceived} (const geometry_msgs::PoseWithCovarianceStampedConstPtr &msg)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b m_nh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b m_posePub}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b m_particlecloudPub}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
message_filters::Subscriber< geometry_msgs::PoseWithCovarianceStamped > * {\b m_initPoseSub}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::TransformBroadcaster * {\b m_tfServer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::TransformListener * {\b m_tfListener}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b m_tfBuffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::MessageFilter< geometry_msgs::PoseWithCovarianceStamped > * {\b m_initPoseFilter}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::MessageFilter< nav_msgs::Odometry > * {\b filter_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b stuff_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
message_filters::Subscriber< nav_msgs::Odometry > * {\b filter_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b delta_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b delta_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b delta_yaw_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b m_base_pos_received}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b transform_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_msgs::Odometry {\b m_basePosMsg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseArray {\b m_particleCloud}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseWithCovarianceStamped {\b m_currentPos}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2::Transform {\b m_offsetTf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b odom_frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b base_frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_id_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v FakeOdomNode\:FakeOdomNode}
{\xe \v FakeOdomNode\:FakeOdomNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FakeOdomNode::FakeOdomNode (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_fake_odom_node_a864acd0c0eda3e7a165fdb9ec093cab2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~FakeOdomNode\:FakeOdomNode}
{\xe \v FakeOdomNode\:~FakeOdomNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FakeOdomNode::~FakeOdomNode (void ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v initPoseReceived\:FakeOdomNode}
{\xe \v FakeOdomNode\:initPoseReceived}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FakeOdomNode::initPoseReceived (const geometry_msgs::PoseWithCovarianceStampedConstPtr &  {\i msg}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_fake_odom_node_aed4a6d085f1f28c847f7e4d76357f2ca_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stuffFilter\:FakeOdomNode}
{\xe \v FakeOdomNode\:stuffFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FakeOdomNode::stuffFilter (const nav_msgs::OdometryConstPtr &  {\i odom_msg}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_fake_odom_node_a06d058408f8f64a09a5e8ba4162336ae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v update\:FakeOdomNode}
{\xe \v FakeOdomNode\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void FakeOdomNode::update (const nav_msgs::OdometryConstPtr &  {\i message}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_fake_odom_node_abb6c0570eaa9227128b76690e50af61f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v base_frame_id_\:FakeOdomNode}
{\xe \v FakeOdomNode\:base_frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string FakeOdomNode::base_frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v delta_x_\:FakeOdomNode}
{\xe \v FakeOdomNode\:delta_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FakeOdomNode::delta_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v delta_y_\:FakeOdomNode}
{\xe \v FakeOdomNode\:delta_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FakeOdomNode::delta_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v delta_yaw_\:FakeOdomNode}
{\xe \v FakeOdomNode\:delta_yaw_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FakeOdomNode::delta_yaw_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filter_\:FakeOdomNode}
{\xe \v FakeOdomNode\:filter_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::MessageFilter<nav_msgs::Odometry>* FakeOdomNode::filter_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v filter_sub_\:FakeOdomNode}
{\xe \v FakeOdomNode\:filter_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
message_filters::Subscriber<nav_msgs::Odometry>* FakeOdomNode::filter_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_id_\:FakeOdomNode}
{\xe \v FakeOdomNode\:global_frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string FakeOdomNode::global_frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_base_pos_received\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_base_pos_received}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool FakeOdomNode::m_base_pos_received{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_basePosMsg\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_basePosMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_msgs::Odometry FakeOdomNode::m_basePosMsg{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_currentPos\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_currentPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseWithCovarianceStamped FakeOdomNode::m_currentPos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_initPoseFilter\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_initPoseFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::MessageFilter<geometry_msgs::PoseWithCovarianceStamped>* FakeOdomNode::m_initPoseFilter{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_initPoseSub\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_initPoseSub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
message_filters::Subscriber<geometry_msgs::PoseWithCovarianceStamped>* FakeOdomNode::m_initPoseSub{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_nh\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_nh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle FakeOdomNode::m_nh{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_offsetTf\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_offsetTf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2::Transform FakeOdomNode::m_offsetTf{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_particleCloud\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_particleCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseArray FakeOdomNode::m_particleCloud{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_particlecloudPub\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_particlecloudPub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher FakeOdomNode::m_particlecloudPub{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_posePub\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_posePub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher FakeOdomNode::m_posePub{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_tfBuffer\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_tfBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* FakeOdomNode::m_tfBuffer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_tfListener\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_tfListener}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::TransformListener* FakeOdomNode::m_tfListener{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m_tfServer\:FakeOdomNode}
{\xe \v FakeOdomNode\:m_tfServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::TransformBroadcaster* FakeOdomNode::m_tfServer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_frame_id_\:FakeOdomNode}
{\xe \v FakeOdomNode\:odom_frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string FakeOdomNode::odom_frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stuff_sub_\:FakeOdomNode}
{\xe \v FakeOdomNode\:stuff_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber FakeOdomNode::stuff_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transform_tolerance_\:FakeOdomNode}
{\xe \v FakeOdomNode\:transform_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double FakeOdomNode::transform_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
fake_localization/{\b fake_localization.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::FootprintHelper\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::FootprintHelper}
{\xe \v base_local_planner::FootprintHelper}
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
\par
{
{\f2 #include <footprint_helper.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FootprintHelper} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~FootprintHelper} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< base_local_planner::Position2DInt > {\b getFootprintCells} (Eigen::Vector3f pos, std::vector< geometry_msgs::Point > footprint_spec, const {\b costmap_2d::Costmap2D} &, bool fill)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'B5\'C3\'D7\'E9\'B3\'C9\'BB\'FA\'C6\'F7\'C8\'CBfootprint\'B5\'C4\'B5\'A5\'D4\'AA\'B8\'F1 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLineCells} (int x0, int x1, int y0, int y1, std::vector< base_local_planner::Position2DInt > &pts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bresenham's \'CB\'E3\'B7\'A8\'D7\'B7\'D7\'D9\'CD\'F8\'B8\'F1\'D6\'D0\'C1\'AC\'BD\'D3\'C1\'BD\'B5\'E3\'B5\'C4\'CF\'DF }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getFillCells} (std::vector< base_local_planner::Position2DInt > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'EE\'B3\'E4\'B6\'E0\'B1\'DF\'D0\'CE\'B5\'C4\'C2\'D6\'C0\'AA\'A3\'AC\'BC\'B4\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v FootprintHelper\:base_local_planner::FootprintHelper}
{\xe \v base_local_planner::FootprintHelper\:FootprintHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::FootprintHelper::FootprintHelper ()}}
\par
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~FootprintHelper\:base_local_planner::FootprintHelper}
{\xe \v base_local_planner::FootprintHelper\:~FootprintHelper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::FootprintHelper::~FootprintHelper (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getFillCells\:base_local_planner::FootprintHelper}
{\xe \v base_local_planner::FootprintHelper\:getFillCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::FootprintHelper::getFillCells (std::vector< base_local_planner::Position2DInt > &  {\i footprint})}}
\par
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'EE\'B3\'E4\'B6\'E0\'B1\'DF\'D0\'CE\'B5\'C4\'C2\'D6\'C0\'AA\'A3\'AC\'BC\'B4\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{\'D7\'E9\'B3\'C9footprint\'B5\'C4\'B5\'A5\'D4\'AA\'B8\'F1\'BC\'AF\'BA\'CF \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_a6bb46e8dcf95d5694a1aa5b03ab83892_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getFootprintCells\:base_local_planner::FootprintHelper}
{\xe \v base_local_planner::FootprintHelper\:getFootprintCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< base_local_planner::Position2DInt > base_local_planner::FootprintHelper::getFootprintCells (Eigen::Vector3f  {\i pos}, std::vector< geometry_msgs::Point >  {\i footprint_spec}, const {\b costmap_2d::Costmap2D} &  {\i costmap}, bool  {\i fill})}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'B5\'C3\'D7\'E9\'B3\'C9\'BB\'FA\'C6\'F7\'C8\'CBfootprint\'B5\'C4\'B5\'A5\'D4\'AA\'B8\'F1 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x_i} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y_i} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4y\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta_i} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'B3\'AF\'CF\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i fill} \cell }{\'C8\'E7\'B9\'FB\'CE\'AA true: \'B7\'B5\'BB\'D8\'BB\'FA\'C6\'F7\'C8\'CBfootprint\'B5\'C4\'CB\'F9\'D3\'D0\'B5\'A5\'D4\'AA\'B8\'F1. \'C8\'E7\'B9\'FBfalse: \'D6\'BB\'B7\'B5\'BB\'D8\'D7\'E9\'B3\'C9\'BB\'FA\'C6\'F7\'C8\'CB\'C2\'D6\'C0\'AA\'B5\'C4\'B5\'A5\'D4\'AA\'B8\'F1. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B7\'B5\'BB\'D8\'D7\'E9\'B3\'C9\'BB\'FA\'C6\'F7\'C8\'CBfootprint\'B5\'C4\'CB\'F9\'D3\'D0\'B5\'A5\'D4\'AA\'B8\'F1/\'C2\'D6\'C0\'AA\'B5\'C4\'B5\'A5\'D4\'AA\'B8\'F1\par
}}get the cellsof a footprint at a given position \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_ae808cb5daa8579714519073568709f15_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_ae808cb5daa8579714519073568709f15_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLineCells\:base_local_planner::FootprintHelper}
{\xe \v base_local_planner::FootprintHelper\:getLineCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::FootprintHelper::getLineCells (int  {\i x0}, int  {\i x1}, int  {\i y0}, int  {\i y1}, std::vector< base_local_planner::Position2DInt > &  {\i pts})}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bresenham's \'CB\'E3\'B7\'A8\'D7\'B7\'D7\'D9\'CD\'F8\'B8\'F1\'D6\'D0\'C1\'AC\'BD\'D3\'C1\'BD\'B5\'E3\'B5\'C4\'CF\'DF }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x0} \cell }{\'B5\'DA\'D2\'BB\'B8\'F6\'B5\'E3\'B5\'C4x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x1} \cell }{\'B5\'DA\'B6\'FE\'B8\'F6\'B5\'E3\'B5\'C4x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y0} \cell }{\'B5\'DA\'D2\'BB\'B8\'F6\'B5\'E3\'B5\'C4y\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y1} \cell }{\'B5\'DA\'B6\'FE\'B8\'F6\'B5\'E3\'B5\'C4y\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pts} \cell }{Will be filled with the cells that lie on the line in the grid \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_ab65128ff1acf0eb1d8b398ad0741ee55_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b footprint_helper.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b footprint_helper.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::FootprintHelperTest\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::FootprintHelperTest}
{\xe \v base_local_planner::FootprintHelperTest}
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
\'C0\'E0 base_local_planner::FootprintHelperTest \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_test__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::FootprintHelperTest \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_test__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FootprintHelperTest} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TestBody} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b correctLineCells} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b correctFootprint} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FootprintHelper} {\b fh}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v FootprintHelperTest\:base_local_planner::FootprintHelperTest}
{\xe \v base_local_planner::FootprintHelperTest\:FootprintHelperTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::FootprintHelperTest::FootprintHelperTest (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v correctFootprint\:base_local_planner::FootprintHelperTest}
{\xe \v base_local_planner::FootprintHelperTest\:correctFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::FootprintHelperTest::correctFootprint (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_test_a76bf4841d7d0069d3911b2f5169f5ca0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v correctLineCells\:base_local_planner::FootprintHelperTest}
{\xe \v base_local_planner::FootprintHelperTest\:correctLineCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::FootprintHelperTest::correctLineCells (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_footprint_helper_test_a0addc7b918a129e13848fc8adfe4dcba_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TestBody\:base_local_planner::FootprintHelperTest}
{\xe \v base_local_planner::FootprintHelperTest\:TestBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void base_local_planner::FootprintHelperTest::TestBody (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v fh\:base_local_planner::FootprintHelperTest}
{\xe \v base_local_planner::FootprintHelperTest\:fh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FootprintHelper} base_local_planner::FootprintHelperTest::fh}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/test/{\b footprint_helper_test.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::GlobalPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner}
{\bkmkstart AAAAAAADGK}
{\bkmkend AAAAAAADGK}
\par
{
{\f2 #include <planner_core.h>}}\par
\'C0\'E0 global_planner::GlobalPlanner \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::GlobalPlanner \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GlobalPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'AC\'C8\'CF\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GlobalPlanner} (std::string name, {\b costmap_2d::Costmap2D} *costmap, std::string frame_id)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~GlobalPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b PlannerCore} \'B6\'D4\'CF\'F3\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, {\b costmap_2d::Costmap2D} *costmap, std::string frame_id)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'B5\'E3\'B9\'E6\'BB\'AE\'B4\'A6\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, double tolerance, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'B5\'E3\'B9\'E6\'BB\'AE\'B4\'A6\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b computePotential} (const geometry_msgs::Point &world_point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the full navigation function for the map given a point in the world to start from }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getPlanFromPotential} (double start_x, double start_y, double end_x, double end_y, const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute a plan to a goal after the potential for a start point has already been computed (Note: You should call computePotential first) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPointPotential} (const geometry_msgs::Point &world_point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the potential, or naviagation cost, at a given point in the world (Note: You should call computePotential first) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validPointPotential} (const geometry_msgs::Point &world_point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check for a valid potential value at a given point in the world (Note: You should call computePotential first) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validPointPotential} (const geometry_msgs::Point &world_point, double tolerance)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check for a valid potential value at a given point in the world (Note: You should call computePotential first) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishPlan} (const std::vector< geometry_msgs::PoseStamped > &path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'A2\'B2\'BC\'C2\'B7\'BE\'B6\'D0\'C5\'CF\'A2\'A3\'AC\'D3\'C3\'D3\'DA\'BF\'C9\'CA\'D3\'BB\'AF }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlanService} (nav_msgs::GetPlan::Request &req, nav_msgs::GetPlan::Response &resp)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BF\'BD\'B1\'B4\'C1\'CB\'D2\'BB\'B7\'DD\'B5\'B1\'C7\'B0\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'BB\'E1\'B1\'BBmakePlan\'B5\'F7\'D3\'C3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b plan_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b allow_unknown_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapToWorld} (double mx, double my, double &wx, double &wy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b worldToMap} (double wx, double wy, double &mx, double &my)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearRobotCell} (const geometry_msgs::PoseStamped &global_pose, unsigned int mx, unsigned int my)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishPotential} (float *potential)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b outlineMap} (unsigned char *costarr, int nx, int ny, unsigned char value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (global_planner::GlobalPlannerConfig &config, uint32_t level)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b planner_window_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b planner_window_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b default_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b make_plan_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PotentialCalculator} * {\b p_calc_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expander} * {\b planner_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Traceback} * {\b path_maker_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OrientationFilter} * {\b orientation_filter_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b publish_potential_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b potential_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b publish_scale_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b potential_array_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b start_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b start_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b end_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b end_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b old_navfn_behavior_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b convert_offset_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b outline_map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< global_planner::GlobalPlannerConfig > * {\b dsrv_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v GlobalPlanner\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:GlobalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::GlobalPlanner::GlobalPlanner ()}}
\par
{\bkmkstart AAAAAAADGL}
{\bkmkend AAAAAAADGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'AC\'C8\'CF\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }}\par
}
{\xe \v GlobalPlanner\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:GlobalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::GlobalPlanner::GlobalPlanner (std::string  {\i name}, {\b costmap_2d::Costmap2D} *  {\i costmap}, std::string  {\i frame_id})}}
\par
{\bkmkstart AAAAAAADGM}
{\bkmkend AAAAAAADGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i frame_id} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D7\'F8\'B1\'EA\'CF\'B5 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_aaeb34983765b053861cbef08e9614bb5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~GlobalPlanner\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:~GlobalPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::GlobalPlanner::~GlobalPlanner ()}}
\par
{\bkmkstart AAAAAAADGN}
{\bkmkend AAAAAAADGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearRobotCell\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:clearRobotCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::clearRobotCell (const geometry_msgs::PoseStamped &  {\i global_pose}, unsigned int  {\i mx}, unsigned int  {\i my}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADGO}
{\bkmkend AAAAAAADGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a04cb531dc0326cc5bdcce752175ee030_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a04cb531dc0326cc5bdcce752175ee030_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computePotential\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:computePotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::computePotential (const geometry_msgs::Point &  {\i world_point})}}
\par
{\bkmkstart AAAAAAADGP}
{\bkmkend AAAAAAADGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Computes the full navigation function for the map given a point in the world to start from }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{The point to use for seeding the navigation function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the navigation function was computed successfully, false otherwise \par
}}}}
{\xe \v getPlanFromPotential\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:getPlanFromPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::getPlanFromPotential (double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan})}}
\par
{\bkmkstart AAAAAAADGQ}
{\bkmkend AAAAAAADGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute a plan to a goal after the potential for a start point has already been computed (Note: You should call computePotential first) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start_x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start_y} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end_x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end_y} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{The goal pose to create a plan to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{The plan... filled by the planner \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if a valid plan was found, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a4bae9ef237ecc53aa3027abd3dc063b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a4bae9ef237ecc53aa3027abd3dc063b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPointPotential\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:getPointPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double global_planner::GlobalPlanner::getPointPotential (const geometry_msgs::Point &  {\i world_point})}}
\par
{\bkmkstart AAAAAAADGR}
{\bkmkend AAAAAAADGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the potential, or naviagation cost, at a given point in the world (Note: You should call computePotential first) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{The point to get the potential for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The navigation function's value at that point in the world \par
}}}}
{\xe \v initialize\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::initialize (std::string  {\i name}, {\b costmap_2d::Costmap2D} *  {\i costmap}, std::string  {\i frame_id})}}
\par
{\bkmkstart AAAAAAADGS}
{\bkmkend AAAAAAADGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_af3ade8f9f487fe2ddd109f0845a6ffb2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::initialize (std::string  {\i name}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADGT}
{\bkmkend AAAAAAADGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b PlannerCore} \'B6\'D4\'CF\'F3\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BCros\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseGlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a280ebb6723d46b462eb66ec73a2fe266_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a280ebb6723d46b462eb66ec73a2fe266_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, double  {\i tolerance}, std::vector< geometry_msgs::PoseStamped > &  {\i plan})}}
\par
{\bkmkstart AAAAAAADGU}
{\bkmkend AAAAAAADGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'B5\'E3\'B9\'E6\'BB\'AE\'B4\'A6\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{\'C6\'F0\'CA\'BC\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tolerance} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'B5\'C4\'CE\'F3\'B2\'EE\'B7\'B6\'CE\'A7 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True : \'D5\'D2\'B5\'BD\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a4f6bfa5acf58670c01a5b8c684a2f20c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADGV}
{\bkmkend AAAAAAADGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'B5\'E3\'B9\'E6\'BB\'AE\'B4\'A6\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{\'C6\'F0\'CA\'BC\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True : \'D5\'D2\'B5\'BD\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseGlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_abb7f40f6a851f88e6b7668a38571712a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_abb7f40f6a851f88e6b7668a38571712a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlanService\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:makePlanService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::makePlanService (nav_msgs::GetPlan::Request &  {\i req}, nav_msgs::GetPlan::Response &  {\i resp})}}
\par
{\bkmkstart AAAAAAADGW}
{\bkmkend AAAAAAADGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a760dc206a99babddfacded0558d35208_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a760dc206a99babddfacded0558d35208_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapToWorld\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:mapToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::mapToWorld (double  {\i mx}, double  {\i my}, double &  {\i wx}, double &  {\i wy}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADGX}
{\bkmkend AAAAAAADGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a39a4e51153df87f6373d091084235720_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a39a4e51153df87f6373d091084235720_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v outlineMap\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:outlineMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::outlineMap (unsigned char *  {\i costarr}, int  {\i nx}, int  {\i ny}, unsigned char  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADGY}
{\bkmkend AAAAAAADGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a166082482ed5973406af72a52f7cab20_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishPlan\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:publishPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::publishPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i path})}}
\par
{\bkmkstart AAAAAAADGZ}
{\bkmkend AAAAAAADGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'A2\'B2\'BC\'C2\'B7\'BE\'B6\'D0\'C5\'CF\'A2\'A3\'AC\'D3\'C3\'D3\'DA\'BF\'C9\'CA\'D3\'BB\'AF }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a9844153b2bea9032522a2ed528be963f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishPotential\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:publishPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::publishPotential (float *  {\i potential}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHA}
{\bkmkend AAAAAAADHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a91c22ec25e6e8232ef2d73e6738f3857_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a91c22ec25e6e8232ef2d73e6738f3857_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GlobalPlanner::reconfigureCB (global_planner::GlobalPlannerConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHB}
{\bkmkend AAAAAAADHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a466844ce6660d09e06c1dc1f87c03d30_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_a466844ce6660d09e06c1dc1f87c03d30_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validPointPotential\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:validPointPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::validPointPotential (const geometry_msgs::Point &  {\i world_point})}}
\par
{\bkmkstart AAAAAAADHC}
{\bkmkend AAAAAAADHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check for a valid potential value at a given point in the world (Note: You should call computePotential first) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{The point to get the potential for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the navigation function is valid at that point in the world, false otherwise \par
}}}}
{\xe \v validPointPotential\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:validPointPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::validPointPotential (const geometry_msgs::Point &  {\i world_point}, double  {\i tolerance})}}
\par
{\bkmkstart AAAAAAADHD}
{\bkmkend AAAAAAADHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check for a valid potential value at a given point in the world (Note: You should call computePotential first) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{The point to get the potential for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tolerance} \cell }{The tolerance on searching around the world_point specified \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the navigation function is valid at that point in the world, false otherwise \par
}}}}
{\xe \v worldToMap\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:worldToMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::worldToMap (double  {\i wx}, double  {\i wy}, double &  {\i mx}, double &  {\i my}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHE}
{\bkmkend AAAAAAADHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_aec6ebc007afc963fec1eaed68e05bdf7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_global_planner_aec6ebc007afc963fec1eaed68e05bdf7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v allow_unknown_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:allow_unknown_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::allow_unknown_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHF}
{\bkmkend AAAAAAADHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v convert_offset_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:convert_offset_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::GlobalPlanner::convert_offset_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHG}
{\bkmkend AAAAAAADHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* global_planner::GlobalPlanner::costmap_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHH}
{\bkmkend AAAAAAADHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BF\'BD\'B1\'B4\'C1\'CB\'D2\'BB\'B7\'DD\'B5\'B1\'C7\'B0\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'BB\'E1\'B1\'BBmakePlan\'B5\'F7\'D3\'C3 }}\par
}
{\xe \v default_tolerance_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:default_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double global_planner::GlobalPlanner::default_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHI}
{\bkmkend AAAAAAADHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<global_planner::GlobalPlannerConfig>* global_planner::GlobalPlanner::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHJ}
{\bkmkend AAAAAAADHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v end_x_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:end_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int global_planner::GlobalPlanner::end_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHK}
{\bkmkend AAAAAAADHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v end_y_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:end_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int global_planner::GlobalPlanner::end_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHL}
{\bkmkend AAAAAAADHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frame_id_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string global_planner::GlobalPlanner::frame_id_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHM}
{\bkmkend AAAAAAADHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::initialized_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHN}
{\bkmkend AAAAAAADHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_srv_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:make_plan_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer global_planner::GlobalPlanner::make_plan_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHO}
{\bkmkend AAAAAAADHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mutex_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex global_planner::GlobalPlanner::mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHP}
{\bkmkend AAAAAAADHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v old_navfn_behavior_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:old_navfn_behavior_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::old_navfn_behavior_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHQ}
{\bkmkend AAAAAAADHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v orientation_filter_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:orientation_filter_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OrientationFilter}* global_planner::GlobalPlanner::orientation_filter_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHR}
{\bkmkend AAAAAAADHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v outline_map_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:outline_map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::outline_map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHS}
{\bkmkend AAAAAAADHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p_calc_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:p_calc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PotentialCalculator}* global_planner::GlobalPlanner::p_calc_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHT}
{\bkmkend AAAAAAADHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v path_maker_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:path_maker_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Traceback}* global_planner::GlobalPlanner::path_maker_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHU}
{\bkmkend AAAAAAADHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plan_pub_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:plan_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher global_planner::GlobalPlanner::plan_pub_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADHV}
{\bkmkend AAAAAAADHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:planner_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Expander}* global_planner::GlobalPlanner::planner_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHW}
{\bkmkend AAAAAAADHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_window_x_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:planner_window_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double global_planner::GlobalPlanner::planner_window_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHX}
{\bkmkend AAAAAAADHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_window_y_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:planner_window_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double global_planner::GlobalPlanner::planner_window_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHY}
{\bkmkend AAAAAAADHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v potential_array_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:potential_array_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* global_planner::GlobalPlanner::potential_array_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADHZ}
{\bkmkend AAAAAAADHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v potential_pub_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:potential_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher global_planner::GlobalPlanner::potential_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIA}
{\bkmkend AAAAAAADIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_potential_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:publish_potential_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GlobalPlanner::publish_potential_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIB}
{\bkmkend AAAAAAADIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_scale_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:publish_scale_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::GlobalPlanner::publish_scale_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIC}
{\bkmkend AAAAAAADIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start_x_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:start_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int global_planner::GlobalPlanner::start_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADID}
{\bkmkend AAAAAAADID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start_y_\:global_planner::GlobalPlanner}
{\xe \v global_planner::GlobalPlanner\:start_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int global_planner::GlobalPlanner::start_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIE}
{\bkmkend AAAAAAADIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b planner_core.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b planner_core.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::GradientPath\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::GradientPath}
{\xe \v global_planner::GradientPath}
{\bkmkstart AAAAAAADIF}
{\bkmkend AAAAAAADIF}
\par
{
{\f2 #include <gradient_path.h>}}\par
\'C0\'E0 global_planner::GradientPath \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_gradient_path__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::GradientPath \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_gradient_path__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GradientPath} ({\b PotentialCalculator} *p_calc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GradientPath} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSize} (int xs, int ys)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getPath} (float *potential, double start_x, double start_y, double end_x, double end_y, std::vector< std::pair< float, float > > &path)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getNearestPoint} (int stc, float dx, float dy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gradCell} (float *potential, int {\b n})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b gradx_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b grady_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b pathStep_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v GradientPath\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:GradientPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::GradientPath::GradientPath ({\b PotentialCalculator} *  {\i p_calc})}}
\par
{\bkmkstart AAAAAAADIG}
{\bkmkend AAAAAAADIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~GradientPath\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:~GradientPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::GradientPath::~GradientPath (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIH}
{\bkmkend AAAAAAADIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getNearestPoint\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:getNearestPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::GradientPath::getNearestPoint (int  {\i stc}, float  {\i dx}, float  {\i dy}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADII}
{\bkmkend AAAAAAADII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getPath\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GradientPath::getPath (float *  {\i potential}, double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, std::vector< std::pair< float, float > > &  {\i path}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIJ}
{\bkmkend AAAAAAADIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b global_planner::Traceback} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_gradient_path_a740775a18f446f585017e7051850a8bf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v gradCell\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:gradCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::GradientPath::gradCell (float *  {\i potential}, int  {\i n}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIL}
{\bkmkend AAAAAAADIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_gradient_path_a9e17c6cb91f4d6bc03bad731d2a28e27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setSize\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::GradientPath::setSize (int  {\i xs}, int  {\i ys}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIM}
{\bkmkend AAAAAAADIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b global_planner::Traceback} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADIN \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_gradient_path_a58c7221bd0f4891a218403206953c0b4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v gradx_\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:gradx_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* global_planner::GradientPath::gradx_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIO}
{\bkmkend AAAAAAADIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v grady_\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:grady_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * global_planner::GradientPath::grady_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIP}
{\bkmkend AAAAAAADIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gradient arrays, size of potential array \par
}}
{\xe \v pathStep_\:global_planner::GradientPath}
{\xe \v global_planner::GradientPath\:pathStep_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::GradientPath::pathStep_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADIQ}
{\bkmkend AAAAAAADIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
step size for following gradient \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b gradient_path.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b gradient_path.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::greater1\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::greater1}
{\xe \v global_planner::greater1}
{\bkmkstart AAAAAAADIR}
{\bkmkend AAAAAAADIR}
\par
{
{\f2 #include <astar.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator()} (const {\b Index} &a, const {\b Index} &b) const\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:global_planner::greater1}
{\xe \v global_planner::greater1\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::greater1::operator() (const {\b Index} &  {\i a}, const {\b Index} &  {\i b}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIS}
{\bkmkend AAAAAAADIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b astar.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid::VoxelGrid::GridOffset\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid::VoxelGrid::GridOffset}
{\xe \v voxel_grid::VoxelGrid::GridOffset}
{\bkmkstart AAAAAAADXZ}
{\bkmkend AAAAAAADXZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GridOffset} (unsigned int &offset)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (int offset_val)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int & {\b offset_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v GridOffset\:voxel_grid::VoxelGrid::GridOffset}
{\xe \v voxel_grid::VoxelGrid::GridOffset\:GridOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
voxel_grid::VoxelGrid::GridOffset::GridOffset (unsigned int &  {\i offset}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADYA}
{\bkmkend AAAAAAADYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:voxel_grid::VoxelGrid::GridOffset}
{\xe \v voxel_grid::VoxelGrid::GridOffset\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::GridOffset::operator() (int  {\i offset_val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADYB}
{\bkmkend AAAAAAADYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v offset_\:voxel_grid::VoxelGrid::GridOffset}
{\xe \v voxel_grid::VoxelGrid::GridOffset\:offset_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int& voxel_grid::VoxelGrid::GridOffset::offset_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYC}
{\bkmkend AAAAAAADYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::GridPath\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::GridPath}
{\xe \v global_planner::GridPath}
{\bkmkstart AAAAAAADIT}
{\bkmkend AAAAAAADIT}
\par
{
{\f2 #include <grid_path.h>}}\par
\'C0\'E0 global_planner::GridPath \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_grid_path__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::GridPath \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_grid_path__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GridPath} ({\b PotentialCalculator} *p_calc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~GridPath} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getPath} (float *potential, double start_x, double start_y, double end_x, double end_y, std::vector< std::pair< float, float > > &path)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v GridPath\:global_planner::GridPath}
{\xe \v global_planner::GridPath\:GridPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::GridPath::GridPath ({\b PotentialCalculator} *  {\i p_calc}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIU}
{\bkmkend AAAAAAADIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~GridPath\:global_planner::GridPath}
{\xe \v global_planner::GridPath\:~GridPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual global_planner::GridPath::~GridPath (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIV}
{\bkmkend AAAAAAADIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getPath\:global_planner::GridPath}
{\xe \v global_planner::GridPath\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::GridPath::getPath (float *  {\i potential}, double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, std::vector< std::pair< float, float > > &  {\i path}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIW}
{\bkmkend AAAAAAADIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b global_planner::Traceback} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADIK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_grid_path_a11f2838b30fdaca0e29ccff49d0e6c58_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b grid_path.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b grid_path.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::Index\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::Index}
{\xe \v global_planner::Index}
{\bkmkstart AAAAAAADIX}
{\bkmkend AAAAAAADIX}
\par
{
{\f2 #include <astar.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Index} (int a, float b)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b i}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b cost}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Index\:global_planner::Index}
{\xe \v global_planner::Index\:Index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::Index::Index (int  {\i a}, float  {\i b}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADIY}
{\bkmkend AAAAAAADIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cost\:global_planner::Index}
{\xe \v global_planner::Index\:cost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::Index::cost}}
\par
{\bkmkstart AAAAAAADIZ}
{\bkmkend AAAAAAADIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v i\:global_planner::Index}
{\xe \v global_planner::Index\:i}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Index::i}}
\par
{\bkmkstart AAAAAAADJA}
{\bkmkend AAAAAAADJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b astar.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::InflationLayer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer}
{\bkmkstart AAAAAAACSY}
{\bkmkend AAAAAAACSY}
\par
{
{\f2 #include <inflation_layer.h>}}\par
\'C0\'E0 costmap_2d::InflationLayer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::InflationLayer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InflationLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~InflationLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onInitialize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateBounds} (double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateCosts} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b isDiscretized} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b matchSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual unsigned char {\b computeCost} (double {\b distance}) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'BE\'E0\'C0\'EB\'BC\'C6\'CB\'E3\'B4\'FA\'BC\'DB\'A3\'AC\'B4\'F3\'B8\'C5\'B7\'D6\'C8\'FD\'B8\'F6\'C7\'E9\'BF\'F6: }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setInflationParameters} (double inflation_radius, double cost_scaling_factor)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change the values of the inflation radius parameters }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onFootprintChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LayeredCostmap} calls this whenever the footprint there changes (via {\b LayeredCostmap::setFootprint()}). Override to be notified of changes to the robot's footprint. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex * {\b inflation_access_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b resolution_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b inflation_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b inscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b weight_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b inflate_unknown_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceLookup} (int mx, int my, int src_x, int src_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lookup pre-computed distances }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b costLookup} (int mx, int my, int src_x, int src_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lookup pre-computed costs }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b computeCaches} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteKernels} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b inflate_area} (int min_i, int min_j, int max_i, int max_j, unsigned char *master_grid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cellDistance} (double world_dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enqueue} (unsigned int index, unsigned int mx, unsigned int my, unsigned int src_x, unsigned int src_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given an index of a cell in the costmap, place it into a list pending for obstacle inflation }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (costmap_2d::InflationPluginConfig &config, uint32_t level)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cell_inflation_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cached_cell_inflation_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::map< double, std::vector< {\b CellData} > > {\b inflation_cells_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool * {\b seen_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b seen_size_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char ** {\b cached_costs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double ** {\b cached_distances_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b last_min_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b last_min_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b last_max_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b last_max_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< costmap_2d::InflationPluginConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b need_reinflation_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates that the entire costmap should be reinflated next time around. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v InflationLayer\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:InflationLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::InflationLayer::InflationLayer ()}}
\par
{\bkmkstart AAAAAAACSZ}
{\bkmkend AAAAAAACSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~InflationLayer\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:~InflationLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual costmap_2d::InflationLayer::~InflationLayer (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTA}
{\bkmkend AAAAAAACTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a498fcc27acce5456e672ca4ad644ebe1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cellDistance\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:cellDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::InflationLayer::cellDistance (double  {\i world_dist}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTB}
{\bkmkend AAAAAAACTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_af8596c7a8c0ffc98da47cfc99854cdd0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_af8596c7a8c0ffc98da47cfc99854cdd0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeCaches\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:computeCaches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::computeCaches (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTC}
{\bkmkend AAAAAAACTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a05a6dbb2bb36948cdc9404f7480c5261_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a05a6dbb2bb36948cdc9404f7480c5261_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeCost\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:computeCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual unsigned char costmap_2d::InflationLayer::computeCost (double  {\i distance}) const{\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTD}
{\bkmkend AAAAAAACTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'BE\'E0\'C0\'EB\'BC\'C6\'CB\'E3\'B4\'FA\'BC\'DB\'A3\'AC\'B4\'F3\'B8\'C5\'B7\'D6\'C8\'FD\'B8\'F6\'C7\'E9\'BF\'F6: }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
1.\tab \'C8\'E7\'B9\'FBdistance\'CE\'AA0\'A3\'AC\'BC\'B4(0,0)\'B5\'E3\'A3\'AC\'D4\'F2\'C9\'E8\'D6\'C3cached_costs_\'C9\'CF\'B5\'C4\'D6\'B5\'CE\'AALETHAL_OBSTACLE(254)\'A3\'AC\'B1\'ED\'CA\'BE\'CE\'AA\'D5\'CF\'B0\'AD\'CE\'EF\'B1\'BE\'C9\'ED\'A3\'BB\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
2.\tab \'C8\'E7\'B9\'FBdistance \'A1\'DC \'BB\'FA\'C6\'F7\'C8\'CB\'D7\'E3\'BC\'A3\'C4\'DA\'C7\'D0\'D4\'B2\'B0\'EB\'BE\'B6\'A3\'AC\'C9\'E8\'D6\'C3\'D6\'B5\'CE\'AAINSCRIBED_INFLATED_OBSTACLE\'A3\'A8253\'A3\'A9\'A3\'AC\'BC\'B4\'D3\'C9\'D3\'DA\'BB\'FA\'C6\'F7\'C8\'CB\'D3\'D0\'CC\'E5\'BB\'FD\'D4\'EC\'B3\'C9\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF\'C5\'F2\'D5\'CD\'A3\'BB\par
\pard\plain \s141\fi-360\li720\widctlpar\fs20\cgrid 
3.\tab \'C8\'E7\'B9\'FB\'BB\'FA\'C6\'F7\'C8\'CB\'D7\'E3\'BC\'A3\'C4\'DA\'C7\'D0\'D4\'B2\'B0\'EB\'BE\'B6 < distance \'A1\'DC cell_inflation_radius_\'A3\'AC\'D4\'F2\'D2\'D4\'BE\'E0\'C0\'EB\'D4\'B6\'BD\'FC\'CE\'AA\'B1\'C8\'C0\'FD\'A3\'A8\'D6\'B8\'CA\'FD\'D0\'CD\'A3\'A9\'C9\'E8\'D6\'C3\'D6\'B5\'A1\'A3 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i distance} \cell }{\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'A5\'D4\'AA\'B8\'F1\'B5\'C4\'BE\'E0\'C0\'EB \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s83\li1080\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B6\'D4\'D3\'DA\'D5\'E2\'B8\'F6\'BE\'E0\'C0\'EB\'B5\'C4\'B4\'FA\'BC\'DB\'D6\'B5 \par
}}}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_aded99a51737669d85ccc3f1b932061e5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_aded99a51737669d85ccc3f1b932061e5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v costLookup\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:costLookup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::InflationLayer::costLookup (int  {\i mx}, int  {\i my}, int  {\i src_x}, int  {\i src_y}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTE}
{\bkmkend AAAAAAACTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lookup pre-computed costs }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x coordinate of the current cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y coordinate of the current cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src_x} \cell }{The x coordinate of the source cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src_y} \cell }{The y coordinate of the source cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a576a455f199de11e329366df5c1d906a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v deleteKernels\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:deleteKernels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::deleteKernels (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTF}
{\bkmkend AAAAAAACTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a8ca7ac87199c293c06fa5d068c855138_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v distanceLookup\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:distanceLookup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::distanceLookup (int  {\i mx}, int  {\i my}, int  {\i src_x}, int  {\i src_y}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTG}
{\bkmkend AAAAAAACTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lookup pre-computed distances }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x coordinate of the current cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y coordinate of the current cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src_x} \cell }{The x coordinate of the source cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src_y} \cell }{The y coordinate of the source cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a75897e88513bbaa87f773664879bb1ad_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v enqueue\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:enqueue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::enqueue (unsigned int  {\i index}, unsigned int  {\i mx}, unsigned int  {\i my}, unsigned int  {\i src_x}, unsigned int  {\i src_y}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTH}
{\bkmkend AAAAAAACTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given an index of a cell in the costmap, place it into a list pending for obstacle inflation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i grid} \cell }{The costmap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{The index of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mx} \cell }{The x coordinate of the cell (can be computed from the index, but saves time to store it) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i my} \cell }{The y coordinate of the cell (can be computed from the index, but saves time to store it) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src_x} \cell }{The x index of the obstacle point inflation started at \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i src_y} \cell }{The y index of the obstacle point inflation started at \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a6c750bb8214b8d1281d0b96598ff0996_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a6c750bb8214b8d1281d0b96598ff0996_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v inflate_area\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:inflate_area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::inflate_area (int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}, unsigned char *  {\i master_grid}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTI}
{\bkmkend AAAAAAACTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isDiscretized\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:isDiscretized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool costmap_2d::InflationLayer::isDiscretized (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTJ}
{\bkmkend AAAAAAACTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v matchSize\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:matchSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::matchSize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTK}
{\bkmkend AAAAAAACTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSD \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a740c5ab2d838eb17f8fbfa16001feff5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a740c5ab2d838eb17f8fbfa16001feff5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v onFootprintChanged\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:onFootprintChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::onFootprintChanged (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTL}
{\bkmkend AAAAAAACTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LayeredCostmap} calls this whenever the footprint there changes (via {\b LayeredCostmap::setFootprint()}). Override to be notified of changes to the robot's footprint. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTM \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_ae838b68ddf6d2dce9efca777e8455335_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v onInitialize\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:onInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::onInitialize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTN}
{\bkmkend AAAAAAACTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tf_, name_, and layered_costmap_ will all be set already when this is called. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTO \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a70aa2e82f43d319111403b8f97f37ade_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a70aa2e82f43d319111403b8f97f37ade_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::reconfigureCB (costmap_2d::InflationPluginConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTP}
{\bkmkend AAAAAAACTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_aa6137de50b68199a193c8d79022391bb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_aa6137de50b68199a193c8d79022391bb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::InflationLayer::reset (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTQ}
{\bkmkend AAAAAAACTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTR \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_aa5df966fb4dd99b8b69945408f42c2a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setInflationParameters\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:setInflationParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::setInflationParameters (double  {\i inflation_radius}, double  {\i cost_scaling_factor})}}
\par
{\bkmkstart AAAAAAACTS}
{\bkmkend AAAAAAACTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Change the values of the inflation radius parameters }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inflation_radius} \cell }{The new inflation radius \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cost_scaling_factor} \cell }{The new weight \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a9bb0571041eaadcf3e93a9e0b1395cbb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a9bb0571041eaadcf3e93a9e0b1395cbb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateBounds\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:updateBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::updateBounds (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTT}
{\bkmkend AAAAAAACTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For more details, see "Layered Costmaps for Context-Sensitive Navigation", by Lu et. Al, IROS 2014. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTU \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
}
{\xe \v updateCosts\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:updateCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::InflationLayer::updateCosts ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTV}
{\bkmkend AAAAAAACTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTW \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_inflation_layer_a2d5d3eef9b0e8c91dfde79c0e40a65af_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cached_cell_inflation_radius_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:cached_cell_inflation_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::InflationLayer::cached_cell_inflation_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTX}
{\bkmkend AAAAAAACTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cached_costs_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:cached_costs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char** costmap_2d::InflationLayer::cached_costs_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTY}
{\bkmkend AAAAAAACTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cached_distances_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:cached_distances_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double** costmap_2d::InflationLayer::cached_distances_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACTZ}
{\bkmkend AAAAAAACTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cell_inflation_radius_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:cell_inflation_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::InflationLayer::cell_inflation_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUA}
{\bkmkend AAAAAAACUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<costmap_2d::InflationPluginConfig>* costmap_2d::InflationLayer::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUB}
{\bkmkend AAAAAAACUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inflate_unknown_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:inflate_unknown_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::InflationLayer::inflate_unknown_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUC}
{\bkmkend AAAAAAACUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inflation_access_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:inflation_access_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex* costmap_2d::InflationLayer::inflation_access_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUD}
{\bkmkend AAAAAAACUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inflation_cells_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:inflation_cells_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::map<double, std::vector<{\b CellData}> > costmap_2d::InflationLayer::inflation_cells_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUE}
{\bkmkend AAAAAAACUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inflation_radius_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:inflation_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::inflation_radius_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUF}
{\bkmkend AAAAAAACUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inscribed_radius_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:inscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::inscribed_radius_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUG}
{\bkmkend AAAAAAACUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_max_x_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:last_max_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::last_max_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUH}
{\bkmkend AAAAAAACUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_max_y_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:last_max_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::last_max_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUI}
{\bkmkend AAAAAAACUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_min_x_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:last_min_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::last_min_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUJ}
{\bkmkend AAAAAAACUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_min_y_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:last_min_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::last_min_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUK}
{\bkmkend AAAAAAACUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v need_reinflation_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:need_reinflation_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::InflationLayer::need_reinflation_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUL}
{\bkmkend AAAAAAACUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indicates that the entire costmap should be reinflated next time around. }}\par
}
{\xe \v resolution_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:resolution_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::resolution_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUM}
{\bkmkend AAAAAAACUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v seen_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:seen_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool* costmap_2d::InflationLayer::seen_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUN}
{\bkmkend AAAAAAACUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v seen_size_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:seen_size_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int costmap_2d::InflationLayer::seen_size_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACUO}
{\bkmkend AAAAAAACUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v weight_\:costmap_2d::InflationLayer}
{\xe \v costmap_2d::InflationLayer\:weight_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::InflationLayer::weight_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACUP}
{\bkmkend AAAAAAACUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b inflation_layer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/plugins/{\b inflation_layer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::LatchedStopRotateController\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController}
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
\par
{
{\f2 #include <latched_stop_rotate_controller.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LatchedStopRotateController} (const std::string &name="")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~LatchedStopRotateController} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isPositionReached} ({\b LocalPlannerUtil} *planner_util, const geometry_msgs::PoseStamped &global_pose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isGoalReached} ({\b LocalPlannerUtil} *planner_util, {\b OdometryHelperRos} &odom_helper, const geometry_msgs::PoseStamped &global_pose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetLatching} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stopWithAccLimits} (const geometry_msgs::PoseStamped &global_pose, const geometry_msgs::PoseStamped &robot_vel, geometry_msgs::Twist &cmd_vel, Eigen::Vector3f acc_lim, double sim_period, boost::function< bool(Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f vel_samples)> obstacle_check)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CD\'A3\'D6\'B9\'BB\'FA\'C6\'F7\'C8\'CB\'CD\'AC\'CA\'B1\'BF\'BC\'C2\'C7\'BC\'D3\'CB\'D9\'B6\'C8\'B5\'C4\'CF\'DE\'D6\'C6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotateToGoal} (const geometry_msgs::PoseStamped &global_pose, const geometry_msgs::PoseStamped &robot_vel, double goal_th, geometry_msgs::Twist &cmd_vel, Eigen::Vector3f acc_lim, double sim_period, {\b base_local_planner::LocalPlannerLimits} &limits, boost::function< bool(Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f vel_samples)> obstacle_check)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once a goal position is reached... rotate to the goal orientation \'D2\'BB\'B5\'A9\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3\'CE\'BB\'D6\'C3\'A3\'AC\'BF\'AA\'CA\'BC\'D0\'FD\'D7\'AA\'BD\'F8\'D0\'D0\'BD\'C7\'B6\'C8\'B6\'D4\'C6\'EB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b computeVelocityCommandsStopRotate} (geometry_msgs::Twist &cmd_vel, Eigen::Vector3f acc_lim, double sim_period, {\b LocalPlannerUtil} *planner_util, {\b OdometryHelperRos} &odom_helper, const geometry_msgs::PoseStamped &global_pose, boost::function< bool(Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f vel_samples)> obstacle_check)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sign} (double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b latch_xy_goal_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b xy_tolerance_latch_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotating_to_goal_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LatchedStopRotateController\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:LatchedStopRotateController}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LatchedStopRotateController::LatchedStopRotateController (const std::string &  {\i name} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~LatchedStopRotateController\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:~LatchedStopRotateController}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LatchedStopRotateController::~LatchedStopRotateController (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v computeVelocityCommandsStopRotate\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:computeVelocityCommandsStopRotate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::computeVelocityCommandsStopRotate (geometry_msgs::Twist &  {\i cmd_vel}, Eigen::Vector3f  {\i acc_lim}, double  {\i sim_period}, {\b LocalPlannerUtil} *  {\i planner_util}, {\b OdometryHelperRos} &  {\i odom_helper}, const geometry_msgs::PoseStamped &  {\i global_pose}, boost::function< bool(Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f vel_samples)>  {\i obstacle_check})}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a5bd9394ca5cabf2a35526dcb193e36be_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a5bd9394ca5cabf2a35526dcb193e36be_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isGoalReached\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:isGoalReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::isGoalReached ({\b LocalPlannerUtil} *  {\i planner_util}, {\b OdometryHelperRos} &  {\i odom_helper}, const geometry_msgs::PoseStamped &  {\i global_pose})}}
\par
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns true if we have passed the goal position and have reached goal orientation. Meaning we might have overshot on the position beyond tolerance, yet still return true. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a296b387b74afe1c430f0dc6efb2f2ae8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a296b387b74afe1c430f0dc6efb2f2ae8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isPositionReached\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:isPositionReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::isPositionReached ({\b LocalPlannerUtil} *  {\i planner_util}, const geometry_msgs::PoseStamped &  {\i global_pose})}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns true if we have passed the goal position. Meaning we might have overshot on the position beyond tolerance, yet still return true. Also goal orientation might not yet be true \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a22892ae258fb69ab1cbb78b3e076fba3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a22892ae258fb69ab1cbb78b3e076fba3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetLatching\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:resetLatching}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::LatchedStopRotateController::resetLatching (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_af3b08514bca9dfc212b770a071f85b3b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v rotateToGoal\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:rotateToGoal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::rotateToGoal (const geometry_msgs::PoseStamped &  {\i global_pose}, const geometry_msgs::PoseStamped &  {\i robot_vel}, double  {\i goal_th}, geometry_msgs::Twist &  {\i cmd_vel}, Eigen::Vector3f  {\i acc_lim}, double  {\i sim_period}, {\b base_local_planner::LocalPlannerLimits} &  {\i limits}, boost::function< bool(Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f vel_samples)>  {\i obstacle_check})}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Once a goal position is reached... rotate to the goal orientation \'D2\'BB\'B5\'A9\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3\'CE\'BB\'D6\'C3\'A3\'AC\'BF\'AA\'CA\'BC\'D0\'FD\'D7\'AA\'BD\'F8\'D0\'D0\'BD\'C7\'B6\'C8\'B6\'D4\'C6\'EB }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i robot_vel} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_th} \cell }{\'C6\'DA\'CD\'FB\'B5\'C4\'B3\'AF\'CF\'F2\'BD\'C7\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True : \'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6 \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a3f1784c0f8eb383822d41d0905cb6bda_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sign\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LatchedStopRotateController::sign (double  {\i x}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_a8648f8df161c70441a60ec202a137b18_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stopWithAccLimits\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:stopWithAccLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::stopWithAccLimits (const geometry_msgs::PoseStamped &  {\i global_pose}, const geometry_msgs::PoseStamped &  {\i robot_vel}, geometry_msgs::Twist &  {\i cmd_vel}, Eigen::Vector3f  {\i acc_lim}, double  {\i sim_period}, boost::function< bool(Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f vel_samples)>  {\i obstacle_check})}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CD\'A3\'D6\'B9\'BB\'FA\'C6\'F7\'C8\'CB\'CD\'AC\'CA\'B1\'BF\'BC\'C2\'C7\'BC\'D3\'CB\'D9\'B6\'C8\'B5\'C4\'CF\'DE\'D6\'C6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i robot_vel} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True : \'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_ae204da0df3c727a7f655e7c12a7dae75_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_latched_stop_rotate_controller_ae204da0df3c727a7f655e7c12a7dae75_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v latch_xy_goal_tolerance_\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:latch_xy_goal_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::latch_xy_goal_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotating_to_goal_\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:rotating_to_goal_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::rotating_to_goal_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xy_tolerance_latch_\:base_local_planner::LatchedStopRotateController}
{\xe \v base_local_planner::LatchedStopRotateController\:xy_tolerance_latch_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LatchedStopRotateController::xy_tolerance_latch_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b latched_stop_rotate_controller.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b latched_stop_rotate_controller.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Layer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Layer}
{\xe \v costmap_2d::Layer}
{\bkmkstart AAAAAAACUQ}
{\bkmkend AAAAAAACUQ}
\par
{
{\f2 #include <layer.h>}}\par
\'C0\'E0 costmap_2d::Layer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::Layer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Layer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} ({\b LayeredCostmap} *parent, std::string name, tf2_ros::Buffer *tf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateBounds} (double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateCosts} ({\b Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deactivate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop publishers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b activate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart publishers if they've been stopped. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Layer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isCurrent} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check to make sure all the data in the layer is up to date. If the layer is not up to date, then it may be unsafe to plan using the data from this layer, and the planner may need to know. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isEnabled} () const noexcept\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
getter if the current layer is enabled. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b matchSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getName} () const noexcept\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< geometry_msgs::Point > & {\b getFootprint} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convenience function for layered_costmap_->{\b getFootprint()}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onFootprintChanged} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LayeredCostmap} calls this whenever the footprint there changes (via {\b LayeredCostmap::setFootprint()}). Override to be notified of changes to the robot's footprint. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onInitialize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LayeredCostmap} * {\b layered_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b current_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b enabled_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b tf_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b footprint_spec_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Layer\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:Layer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Layer::Layer ()}}
\par
{\bkmkstart AAAAAAACUR}
{\bkmkend AAAAAAACUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Layer\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:~Layer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual costmap_2d::Layer::~Layer (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUS}
{\bkmkend AAAAAAACUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v activate\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:activate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::activate (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUT}
{\bkmkend AAAAAAACUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart publishers if they've been stopped. }}\par
{
\'B1\'BB {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUU \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUV \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v deactivate\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:deactivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::deactivate (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUW}
{\bkmkend AAAAAAACUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop publishers. }}\par
{
\'B1\'BB {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUX \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUY \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v getFootprint\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:getFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< geometry_msgs::Point > & costmap_2d::Layer::getFootprint () const}}
\par
{\bkmkstart AAAAAAACUZ}
{\bkmkend AAAAAAACUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convenience function for layered_costmap_->{\b getFootprint()}. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer_ac24cade239a2cb0923a774bc5231ac44_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer_ac24cade239a2cb0923a774bc5231ac44_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getName\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & costmap_2d::Layer::getName () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACVA}
{\bkmkend AAAAAAACVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialize\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Layer::initialize ({\b LayeredCostmap} *  {\i parent}, std::string  {\i name}, tf2_ros::Buffer *  {\i tf})}}
\par
{\bkmkstart AAAAAAACVB}
{\bkmkend AAAAAAACVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer_af6c7a09667d7cc23e207e0121e60ba4b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer_af6c7a09667d7cc23e207e0121e60ba4b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isCurrent\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:isCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Layer::isCurrent () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVC}
{\bkmkend AAAAAAACVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check to make sure all the data in the layer is up to date. If the layer is not up to date, then it may be unsafe to plan using the data from this layer, and the planner may need to know. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A layer's current state should be managed by the protected variable current_. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Whether the data in the layer is up to date. \par
}}}}
{\xe \v isEnabled\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:isEnabled}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Layer::isEnabled () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACVD}
{\bkmkend AAAAAAACVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
getter if the current layer is enabled. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The user may enable/disable a layer though dynamic reconfigure. Disabled layers won't receive calls to{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Layer::updateCosts}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Layer::updateBounds}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Layer::isCurrent} from the {\b LayeredCostmap}.\par}
Calls to {\b Layer::activate}, {\b Layer::deactivate} and {\b Layer::reset} won't be blocked. \par
}}
{\xe \v matchSize\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:matchSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::matchSize (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSD}
{\bkmkend AAAAAAACSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }}\par
{
\'B1\'BB {\b costmap_2d::CostmapLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::InflationLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSE \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSF \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v onFootprintChanged\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:onFootprintChanged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::onFootprintChanged (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTM}
{\bkmkend AAAAAAACTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b LayeredCostmap} calls this whenever the footprint there changes (via {\b LayeredCostmap::setFootprint()}). Override to be notified of changes to the robot's footprint. }}\par
{
\'B1\'BB {\b costmap_2d::InflationLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTL \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v onInitialize\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:onInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::onInitialize (){\f2 [inline]}, {\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTO}
{\bkmkend AAAAAAACTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tf_, name_, and layered_costmap_ will all be set already when this is called. \par
}{
\'B1\'BB {\b costmap_2d::InflationLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTN \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVF \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVG \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layer_a97888a23e12ab5b798a854c2f590ae71_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::reset (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTR}
{\bkmkend AAAAAAACTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'B1\'BB {\b costmap_2d::InflationLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVH \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVI \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v updateBounds\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:updateBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::updateBounds (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTU}
{\bkmkend AAAAAAACTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For more details, see "Layered Costmaps for Context-Sensitive Navigation", by Lu et. Al, IROS 2014. \par
}{
\'B1\'BB {\b costmap_2d::InflationLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTT \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVL \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVM \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\xe \v updateCosts\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:updateCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void costmap_2d::Layer::updateCosts ({\b Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACTW}
{\bkmkend AAAAAAACTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). }}\par
{
\'B1\'BB {\b costmap_2d::InflationLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVN \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b costmap_2d::StaticLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVO \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v current_\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:current_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Layer::current_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVP}
{\bkmkend AAAAAAACVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v enabled_\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:enabled_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::Layer::enabled_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVQ}
{\bkmkend AAAAAAACVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_spec_\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:footprint_spec_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> costmap_2d::Layer::footprint_spec_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACVR}
{\bkmkend AAAAAAACVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v layered_costmap_\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:layered_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LayeredCostmap}* costmap_2d::Layer::layered_costmap_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVS}
{\bkmkend AAAAAAACVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name_\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::Layer::name_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVT}
{\bkmkend AAAAAAACVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:costmap_2d::Layer}
{\xe \v costmap_2d::Layer\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* costmap_2d::Layer::tf_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACVU}
{\bkmkend AAAAAAACVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b layer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b layer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::LayeredCostmap\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap}
{\bkmkstart AAAAAAACVV}
{\bkmkend AAAAAAACVV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates different layer plugins and aggregates them into one score }}\par
{
{\f2 #include <layered_costmap.h>}}\par
costmap_2d::LayeredCostmap \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LayeredCostmap} (std::string global_frame, bool rolling_window, bool track_unknown)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for a costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~LayeredCostmap} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateMap} (double robot_x, double robot_y, double robot_yaw)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the underlying costmap with new data. If you want to update the map outside of the update loop that runs, you can call this. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string & {\b getGlobalFrameID} () const noexcept\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resizeMap} (unsigned int size_x, unsigned int size_y, double resolution, double origin_x, double origin_y, bool size_locked=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getUpdatedBounds} (double &minx, double &miny, double &maxx, double &maxy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isCurrent} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} * {\b getCostmap} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isRolling} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isTrackingUnknown} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< {\b Layer} > > * {\b getPlugins} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addPlugin} (boost::shared_ptr< {\b Layer} > plugin)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isSizeLocked} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getBounds} (unsigned int *x0, unsigned int *xn, unsigned int *y0, unsigned int *yn)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isInitialized} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFootprint} (const std::vector< geometry_msgs::Point > &footprint_spec)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the stored footprint, updates the circumscribed and inscribed radii, and calls onFootprintChanged() in all layers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::vector< geometry_msgs::Point > & {\b getFootprint} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the latest footprint stored with {\b setFootprint()}. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCircumscribedRadius} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The radius of a circle centered at the origin of the robot which just surrounds all points on the robot's footprint. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getInscribedRadius} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The radius of a circle centered at the origin of the robot which is just within all points and edges of the robot's footprint. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2D} {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rolling_window_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b current_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b minx_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b miny_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxx_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b maxy_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b bx0_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b bxn_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b by0_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b byn_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< {\b Layer} > > {\b plugins_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b size_locked_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b circumscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b inscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b footprint_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates different layer plugins and aggregates them into one score \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LayeredCostmap\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:LayeredCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::LayeredCostmap::LayeredCostmap (std::string  {\i global_frame}, bool  {\i rolling_window}, bool  {\i track_unknown})}}
\par
{\bkmkstart AAAAAAACVW}
{\bkmkend AAAAAAACVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for a costmap }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a1200f12dd40104f81f8f2771bbec9d71_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~LayeredCostmap\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:~LayeredCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::LayeredCostmap::~LayeredCostmap ()}}
\par
{\bkmkstart AAAAAAACVX}
{\bkmkend AAAAAAACVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addPlugin\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:addPlugin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::LayeredCostmap::addPlugin (boost::shared_ptr< {\b Layer} >  {\i plugin}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVY}
{\bkmkend AAAAAAACVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a8afdb4c9795e2383bd5b66b89c748a6b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getBounds\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::LayeredCostmap::getBounds (unsigned int *  {\i x0}, unsigned int *  {\i xn}, unsigned int *  {\i y0}, unsigned int *  {\i yn}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACVZ}
{\bkmkend AAAAAAACVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_aef643cb3579fcdc9c0ff936038a6ddde_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCircumscribedRadius\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getCircumscribedRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::getCircumscribedRadius (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWA}
{\bkmkend AAAAAAACWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The radius of a circle centered at the origin of the robot which just surrounds all points on the robot's footprint. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is updated by {\b setFootprint()}. \par
}}
{\xe \v getCostmap\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2D} * costmap_2d::LayeredCostmap::getCostmap (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWB}
{\bkmkend AAAAAAACWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a22e2f5d750be195f71da46b2062460f2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getFootprint\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::vector< geometry_msgs::Point > & costmap_2d::LayeredCostmap::getFootprint (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWC}
{\bkmkend AAAAAAACWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the latest footprint stored with {\b setFootprint()}. }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a65c556a286827d2ac883dc49285c3ff8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGlobalFrameID\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getGlobalFrameID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string & costmap_2d::LayeredCostmap::getGlobalFrameID () const{\f2 [inline]}, {\f2 [noexcept]}}}
\par
{\bkmkstart AAAAAAACWD}
{\bkmkend AAAAAAACWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a4d264f47c67a8cf934987697813fb478_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getInscribedRadius\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getInscribedRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::getInscribedRadius (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWE}
{\bkmkend AAAAAAACWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The radius of a circle centered at the origin of the robot which is just within all points and edges of the robot's footprint. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is updated by {\b setFootprint()}. \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a55a92cecc3689caf8b1e9e077788c54b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPlugins\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getPlugins}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< boost::shared_ptr< {\b Layer} > > * costmap_2d::LayeredCostmap::getPlugins (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWF}
{\bkmkend AAAAAAACWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a56d0806d545bfbe019fb5cac308f10b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getUpdatedBounds\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:getUpdatedBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::LayeredCostmap::getUpdatedBounds (double &  {\i minx}, double &  {\i miny}, double &  {\i maxx}, double &  {\i maxy}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWG}
{\bkmkend AAAAAAACWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isCurrent\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:isCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::isCurrent ()}}
\par
{\bkmkstart AAAAAAACWH}
{\bkmkend AAAAAAACWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a7fdc879ceb88df60b51ee4e5f4a1ec6e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isInitialized\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:isInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::isInitialized (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWI}
{\bkmkend AAAAAAACWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_afc113bdd03ed7d3fa29038769a1bd9e3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isRolling\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:isRolling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::isRolling (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWJ}
{\bkmkend AAAAAAACWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a60ff509ec4e5464d6e6952c282b8e6bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isSizeLocked\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:isSizeLocked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::isSizeLocked (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWK}
{\bkmkend AAAAAAACWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_acaa22f5de46ef653c81d2d75d1832a1a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isTrackingUnknown\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:isTrackingUnknown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::isTrackingUnknown (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACWL}
{\bkmkend AAAAAAACWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a4aa6e5845344fadb7172fee21d0705cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a4aa6e5845344fadb7172fee21d0705cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resizeMap\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:resizeMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::LayeredCostmap::resizeMap (unsigned int  {\i size_x}, unsigned int  {\i size_y}, double  {\i resolution}, double  {\i origin_x}, double  {\i origin_y}, bool  {\i size_locked} = {\f2 false})}}
\par
{\bkmkstart AAAAAAACWM}
{\bkmkend AAAAAAACWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a8f8121ac0c6a2c5f267cf1cc07cfc40b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_a8f8121ac0c6a2c5f267cf1cc07cfc40b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setFootprint\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:setFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::LayeredCostmap::setFootprint (const std::vector< geometry_msgs::Point > &  {\i footprint_spec})}}
\par
{\bkmkstart AAAAAAACWN}
{\bkmkend AAAAAAACWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the stored footprint, updates the circumscribed and inscribed radii, and calls onFootprintChanged() in all layers. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_acf16f3d3636b7fbe6e28edbd32340464_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_acf16f3d3636b7fbe6e28edbd32340464_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateMap\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:updateMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::LayeredCostmap::updateMap (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw})}}
\par
{\bkmkstart AAAAAAACWO}
{\bkmkend AAAAAAACWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update the underlying costmap with new data. If you want to update the map outside of the update loop that runs, you can call this. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_ab598d6442277ba8299ba3c7b952662d6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_layered_costmap_ab598d6442277ba8299ba3c7b952662d6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bx0_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:bx0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::LayeredCostmap::bx0_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWP}
{\bkmkend AAAAAAACWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bxn_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:bxn_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::LayeredCostmap::bxn_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWQ}
{\bkmkend AAAAAAACWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v by0_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:by0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::LayeredCostmap::by0_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWR}
{\bkmkend AAAAAAACWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v byn_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:byn_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::LayeredCostmap::byn_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWS}
{\bkmkend AAAAAAACWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v circumscribed_radius_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:circumscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::circumscribed_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWT}
{\bkmkend AAAAAAACWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2D} costmap_2d::LayeredCostmap::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWU}
{\bkmkend AAAAAAACWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v current_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:current_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::current_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWV}
{\bkmkend AAAAAAACWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Whether or not the costmap should roll with the robot \par
}}
{\xe \v footprint_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:footprint_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> costmap_2d::LayeredCostmap::footprint_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWW}
{\bkmkend AAAAAAACWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::LayeredCostmap::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWX}
{\bkmkend AAAAAAACWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWY}
{\bkmkend AAAAAAACWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inscribed_radius_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:inscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::inscribed_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACWZ}
{\bkmkend AAAAAAACWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxx_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:maxx_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::maxx_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXA}
{\bkmkend AAAAAAACXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxy_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:maxy_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::maxy_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXB}
{\bkmkend AAAAAAACXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minx_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:minx_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::minx_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXC}
{\bkmkend AAAAAAACXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v miny_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:miny_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::LayeredCostmap::miny_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXD}
{\bkmkend AAAAAAACXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plugins_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:plugins_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<{\b Layer}> > costmap_2d::LayeredCostmap::plugins_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXE}
{\bkmkend AAAAAAACXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rolling_window_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:rolling_window_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::rolling_window_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXF}
{\bkmkend AAAAAAACXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_locked_\:costmap_2d::LayeredCostmap}
{\xe \v costmap_2d::LayeredCostmap\:size_locked_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::LayeredCostmap::size_locked_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACXG}
{\bkmkend AAAAAAACXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b layered_costmap.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b layered_costmap.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::LineIterator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator}
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
\par
{
{\f2 #include <line_iterator.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineIterator} (int x0, int y0, int x1, int y1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isValid} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b advance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX0} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY0} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getX1} () const\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getY1} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x0_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X coordinate of first end point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y0_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y coordinate of first end point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x1_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X coordinate of second end point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y1_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y coordinate of second end point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b x_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X coordinate of current point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b y_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y coordinate of current point. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b deltax_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Difference between Xs of endpoints. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b deltay_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Difference between Ys of endpoints. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b curpixel_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
index of current point in line loop. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xinc1_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xinc2_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yinc1_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yinc2_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b den_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b num_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numadd_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numpixels_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An iterator implementing Bresenham Ray-Tracing. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LineIterator\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:LineIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LineIterator::LineIterator (int  {\i x0}, int  {\i y0}, int  {\i x1}, int  {\i y1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v advance\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:advance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::LineIterator::advance (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_line_iterator_a8ed9b1960bf22eb83e62177cede42f6e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getX\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::getX () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_line_iterator_a28c1d5cf80224634d4b8adca5ec6f441_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getX0\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:getX0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::getX0 () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getX1\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:getX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::getX1 () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getY\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::getY () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_line_iterator_a59ca9e3b8bdfb50250a9bf93d1fb304b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getY0\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:getY0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::getY0 () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getY1\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:getY1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::getY1 () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isValid\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LineIterator::isValid () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_line_iterator_a603d638882063ab678c2a75911591080_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v curpixel_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:curpixel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::curpixel_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
index of current point in line loop. }}\par
}
{\xe \v deltax_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:deltax_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::deltax_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Difference between Xs of endpoints. }}\par
}
{\xe \v deltay_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:deltay_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::deltay_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Difference between Ys of endpoints. }}\par
}
{\xe \v den_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:den_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::den_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v num_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:num_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::num_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numadd_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:numadd_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::numadd_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numpixels_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:numpixels_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::numpixels_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x0_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:x0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::x0_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X coordinate of first end point. }}\par
}
{\xe \v x1_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:x1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::x1_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X coordinate of second end point. }}\par
}
{\xe \v x_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
X coordinate of current point. }}\par
}
{\xe \v xinc1_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:xinc1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::xinc1_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xinc2_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:xinc2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::xinc2_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y0_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:y0_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::y0_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y coordinate of first end point. }}\par
}
{\xe \v y1_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:y1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::y1_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y coordinate of second end point. }}\par
}
{\xe \v y_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y coordinate of current point. }}\par
}
{\xe \v yinc1_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:yinc1_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::yinc1_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yinc2_\:base_local_planner::LineIterator}
{\xe \v base_local_planner::LineIterator\:yinc2_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::LineIterator::yinc2_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b line_iterator.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::LocalPlannerLimits\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits}
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
\par
{
{\f2 #include <local_planner_limits.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocalPlannerLimits} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocalPlannerLimits} (double nmax_vel_trans, double nmin_vel_trans, double nmax_vel_x, double nmin_vel_x, double nmax_vel_y, double nmin_vel_y, double nmax_vel_theta, double nmin_vel_theta, double nacc_lim_x, double nacc_lim_y, double nacc_lim_theta, double nacc_lim_trans, double nxy_goal_tolerance, double nyaw_goal_tolerance, bool nprune_plan=true, double ntrans_stopped_vel=0.1, double ntheta_stopped_vel=0.1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~LocalPlannerLimits} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eigen::Vector3f {\b getAccLimits} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the acceleration limits of the robot }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_trans}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_trans}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_theta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_theta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_theta}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_trans}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prune_plan}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b xy_goal_tolerance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b yaw_goal_tolerance}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b trans_stopped_vel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b theta_stopped_vel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b restore_defaults}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LocalPlannerLimits\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:LocalPlannerLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LocalPlannerLimits::LocalPlannerLimits (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LocalPlannerLimits\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:LocalPlannerLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LocalPlannerLimits::LocalPlannerLimits (double  {\i nmax_vel_trans}, double  {\i nmin_vel_trans}, double  {\i nmax_vel_x}, double  {\i nmin_vel_x}, double  {\i nmax_vel_y}, double  {\i nmin_vel_y}, double  {\i nmax_vel_theta}, double  {\i nmin_vel_theta}, double  {\i nacc_lim_x}, double  {\i nacc_lim_y}, double  {\i nacc_lim_theta}, double  {\i nacc_lim_trans}, double  {\i nxy_goal_tolerance}, double  {\i nyaw_goal_tolerance}, bool  {\i nprune_plan} = {\f2 true}, double  {\i ntrans_stopped_vel} = {\f2 0.1}, double  {\i ntheta_stopped_vel} = {\f2 0.1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~LocalPlannerLimits\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:~LocalPlannerLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LocalPlannerLimits::~LocalPlannerLimits (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getAccLimits\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:getAccLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f base_local_planner::LocalPlannerLimits::getAccLimits (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the acceleration limits of the robot }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The acceleration limits of the robot \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_limits_a0402363ae18d44002834003a1b17f14b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v acc_lim_theta\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:acc_lim_theta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::acc_lim_theta}}
\par
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v acc_lim_trans\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:acc_lim_trans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::acc_lim_trans}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v acc_lim_x\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:acc_lim_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::acc_lim_x}}
\par
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v acc_lim_y\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:acc_lim_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::acc_lim_y}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_theta\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:max_vel_theta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::max_vel_theta}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_trans\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:max_vel_trans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::max_vel_trans}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_x\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:max_vel_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::max_vel_x}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_y\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:max_vel_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::max_vel_y}}
\par
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_vel_theta\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:min_vel_theta}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::min_vel_theta}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_vel_trans\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:min_vel_trans}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::min_vel_trans}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_vel_x\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:min_vel_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::min_vel_x}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_vel_y\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:min_vel_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::min_vel_y}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v prune_plan\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:prune_plan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerLimits::prune_plan}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v restore_defaults\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:restore_defaults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerLimits::restore_defaults}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v theta_stopped_vel\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:theta_stopped_vel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::theta_stopped_vel}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v trans_stopped_vel\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:trans_stopped_vel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::trans_stopped_vel}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xy_goal_tolerance\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:xy_goal_tolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::xy_goal_tolerance}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yaw_goal_tolerance\:base_local_planner::LocalPlannerLimits}
{\xe \v base_local_planner::LocalPlannerLimits\:yaw_goal_tolerance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::LocalPlannerLimits::yaw_goal_tolerance}}
\par
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b local_planner_limits.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::LocalPlannerUtil\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil}
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper class implementing infrastructure code many local planner implementations may need. }}\par
{
{\f2 #include <local_planner_util.h>}}\par
base_local_planner::LocalPlannerUtil \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} ({\b LocalPlannerLimits} &config, bool restore_defaults)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'CE\'CA\'FD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocalPlannerUtil} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~LocalPlannerUtil} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2D} *costmap, std::string global_frame)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getGoal} (geometry_msgs::PoseStamped &goal_pose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setPlan} (const std::vector< geometry_msgs::PoseStamped > &orig_global_plan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getLocalPlan} (const geometry_msgs::PoseStamped &global_pose, std::vector< geometry_msgs::PoseStamped > &transformed_plan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b getCostmap} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocalPlannerLimits} {\b getCurrentLimits} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getGlobalFrame} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b tf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > {\b global_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b limits_configuration_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setup_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocalPlannerLimits} {\b default_limits_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LocalPlannerLimits} {\b limits_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper class implementing infrastructure code many local planner implementations may need. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v LocalPlannerUtil\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:LocalPlannerUtil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LocalPlannerUtil::LocalPlannerUtil (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~LocalPlannerUtil\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:~LocalPlannerUtil}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::LocalPlannerUtil::~LocalPlannerUtil (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getCostmap\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:getCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D} * base_local_planner::LocalPlannerUtil::getCostmap ()}}
\par
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_aba7095b7858de54294341d4a916c2555_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCurrentLimits\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:getCurrentLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LocalPlannerLimits} base_local_planner::LocalPlannerUtil::getCurrentLimits ()}}
\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_ab872bb31110cc8cf9d1fa7f5b339c6fd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGlobalFrame\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:getGlobalFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::LocalPlannerUtil::getGlobalFrame (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_ac3e2070b5a7adcc1ba141d41d3f6865c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGoal\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:getGoal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerUtil::getGoal (geometry_msgs::PoseStamped &  {\i goal_pose})}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_a40a75811cc424cb2f4e205a0ec18cb41_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_a40a75811cc424cb2f4e205a0ec18cb41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLocalPlan\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:getLocalPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerUtil::getLocalPlan (const geometry_msgs::PoseStamped &  {\i global_pose}, std::vector< geometry_msgs::PoseStamped > &  {\i transformed_plan})}}
\par
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_adb22b6981dc80e9159298c8f3dc738eb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_adb22b6981dc80e9159298c8f3dc738eb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::LocalPlannerUtil::initialize (tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2D} *  {\i costmap}, std::string  {\i global_frame})}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_aef146076f0095773cb6e89827ff06b4b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::LocalPlannerUtil::reconfigureCB ({\b LocalPlannerLimits} &  {\i config}, bool  {\i restore_defaults})}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'CE\'CA\'FD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_a84581c07b821dbdb93f78a6def7f8850_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPlan\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:setPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerUtil::setPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i orig_global_plan})}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_local_planner_util_af0eb515ddb49387ac87153ed4401a248_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* base_local_planner::LocalPlannerUtil::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_limits_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:default_limits_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LocalPlannerLimits} base_local_planner::LocalPlannerUtil::default_limits_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::LocalPlannerUtil::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_plan_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:global_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped> base_local_planner::LocalPlannerUtil::global_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerUtil::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limits_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:limits_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LocalPlannerLimits} base_local_planner::LocalPlannerUtil::limits_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limits_configuration_mutex_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:limits_configuration_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex base_local_planner::LocalPlannerUtil::limits_configuration_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::LocalPlannerUtil::name_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setup_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:setup_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::LocalPlannerUtil::setup_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:base_local_planner::LocalPlannerUtil}
{\xe \v base_local_planner::LocalPlannerUtil\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* base_local_planner::LocalPlannerUtil::tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b local_planner_util.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b local_planner_util.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_cell_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_cell_t}
{\xe \v map_cell_t}
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
\par
{
{\f2 #include <map.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b occ_state}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b occ_dist}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v occ_dist\:map_cell_t}
{\xe \v map_cell_t\:occ_dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_cell_t::occ_dist}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v occ_state\:map_cell_t}
{\xe \v map_cell_t\:occ_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int map_cell_t::occ_state}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/map/{\b map.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_t}
{\xe \v map_t}
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
\par
{
{\f2 #include <map.h>}}\par
map_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structmap__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scale}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b size_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_cell_t} * {\b cells}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_occ_dist}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cells\:map_t}
{\xe \v map_t\:cells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_cell_t}* map_t::cells}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_occ_dist\:map_t}
{\xe \v map_t\:max_occ_dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_t::max_occ_dist}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_x\:map_t}
{\xe \v map_t\:origin_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_t::origin_x}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_y\:map_t}
{\xe \v map_t\:origin_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_t::origin_y}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scale\:map_t}
{\xe \v map_t\:scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_t::scale}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_x\:map_t}
{\xe \v map_t\:size_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int map_t::size_x}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_y\:map_t}
{\xe \v map_t\:size_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int map_t::size_y}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/map/{\b map.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::MapCell\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell}
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores path distance and goal distance information used for scoring trajectories }}\par
{
{\f2 #include <map_cell.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapCell} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapCell} (const {\b MapCell} &mc)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b cy}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Cell} index in the grid map }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b target_dist}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Distance to planner's path }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b target_mark}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Marks for computing path/goal distances }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b within_robot}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark for cells within the robot footprint }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores path distance and goal distance information used for scoring trajectories \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapCell\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:MapCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapCell::MapCell ()}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }}\par
}
{\xe \v MapCell\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:MapCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapCell::MapCell (const {\b MapCell} &  {\i mc})}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mc} \cell }{The {\b MapCell} to be copied \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cx\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:cx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::MapCell::cx}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cy\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:cy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::MapCell::cy}}
\par
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Cell} index in the grid map }}\par
}
{\xe \v target_dist\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:target_dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapCell::target_dist}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Distance to planner's path }}\par
}
{\xe \v target_mark\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:target_mark}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::MapCell::target_mark}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Marks for computing path/goal distances }}\par
}
{\xe \v within_robot\:base_local_planner::MapCell}
{\xe \v base_local_planner::MapCell\:within_robot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::MapCell::within_robot}}
\par
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mark for cells within the robot footprint }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b map_cell.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b map_cell.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MapClientTest\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v MapClientTest}
{\xe \v MapClientTest}
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
\'C0\'E0 MapClientTest \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_client_test__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
MapClientTest \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_client_test__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapClientTest} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MapClientTest} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapCallback} (const boost::shared_ptr< nav_msgs::OccupancyGrid const > &map)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapMetaDataCallback} (const boost::shared_ptr< nav_msgs::MapMetaData const > &map_metadata)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle * {\b n_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b got_map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< nav_msgs::OccupancyGrid const  > {\b map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b got_map_metadata_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< nav_msgs::MapMetaData const  > {\b map_metadata_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapClientTest\:MapClientTest}
{\xe \v MapClientTest\:MapClientTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MapClientTest::MapClientTest (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~MapClientTest\:MapClientTest}
{\xe \v MapClientTest\:~MapClientTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MapClientTest::~MapClientTest (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v mapCallback\:MapClientTest}
{\xe \v MapClientTest\:mapCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MapClientTest::mapCallback (const boost::shared_ptr< nav_msgs::OccupancyGrid const > &  {\i map}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_client_test_a3a463362d3738d287a265c783a0d3352_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapMetaDataCallback\:MapClientTest}
{\xe \v MapClientTest\:mapMetaDataCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MapClientTest::mapMetaDataCallback (const boost::shared_ptr< nav_msgs::MapMetaData const > &  {\i map_metadata}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_client_test_a66191cde7942520b905dfa4fd1ee4287_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v got_map_\:MapClientTest}
{\xe \v MapClientTest\:got_map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapClientTest::got_map_}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v got_map_metadata_\:MapClientTest}
{\xe \v MapClientTest\:got_map_metadata_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapClientTest::got_map_metadata_}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_\:MapClientTest}
{\xe \v MapClientTest\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<nav_msgs::OccupancyGrid const> MapClientTest::map_}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_metadata_\:MapClientTest}
{\xe \v MapClientTest\:map_metadata_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<nav_msgs::MapMetaData const> MapClientTest::map_metadata_}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v n_\:MapClientTest}
{\xe \v MapClientTest\:n_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle* MapClientTest::n_}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map_server/test/{\b rtest.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MapGenerator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v MapGenerator}
{\xe \v MapGenerator}
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map generation node. }}\par
MapGenerator \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_generator__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGenerator} (const std::string &mapname, int threshold_occupied, int threshold_free)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapCallback} (const nav_msgs::OccupancyGridConstPtr &map)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b mapname_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b map_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saved_map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b threshold_occupied_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b threshold_free_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map generation node. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapGenerator\:MapGenerator}
{\xe \v MapGenerator\:MapGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MapGenerator::MapGenerator (const std::string &  {\i mapname}, int  {\i threshold_occupied}, int  {\i threshold_free}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_generator_a6dd0e88a42d371aae38807df66fa8486_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v mapCallback\:MapGenerator}
{\xe \v MapGenerator\:mapCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MapGenerator::mapCallback (const nav_msgs::OccupancyGridConstPtr &  {\i map}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_generator_a609548d83b6a77a5cd3056f7c5224962_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_sub_\:MapGenerator}
{\xe \v MapGenerator\:map_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber MapGenerator::map_sub_}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mapname_\:MapGenerator}
{\xe \v MapGenerator\:mapname_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string MapGenerator::mapname_}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v saved_map_\:MapGenerator}
{\xe \v MapGenerator\:saved_map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapGenerator::saved_map_}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v threshold_free_\:MapGenerator}
{\xe \v MapGenerator\:threshold_free_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MapGenerator::threshold_free_}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v threshold_occupied_\:MapGenerator}
{\xe \v MapGenerator\:threshold_occupied_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int MapGenerator::threshold_occupied_}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map_server/src/{\b map_saver.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::MapGrid\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid}
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A grid of {\b MapCell} cells that is used to propagate path and goal distances for the trajectory controller. }}\par
{
{\f2 #include <map_grid.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a 0x0 map by default }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} (unsigned int size_x, unsigned int size_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a map of size_x by size_y }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapCell} & {\b operator()} (unsigned int x, unsigned int y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a map cell accessed by (col, row) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapCell} {\b operator()} (unsigned int x, unsigned int y) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a map cell accessed by (col, row) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapCell} & {\b getCell} (unsigned int x, unsigned int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MapGrid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor for a {\b MapGrid} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} (const {\b MapGrid} &mg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor for a {\b MapGrid} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} & {\b operator=} (const {\b MapGrid} &mg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator for a {\b MapGrid} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetPathDist} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reset path distance fields for all cells }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sizeCheck} (unsigned int size_x, unsigned int size_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check if we need to resize }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b commonInit} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utility to share initialization code across constructors }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b getIndex} (int x, int y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a 1D index into the {\b MapCell} array for a 2D index }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b obstacleCosts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b unreachableCellCosts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b updatePathCell} ({\b MapCell} *current_cell, {\b MapCell} *check_cell, const {\b costmap_2d::Costmap2D} &costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to update the distance of a cell in path distance computation }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b computeTargetDistance} (std::queue< {\b MapCell} * > &dist_queue, const {\b costmap_2d::Costmap2D} &costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the distance from each cell in the local map grid to the planned path }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b computeGoalDistance} (std::queue< {\b MapCell} * > &dist_queue, const {\b costmap_2d::Costmap2D} &costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the distance from each cell in the local map grid to the local goal point }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTargetCells} (const {\b costmap_2d::Costmap2D} &costmap, const std::vector< geometry_msgs::PoseStamped > &global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update what cells are considered path based on the global plan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLocalGoal} (const {\b costmap_2d::Costmap2D} &costmap, const std::vector< geometry_msgs::PoseStamped > &global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update what cell is considered the next local goal }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b adjustPlanResolution} (const std::vector< geometry_msgs::PoseStamped > &global_plan_in, std::vector< geometry_msgs::PoseStamped > &global_plan_out, double resolution)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b goal_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b goal_y_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The goal distance was last computed from }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_y_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The dimensions of the grid }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b MapCell} > {\b map_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for the MapCells }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A grid of {\b MapCell} cells that is used to propagate path and goal distances for the trajectory controller. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapGrid\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:MapGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGrid::MapGrid ()}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a 0x0 map by default }}\par
}
{\xe \v MapGrid\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:MapGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGrid::MapGrid (unsigned int  {\i size_x}, unsigned int  {\i size_y})}}
\par
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates a map of size_x by size_y }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The width of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The height of the map \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a55e83a26cdb3c6614d9ca4635da5dc92_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~MapGrid\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:~MapGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGrid::~MapGrid (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor for a {\b MapGrid} }}\par
}
{\xe \v MapGrid\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:MapGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGrid::MapGrid (const {\b MapGrid} &  {\i mg})}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor for a {\b MapGrid} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mg} \cell }{The {\b MapGrid} to copy \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v adjustPlanResolution\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:adjustPlanResolution}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::adjustPlanResolution (const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan_in}, std::vector< geometry_msgs::PoseStamped > &  {\i global_plan_out}, double  {\i resolution}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
increase global plan resolution to match that of the costmap by adding points linearly between global plan points This is necessary where global planners produce plans with few points. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_plan_in} \cell }{input \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_plan_output} \cell }{output \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i resolution} \cell }{desired distance between waypoints \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a0af367c6272d3c4b7c16dde4a41c306a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v commonInit\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:commonInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::commonInit ()}}
\par
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utility to share initialization code across constructors }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a68495bea908d9bf692ef8520ca4fb432_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeGoalDistance\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:computeGoalDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::computeGoalDistance (std::queue< {\b MapCell} * > &  {\i dist_queue}, const {\b costmap_2d::Costmap2D} &  {\i costmap})}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the distance from each cell in the local map grid to the local goal point }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_queue} \cell }{A queue containing the local goal cell \cell }
{\row }
}
}}
{\xe \v computeTargetDistance\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:computeTargetDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::computeTargetDistance (std::queue< {\b MapCell} * > &  {\i dist_queue}, const {\b costmap_2d::Costmap2D} &  {\i costmap})}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the distance from each cell in the local map grid to the planned path }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dist_queue} \cell }{A queue of the initial cells on the path \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_ab29d565af28ed4dc377ac997c70070f2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_ab29d565af28ed4dc377ac997c70070f2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCell\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:getCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapCell} & base_local_planner::MapGrid::getCell (unsigned int  {\i x}, unsigned int  {\i y}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a46a736f0ff4e89771ee50544a625988d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getIndex\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:getIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t base_local_planner::MapGrid::getIndex (int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a 1D index into the {\b MapCell} array for a 2D index }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The desired x coordinate \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The desired y coordinate \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The associated 1D index \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a3fd22c28f3c45c9336ec7f1ecb33d423_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v obstacleCosts\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:obstacleCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGrid::obstacleCosts (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a value that indicates cell is in obstacle \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_af3db024faefa9420ec75b18d4da90cfe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator()\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapCell} & base_local_planner::MapGrid::operator() (unsigned int  {\i x}, unsigned int  {\i y}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a map cell accessed by (col, row) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y coordinate of the cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A reference to the desired cell \par
}}}}
{\xe \v operator()\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapCell} base_local_planner::MapGrid::operator() (unsigned int  {\i x}, unsigned int  {\i y}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a map cell accessed by (col, row) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y coordinate of the cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A copy of the desired cell \par
}}}}
{\xe \v operator=\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapGrid} & base_local_planner::MapGrid::operator= (const {\b MapGrid} &  {\i mg})}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Assignment operator for a {\b MapGrid} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mg} \cell }{The {\b MapGrid} to assign from \cell }
{\row }
}
}}
{\xe \v resetPathDist\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:resetPathDist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::resetPathDist ()}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
reset path distance fields for all cells }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_aaede39518e77d4eb1f7fc7766da5cb11_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_aaede39518e77d4eb1f7fc7766da5cb11_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setLocalGoal\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:setLocalGoal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::setLocalGoal (const {\b costmap_2d::Costmap2D} &  {\i costmap}, const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan})}}
\par
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update what cell is considered the next local goal }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_ab73fe99a7ad21b36a3178e26296945d5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_ab73fe99a7ad21b36a3178e26296945d5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setTargetCells\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:setTargetCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::setTargetCells (const {\b costmap_2d::Costmap2D} &  {\i costmap}, const std::vector< geometry_msgs::PoseStamped > &  {\i global_plan})}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Update what cells are considered path based on the global plan }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a8e3227190b9f67376ee2890f493079d5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a8e3227190b9f67376ee2890f493079d5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sizeCheck\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:sizeCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGrid::sizeCheck (unsigned int  {\i size_x}, unsigned int  {\i size_y})}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
check if we need to resize }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The desired width \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The desired height \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_ada7418321ccc809a6dfa8e45ada16c6d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v unreachableCellCosts\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:unreachableCellCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGrid::unreachableCellCosts (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns a value indicating cell was not reached by wavefront propagation of set cells. (is behind walls, regarding the region covered by grid) \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a1b7145c6781d0d3703a1003b9f753420_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updatePathCell\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:updatePathCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::MapGrid::updatePathCell ({\b MapCell} *  {\i current_cell}, {\b MapCell} *  {\i check_cell}, const {\b costmap_2d::Costmap2D} &  {\i costmap}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to update the distance of a cell in path distance computation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i current_cell} \cell }{The cell we're currently in \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i check_cell} \cell }{The cell to be updated \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a88efaf02a2735770450745f47239f0d9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_a88efaf02a2735770450745f47239f0d9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v goal_x_\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:goal_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGrid::goal_x_}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_y_\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:goal_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGrid::goal_y_}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The goal distance was last computed from }}\par
}
{\xe \v map_\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b MapCell}> base_local_planner::MapGrid::map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for the MapCells }}\par
}
{\xe \v size_x_\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:size_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::MapGrid::size_x_}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_y_\:base_local_planner::MapGrid}
{\xe \v base_local_planner::MapGrid\:size_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::MapGrid::size_y_}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The dimensions of the grid }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b map_grid.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b map_grid.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::MapGridCostFunction\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction}
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
\par
{
{\f2 #include <map_grid_cost_function.h>}}\par
\'C0\'E0 base_local_planner::MapGridCostFunction \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::MapGridCostFunction \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGridCostFunction} ({\b costmap_2d::Costmap2D} *costmap, double xshift=0.0, double yshift=0.0, bool is_local_goal_function=false, {\b CostAggregationType} aggregationType={\b Last})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MapGridCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTargetPoses} (std::vector< geometry_msgs::PoseStamped > target_poses)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setXShift} (double xshift)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setYShift} (double yshift)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStopOnFailure} (bool stop_on_failure)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If true, failures along the path cause the entire path to be rejected. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prepare} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} ({\b Trajectory} &traj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b obstacleCosts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b unreachableCellCosts} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getCellCosts} (unsigned int cx, unsigned int cy)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > {\b target_poses_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::MapGrid} {\b map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CostAggregationType} {\b aggregationType_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b xshift_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
xshift and yshift allow scoring for different }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b yshift_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_local_goal_function_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stop_on_failure_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class provides cost based on a map_grid of a small area of the world. The map_grid covers a the costmap, the costmap containing the information about sensed obstacles. The map_grid is used by setting certain cells to distance 0, and then propagating distances around them, filling up the area reachable around them.\par
The approach using grid_maps is used for computational efficiency, allowing to score hundreds of trajectories very quickly.\par
This can be used to favor trajectories which stay on a given path, or which approach a given goal. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap_ros} \cell }{Reference to object giving updates of obstacles around robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xshift} \cell }{where the scoring point is with respect to robot center pose \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yshift} \cell }{where the scoring point is with respect to robot center pose \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i is_local_goal_function,scores} \cell }{for local goal rather than whole path \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i aggregationType} \cell }{how to combine costs along trajectory \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapGridCostFunction\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:MapGridCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGridCostFunction::MapGridCostFunction ({\b costmap_2d::Costmap2D} *  {\i costmap}, double  {\i xshift} = {\f2 0.0}, double  {\i yshift} = {\f2 0.0}, bool  {\i is_local_goal_function} = {\f2 false}, {\b CostAggregationType}  {\i aggregationType} = {\f2 {\b Last}})}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~MapGridCostFunction\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:~MapGridCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGridCostFunction::~MapGridCostFunction (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getCellCosts\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:getCellCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGridCostFunction::getCellCosts (unsigned int  {\i cx}, unsigned int  {\i cy})}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a0a9cdd8ffef9d7cfe3c7a8c38a6e6e33_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v obstacleCosts\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:obstacleCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGridCostFunction::obstacleCosts (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return a value that indicates cell is in obstacle \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a14783081aef0e5f4702edf317a10c167_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a14783081aef0e5f4702edf317a10c167_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v prepare\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::MapGridCostFunction::prepare (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
propagate distances \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_af3f80d67ddeefec5871b4828ddafb5dc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v scoreTrajectory\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGridCostFunction::scoreTrajectory ({\b Trajectory} &  {\i traj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C6\'C0\'B7\'D6\'A3\'AC\'D2\'B2\'CA\'C7\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a4332b1fd1c72795c87fb5d3a427df476_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setStopOnFailure\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:setStopOnFailure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGridCostFunction::setStopOnFailure (bool  {\i stop_on_failure}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
If true, failures along the path cause the entire path to be rejected. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default is true. \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a02c1cdf742342db135a15eaaad3a8d86_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setTargetPoses\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:setTargetPoses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGridCostFunction::setTargetPoses (std::vector< geometry_msgs::PoseStamped >  {\i target_poses})}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set line segments on the grid with distance 0, resets the grid \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a07f336c23114bcd9ea8fa24462465277_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setXShift\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:setXShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGridCostFunction::setXShift (double  {\i xshift}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a7a3d73260adc793dde0317b532b29f8a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setYShift\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:setYShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGridCostFunction::setYShift (double  {\i yshift}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unreachableCellCosts\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:unreachableCellCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGridCostFunction::unreachableCellCosts (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
returns a value indicating cell was not reached by wavefront propagation of set cells. (is behind walls, regarding the region covered by grid) \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a9e561793dbbb51118834f19673e17892_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_cost_function_a9e561793dbbb51118834f19673e17892_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v aggregationType_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:aggregationType_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CostAggregationType} base_local_planner::MapGridCostFunction::aggregationType_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* base_local_planner::MapGridCostFunction::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v is_local_goal_function_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:is_local_goal_function_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::MapGridCostFunction::is_local_goal_function_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::MapGrid} base_local_planner::MapGridCostFunction::map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stop_on_failure_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:stop_on_failure_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::MapGridCostFunction::stop_on_failure_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target_poses_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:target_poses_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped> base_local_planner::MapGridCostFunction::target_poses_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xshift_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:xshift_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGridCostFunction::xshift_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
xshift and yshift allow scoring for different }}\par
}
{\xe \v yshift_\:base_local_planner::MapGridCostFunction}
{\xe \v base_local_planner::MapGridCostFunction\:yshift_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::MapGridCostFunction::yshift_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b map_grid_cost_function.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b map_grid_cost_function.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::MapGridVisualizer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer}
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
\par
{
{\f2 #include <map_grid_visualizer.h>}}\par
base_local_planner::MapGridVisualizer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_visualizer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGridVisualizer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (const std::string &name, std::string frame, boost::function< bool(int cx, int cy, float &path_cost, float &goal_cost, float &occ_cost, float &total_cost)> cost_function)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the {\b MapGridVisualizer} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishCostCloud} (const {\b costmap_2d::Costmap2D} *costmap_p_)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build and publish a PointCloud if the publish_cost_grid_pc parameter was true. Only include points for which the cost_function at (cx,cy) returns true. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The name to get parameters relative to. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::function< bool(int cx, int cy, float &path_cost, float &goal_cost, float &occ_cost, float &total_cost)> {\b cost_function_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The function to be used to generate the cost components for the output PointCloud }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b ns_nh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b pub_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapGridVisualizer\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:MapGridVisualizer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::MapGridVisualizer::MapGridVisualizer ()}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v initialize\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGridVisualizer::initialize (const std::string &  {\i name}, std::string  {\i frame}, boost::function< bool(int cx, int cy, float &path_cost, float &goal_cost, float &occ_cost, float &total_cost)>  {\i cost_function})}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initializes the {\b MapGridVisualizer} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name to be appended to ~/ in order to get the proper namespace for parameters \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{The costmap instance to use to get the size of the map to generate a point cloud for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cost_function} \cell }{The function to use to compute the cost values to be inserted into each point in the output PointCloud as well as whether to include a given point or not \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_visualizer_a4145416ab13ea8b513d7707d65f3e8f3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishCostCloud\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:publishCostCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::MapGridVisualizer::publishCostCloud (const {\b costmap_2d::Costmap2D} *  {\i costmap_p_})}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Build and publish a PointCloud if the publish_cost_grid_pc parameter was true. Only include points for which the cost_function at (cx,cy) returns true. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_visualizer_abc768f1e16ce0cdf87dec9f25a60ee64_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_map_grid_visualizer_abc768f1e16ce0cdf87dec9f25a60ee64_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cost_function_\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:cost_function_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::function<bool (int cx, int cy, float &path_cost, float &goal_cost, float &occ_cost, float &total_cost)> base_local_planner::MapGridVisualizer::cost_function_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The function to be used to generate the cost components for the output PointCloud }}\par
}
{\xe \v frame_id_\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::MapGridVisualizer::frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name_\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::MapGridVisualizer::name_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The name to get parameters relative to. }}\par
}
{\xe \v ns_nh_\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:ns_nh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle base_local_planner::MapGridVisualizer::ns_nh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pub_\:base_local_planner::MapGridVisualizer}
{\xe \v base_local_planner::MapGridVisualizer\:pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher base_local_planner::MapGridVisualizer::pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b map_grid_visualizer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b map_grid_visualizer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::MapLocation\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::MapLocation}
{\xe \v costmap_2d::MapLocation}
{\bkmkstart AAAAAAACXH}
{\bkmkend AAAAAAACXH}
\par
{
{\f2 #include <costmap_2d.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v x\:costmap_2d::MapLocation}
{\xe \v costmap_2d::MapLocation\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::MapLocation::x}}
\par
{\bkmkstart AAAAAAACXI}
{\bkmkend AAAAAAACXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:costmap_2d::MapLocation}
{\xe \v costmap_2d::MapLocation\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::MapLocation::y}}
\par
{\bkmkstart AAAAAAACXJ}
{\bkmkend AAAAAAACXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MapServer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v MapServer}
{\xe \v MapServer}
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
MapServer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapServer} (const std::string &fname, double res)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mapCallback} (nav_msgs::GetMap::Request &req, nav_msgs::GetMap::Response &res)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b changeMapCallback} (nav_msgs::LoadMap::Request &request, nav_msgs::LoadMap::Response &response)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loadMapFromValues} (std::string map_file_name, double resolution, int negate, double occ_th, double free_th, double origin[3], {\b MapMode} mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loadMapFromParams} (std::string map_file_name, double resolution)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loadMapFromYaml} (std::string path_to_yaml)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b nh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b map_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b metadata_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b get_map_service_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b change_map_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b deprecated_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b frame_id_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_msgs::MapMetaData {\b meta_data_message_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_msgs::GetMap::Response {\b map_resp_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapServer\:MapServer}
{\xe \v MapServer\:MapServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MapServer::MapServer (const std::string &  {\i fname}, double  {\i res}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trivial constructor \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_ae1c28a36205ae2d7fc2faa7e9d53b3e9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v changeMapCallback\:MapServer}
{\xe \v MapServer\:changeMapCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapServer::changeMapCallback (nav_msgs::LoadMap::Request &  {\i request}, nav_msgs::LoadMap::Response &  {\i response}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback invoked when someone requests to change the map \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_a3c6808b81ad71ac7e82d4aa8e3ac34df_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_a3c6808b81ad71ac7e82d4aa8e3ac34df_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadMapFromParams\:MapServer}
{\xe \v MapServer\:loadMapFromParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapServer::loadMapFromParams (std::string  {\i map_file_name}, double  {\i resolution}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a map using the deprecated method \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_ad11fadd1892f9fc826010ee3478cc13a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_ad11fadd1892f9fc826010ee3478cc13a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadMapFromValues\:MapServer}
{\xe \v MapServer\:loadMapFromValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapServer::loadMapFromValues (std::string  {\i map_file_name}, double  {\i resolution}, int  {\i negate}, double  {\i occ_th}, double  {\i free_th}, double  {\i origin}[3], {\b MapMode}  {\i mode}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a map given all the values needed to understand it \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_a97a151da4f0c2457e4465cbf5e72e389_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_a97a151da4f0c2457e4465cbf5e72e389_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadMapFromYaml\:MapServer}
{\xe \v MapServer\:loadMapFromYaml}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapServer::loadMapFromYaml (std::string  {\i path_to_yaml}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a map given a path to a yaml file \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_a3ff2a7171c8d3cc381506c8347e5fae6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_a3ff2a7171c8d3cc381506c8347e5fae6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapCallback\:MapServer}
{\xe \v MapServer\:mapCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapServer::mapCallback (nav_msgs::GetMap::Request &  {\i req}, nav_msgs::GetMap::Response &  {\i res}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback invoked when someone requests our service \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_map_server_adb1ee040f9e2eaf855ba4f76bfc10260_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v change_map_srv_\:MapServer}
{\xe \v MapServer\:change_map_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer MapServer::change_map_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deprecated_\:MapServer}
{\xe \v MapServer\:deprecated_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool MapServer::deprecated_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frame_id_\:MapServer}
{\xe \v MapServer\:frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string MapServer::frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_map_service_\:MapServer}
{\xe \v MapServer\:get_map_service_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer MapServer::get_map_service_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_pub_\:MapServer}
{\xe \v MapServer\:map_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher MapServer::map_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_resp_\:MapServer}
{\xe \v MapServer\:map_resp_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_msgs::GetMap::Response MapServer::map_resp_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v meta_data_message_\:MapServer}
{\xe \v MapServer\:meta_data_message_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_msgs::MapMetaData MapServer::meta_data_message_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The map data is cached here, to be sent out to service callers \par
}}
{\xe \v metadata_pub_\:MapServer}
{\xe \v MapServer\:metadata_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher MapServer::metadata_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nh_\:MapServer}
{\xe \v MapServer\:nh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle MapServer::nh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map_server/src/{\b main.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Costmap2D::MarkCell\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Costmap2D::MarkCell}
{\xe \v costmap_2d::Costmap2D::MarkCell}
{\bkmkstart AAAAAAACOJ}
{\bkmkend AAAAAAACOJ}
\par
{
{\f2 #include <costmap_2d.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MarkCell} (unsigned char *costmap, unsigned char value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (unsigned int offset)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b value_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MarkCell\:costmap_2d::Costmap2D::MarkCell}
{\xe \v costmap_2d::Costmap2D::MarkCell\:MarkCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2D::MarkCell::MarkCell (unsigned char *  {\i costmap}, unsigned char  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOK}
{\bkmkend AAAAAAACOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:costmap_2d::Costmap2D::MarkCell}
{\xe \v costmap_2d::Costmap2D::MarkCell\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::MarkCell::operator() (unsigned int  {\i offset}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOL}
{\bkmkend AAAAAAACOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_\:costmap_2d::Costmap2D::MarkCell}
{\xe \v costmap_2d::Costmap2D::MarkCell\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* costmap_2d::Costmap2D::MarkCell::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOM}
{\bkmkend AAAAAAACOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value_\:costmap_2d::Costmap2D::MarkCell}
{\xe \v costmap_2d::Costmap2D::MarkCell\:value_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::Costmap2D::MarkCell::value_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACON}
{\bkmkend AAAAAAACON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid::VoxelGrid::MarkVoxel\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid::VoxelGrid::MarkVoxel}
{\xe \v voxel_grid::VoxelGrid::MarkVoxel}
{\bkmkstart AAAAAAADYD}
{\bkmkend AAAAAAADYD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MarkVoxel} (uint32_t *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (unsigned int offset, unsigned int z_mask)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t * {\b data_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MarkVoxel\:voxel_grid::VoxelGrid::MarkVoxel}
{\xe \v voxel_grid::VoxelGrid::MarkVoxel\:MarkVoxel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
voxel_grid::VoxelGrid::MarkVoxel::MarkVoxel (uint32_t *  {\i data}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADYE}
{\bkmkend AAAAAAADYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:voxel_grid::VoxelGrid::MarkVoxel}
{\xe \v voxel_grid::VoxelGrid::MarkVoxel\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::MarkVoxel::operator() (unsigned int  {\i offset}, unsigned int  {\i z_mask}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADYF}
{\bkmkend AAAAAAADYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v data_\:voxel_grid::VoxelGrid::MarkVoxel}
{\xe \v voxel_grid::VoxelGrid::MarkVoxel\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t* voxel_grid::VoxelGrid::MarkVoxel::data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYG}
{\bkmkend AAAAAAADYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_base::MoveBase\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_base::MoveBase}
{\xe \v move_base::MoveBase}
{\bkmkstart AAAAAAADLB}
{\bkmkend AAAAAAADLB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that uses the actionlib::ActionServer interface that moves the robot base to a goal location. }}\par
{
{\f2 #include <move_base.h>}}\par
move_base::MoveBase \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MoveBase} (tf2_ros::Buffer &tf)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the actions }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~MoveBase} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor - Cleans up }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b executeCycle} (geometry_msgs::PoseStamped &{\b goal})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a control cycle }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clearCostmapsService} (std_srvs::Empty::Request &req, std_srvs::Empty::Response &resp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A service call that clears the costmaps of obstacles }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b planService} (nav_msgs::GetPlan::Request &req, nav_msgs::GetPlan::Response &resp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A service call that can be made when the action is inactive that will return a plan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make a new global plan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b loadRecoveryBehaviors} (ros::NodeHandle node)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load the recovery behaviors for the navigation stack from the parameter server }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadDefaultRecoveryBehaviors} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loads the default recovery behaviors for the navigation stack }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearCostmapWindows} (double size_x, double size_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears obstacles within a window around the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishZeroVelocity} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publishes a velocity command of zero to the base }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetState} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the state of the {\b move_base} action and send a zero velocity command to the base }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b goalCB} (const geometry_msgs::PoseStamped::ConstPtr &{\b goal})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b planThread} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b executeCb} (const move_base_msgs::MoveBaseGoalConstPtr &move_base_goal)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isQuaternionValid} (const geometry_msgs::Quaternion &q)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getRobotPose} (geometry_msgs::PoseStamped &global_pose, {\b costmap_2d::Costmap2DROS} *costmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distance} (const geometry_msgs::PoseStamped &p1, const geometry_msgs::PoseStamped &p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b goalToGlobalFrame} (const geometry_msgs::PoseStamped &goal_pose_msg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b wakePlanner} (const ros::TimerEvent &event)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to wake the planner at periodic intervals. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (move_base::MoveBaseConfig &config, uint32_t level)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer & {\b tf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MoveBaseActionServer} * {\b as_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< {\b nav_core::BaseLocalPlanner} > {\b tc_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b planner_costmap_ros_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b controller_costmap_ros_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< {\b nav_core::BaseGlobalPlanner} > {\b planner_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b robot_base_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< {\b nav_core::RecoveryBehavior} > > {\b recovery_behaviors_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::string > {\b recovery_behavior_names_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b recovery_index_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b global_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b planner_frequency_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b controller_frequency_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b inscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b circumscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b planner_patience_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b controller_patience_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b max_planning_retries_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b planning_retries_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b conservative_reset_dist_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b clearing_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b current_goal_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b vel_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b action_goal_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b recovery_status_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b goal_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b make_plan_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b clear_costmaps_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b shutdown_costmaps_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b clearing_rotation_allowed_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b recovery_behavior_enabled_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b make_plan_clear_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b make_plan_add_unreachable_goal_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b oscillation_timeout_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b oscillation_distance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MoveBaseState} {\b state_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RecoveryTrigger} {\b recovery_trigger_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_valid_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_valid_control_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_oscillation_reset_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b oscillation_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pluginlib::ClassLoader< {\b nav_core::BaseGlobalPlanner} > {\b bgp_loader_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pluginlib::ClassLoader< {\b nav_core::BaseLocalPlanner} > {\b blp_loader_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
pluginlib::ClassLoader< {\b nav_core::RecoveryBehavior} > {\b recovery_loader_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > * {\b planner_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > * {\b latest_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > * {\b controller_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b runPlanner_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex {\b planner_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::condition_variable_any {\b planner_cond_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b planner_goal_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::thread * {\b planner_thread_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex {\b configuration_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< move_base::MoveBaseConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
move_base::MoveBaseConfig {\b last_config_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
move_base::MoveBaseConfig {\b default_config_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setup_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b p_freq_change_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b c_freq_change_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b new_global_plan_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that uses the actionlib::ActionServer interface that moves the robot base to a goal location. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MoveBase\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:MoveBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
move_base::MoveBase::MoveBase (tf2_ros::Buffer &  {\i tf})}}
\par
{\bkmkstart AAAAAAADLC}
{\bkmkend AAAAAAADLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the actions }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{The name of the action \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{A reference to a TransformListener \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a1132ccb47b3c514d52be347805eb31f5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~MoveBase\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:~MoveBase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
move_base::MoveBase::~MoveBase (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADLD}
{\bkmkend AAAAAAADLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor - Cleans up }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearCostmapsService\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:clearCostmapsService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::clearCostmapsService (std_srvs::Empty::Request &  {\i req}, std_srvs::Empty::Response &  {\i resp}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLE}
{\bkmkend AAAAAAADLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A service call that clears the costmaps of obstacles }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i req} \cell }{The service request \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i resp} \cell }{The service response \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the service call succeeds, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_aa38fbbcfa91d3ee562fedd16a43bd098_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_aa38fbbcfa91d3ee562fedd16a43bd098_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearCostmapWindows\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:clearCostmapWindows}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::clearCostmapWindows (double  {\i size_x}, double  {\i size_y}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLF}
{\bkmkend AAAAAAADLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clears obstacles within a window around the robot }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The x size of the window \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The y size of the window \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ac3ec5faa6a11697af52c061fd90907d2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ac3ec5faa6a11697af52c061fd90907d2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v distance\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::distance (const geometry_msgs::PoseStamped &  {\i p1}, const geometry_msgs::PoseStamped &  {\i p2}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLG}
{\bkmkend AAAAAAADLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_af6108fe562dce4cadb9dc15f9ef377c9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v executeCb\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:executeCb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::executeCb (const move_base_msgs::MoveBaseGoalConstPtr &  {\i move_base_goal}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLH}
{\bkmkend AAAAAAADLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a02ac84b1ead88c0b9b0f361475c90401_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a02ac84b1ead88c0b9b0f361475c90401_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v executeCycle\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:executeCycle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::executeCycle (geometry_msgs::PoseStamped &  {\i goal})}}
\par
{\bkmkstart AAAAAAADLI}
{\bkmkend AAAAAAADLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Performs a control cycle }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{A reference to the goal to pursue \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if processing of the goal is done, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a4cde906bc7b501d5918f8482da5fbabe_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a4cde906bc7b501d5918f8482da5fbabe_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getRobotPose\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:getRobotPose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::getRobotPose (geometry_msgs::PoseStamped &  {\i global_pose}, {\b costmap_2d::Costmap2DROS} *  {\i costmap}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLJ}
{\bkmkend AAAAAAADLJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ab267e8cd4697812fde4df300cb5902ac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ab267e8cd4697812fde4df300cb5902ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v goalCB\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:goalCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::goalCB (const geometry_msgs::PoseStamped::ConstPtr &  {\i goal}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLK}
{\bkmkend AAAAAAADLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a6225709ac09918840a6ca78518617fb7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v goalToGlobalFrame\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:goalToGlobalFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped move_base::MoveBase::goalToGlobalFrame (const geometry_msgs::PoseStamped &  {\i goal_pose_msg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLL}
{\bkmkend AAAAAAADLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ae2511210a27b06b9a515df783c074534_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ae2511210a27b06b9a515df783c074534_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isQuaternionValid\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:isQuaternionValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::isQuaternionValid (const geometry_msgs::Quaternion &  {\i q}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLM}
{\bkmkend AAAAAAADLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a02e6417a642608d82f6d95f8eda0b72d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadDefaultRecoveryBehaviors\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:loadDefaultRecoveryBehaviors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::loadDefaultRecoveryBehaviors (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLN}
{\bkmkend AAAAAAADLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Loads the default recovery behaviors for the navigation stack }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a559a81b839c06c7e69c00fe4a93cb213_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadRecoveryBehaviors\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:loadRecoveryBehaviors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::loadRecoveryBehaviors (ros::NodeHandle  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLO}
{\bkmkend AAAAAAADLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load the recovery behaviors for the navigation stack from the parameter server }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i node} \cell }{The ros::NodeHandle to be used for loading parameters \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the recovery behaviors were loaded successfully, false otherwise \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_aa2ae63f18e3bbfb4465b1587d3a84a6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::makePlan (const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLP}
{\bkmkend AAAAAAADLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make a new global plan }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{The goal to plan to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{Will be filled in with the plan made by the planner \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if planning succeeds, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_af48f0d98ba773f9799e0a970bf092089_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_af48f0d98ba773f9799e0a970bf092089_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v planService\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::planService (nav_msgs::GetPlan::Request &  {\i req}, nav_msgs::GetPlan::Response &  {\i resp}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLQ}
{\bkmkend AAAAAAADLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A service call that can be made when the action is inactive that will return a plan }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i req} \cell }{The goal request \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i resp} \cell }{The plan request \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if planning succeeded, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a02b97ca12b73c0caf06aaafde2c930e7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a02b97ca12b73c0caf06aaafde2c930e7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v planThread\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::planThread (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLR}
{\bkmkend AAAAAAADLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a12b28ebdf00058e1ffc8b29ec92c320a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a12b28ebdf00058e1ffc8b29ec92c320a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishZeroVelocity\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:publishZeroVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::publishZeroVelocity (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLS}
{\bkmkend AAAAAAADLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publishes a velocity command of zero to the base }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_af31a9045b36350e06310c46eb138fc4a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::reconfigureCB (move_base::MoveBaseConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLT}
{\bkmkend AAAAAAADLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ab67ea64882589c75055cc07bf4bd9aa1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_ab67ea64882589c75055cc07bf4bd9aa1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetState\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:resetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::resetState (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLU}
{\bkmkend AAAAAAADLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the state of the {\b move_base} action and send a zero velocity command to the base }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a874fe3d747671d75dfafd26d7b36068d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a874fe3d747671d75dfafd26d7b36068d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v wakePlanner\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:wakePlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_base::MoveBase::wakePlanner (const ros::TimerEvent &  {\i event}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLV}
{\bkmkend AAAAAAADLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is used to wake the planner at periodic intervals. }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__base_1_1_move_base_a8bdc13ba83e1281fba732980c7d5f225_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v action_goal_pub_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:action_goal_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher move_base::MoveBase::action_goal_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLW}
{\bkmkend AAAAAAADLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v as_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:as_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MoveBaseActionServer}* move_base::MoveBase::as_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLX}
{\bkmkend AAAAAAADLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bgp_loader_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:bgp_loader_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pluginlib::ClassLoader<{\b nav_core::BaseGlobalPlanner}> move_base::MoveBase::bgp_loader_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLY}
{\bkmkend AAAAAAADLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v blp_loader_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:blp_loader_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pluginlib::ClassLoader<{\b nav_core::BaseLocalPlanner}> move_base::MoveBase::blp_loader_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADLZ}
{\bkmkend AAAAAAADLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v c_freq_change_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:c_freq_change_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::c_freq_change_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMA}
{\bkmkend AAAAAAADMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v circumscribed_radius_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:circumscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::circumscribed_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMB}
{\bkmkend AAAAAAADMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clear_costmaps_srv_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:clear_costmaps_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer move_base::MoveBase::clear_costmaps_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMC}
{\bkmkend AAAAAAADMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearing_radius_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:clearing_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::clearing_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMD}
{\bkmkend AAAAAAADMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearing_rotation_allowed_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:clearing_rotation_allowed_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::clearing_rotation_allowed_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADME}
{\bkmkend AAAAAAADME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v configuration_mutex_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:configuration_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex move_base::MoveBase::configuration_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMF}
{\bkmkend AAAAAAADMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v conservative_reset_dist_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:conservative_reset_dist_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::conservative_reset_dist_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMG}
{\bkmkend AAAAAAADMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v controller_costmap_ros_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:controller_costmap_ros_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS} * move_base::MoveBase::controller_costmap_ros_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMH}
{\bkmkend AAAAAAADMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v controller_frequency_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:controller_frequency_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::controller_frequency_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMI}
{\bkmkend AAAAAAADMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v controller_patience_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:controller_patience_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::controller_patience_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMJ}
{\bkmkend AAAAAAADMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v controller_plan_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:controller_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped>* move_base::MoveBase::controller_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMK}
{\bkmkend AAAAAAADMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v current_goal_pub_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:current_goal_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher move_base::MoveBase::current_goal_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADML}
{\bkmkend AAAAAAADML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_config_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:default_config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
move_base::MoveBaseConfig move_base::MoveBase::default_config_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMM}
{\bkmkend AAAAAAADMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<move_base::MoveBaseConfig>* move_base::MoveBase::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMN}
{\bkmkend AAAAAAADMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string move_base::MoveBase::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMO}
{\bkmkend AAAAAAADMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_pose_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:global_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped move_base::MoveBase::global_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMP}
{\bkmkend AAAAAAADMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_sub_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:goal_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber move_base::MoveBase::goal_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMQ}
{\bkmkend AAAAAAADMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inscribed_radius_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:inscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::inscribed_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMR}
{\bkmkend AAAAAAADMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_config_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:last_config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
move_base::MoveBaseConfig move_base::MoveBase::last_config_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMS}
{\bkmkend AAAAAAADMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_oscillation_reset_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:last_oscillation_reset_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time move_base::MoveBase::last_oscillation_reset_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMT}
{\bkmkend AAAAAAADMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_valid_control_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:last_valid_control_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time move_base::MoveBase::last_valid_control_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMU}
{\bkmkend AAAAAAADMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_valid_plan_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:last_valid_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time move_base::MoveBase::last_valid_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMV}
{\bkmkend AAAAAAADMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v latest_plan_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:latest_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped>* move_base::MoveBase::latest_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMW}
{\bkmkend AAAAAAADMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_add_unreachable_goal_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:make_plan_add_unreachable_goal_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::make_plan_add_unreachable_goal_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMX}
{\bkmkend AAAAAAADMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_clear_costmap_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:make_plan_clear_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::make_plan_clear_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMY}
{\bkmkend AAAAAAADMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_srv_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:make_plan_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer move_base::MoveBase::make_plan_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADMZ}
{\bkmkend AAAAAAADMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_planning_retries_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:max_planning_retries_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t move_base::MoveBase::max_planning_retries_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNA}
{\bkmkend AAAAAAADNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v new_global_plan_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:new_global_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::new_global_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNB}
{\bkmkend AAAAAAADNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oscillation_distance_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:oscillation_distance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::oscillation_distance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNC}
{\bkmkend AAAAAAADNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oscillation_pose_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:oscillation_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped move_base::MoveBase::oscillation_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADND}
{\bkmkend AAAAAAADND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oscillation_timeout_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:oscillation_timeout_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::oscillation_timeout_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNE}
{\bkmkend AAAAAAADNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p_freq_change_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:p_freq_change_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::p_freq_change_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNF}
{\bkmkend AAAAAAADNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<{\b nav_core::BaseGlobalPlanner}> move_base::MoveBase::planner_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNG}
{\bkmkend AAAAAAADNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_cond_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_cond_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::condition_variable_any move_base::MoveBase::planner_cond_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNH}
{\bkmkend AAAAAAADNH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_costmap_ros_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_costmap_ros_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* move_base::MoveBase::planner_costmap_ros_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNI}
{\bkmkend AAAAAAADNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_frequency_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_frequency_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::planner_frequency_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNJ}
{\bkmkend AAAAAAADNJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_goal_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_goal_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped move_base::MoveBase::planner_goal_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNK}
{\bkmkend AAAAAAADNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_mutex_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex move_base::MoveBase::planner_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNL}
{\bkmkend AAAAAAADNL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_patience_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_patience_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_base::MoveBase::planner_patience_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNM}
{\bkmkend AAAAAAADNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_plan_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped>* move_base::MoveBase::planner_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNN}
{\bkmkend AAAAAAADNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_thread_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planner_thread_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::thread* move_base::MoveBase::planner_thread_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNO}
{\bkmkend AAAAAAADNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planning_retries_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:planning_retries_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t move_base::MoveBase::planning_retries_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNP}
{\bkmkend AAAAAAADNP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_behavior_enabled_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_behavior_enabled_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::recovery_behavior_enabled_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNQ}
{\bkmkend AAAAAAADNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_behavior_names_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_behavior_names_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<std::string> move_base::MoveBase::recovery_behavior_names_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNR}
{\bkmkend AAAAAAADNR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_behaviors_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_behaviors_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<{\b nav_core::RecoveryBehavior}> > move_base::MoveBase::recovery_behaviors_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNS}
{\bkmkend AAAAAAADNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_index_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_index_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int move_base::MoveBase::recovery_index_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNT}
{\bkmkend AAAAAAADNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_loader_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_loader_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
pluginlib::ClassLoader<{\b nav_core::RecoveryBehavior}> move_base::MoveBase::recovery_loader_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNU}
{\bkmkend AAAAAAADNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_status_pub_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_status_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher move_base::MoveBase::recovery_status_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNV}
{\bkmkend AAAAAAADNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v recovery_trigger_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:recovery_trigger_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b RecoveryTrigger} move_base::MoveBase::recovery_trigger_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNW}
{\bkmkend AAAAAAADNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v robot_base_frame_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:robot_base_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string move_base::MoveBase::robot_base_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNX}
{\bkmkend AAAAAAADNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v runPlanner_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:runPlanner_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::runPlanner_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNY}
{\bkmkend AAAAAAADNY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setup_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:setup_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::setup_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADNZ}
{\bkmkend AAAAAAADNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shutdown_costmaps_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:shutdown_costmaps_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_base::MoveBase::shutdown_costmaps_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOA}
{\bkmkend AAAAAAADOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:state_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MoveBaseState} move_base::MoveBase::state_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOB}
{\bkmkend AAAAAAADOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tc_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:tc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<{\b nav_core::BaseLocalPlanner}> move_base::MoveBase::tc_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOC}
{\bkmkend AAAAAAADOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer& move_base::MoveBase::tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOD}
{\bkmkend AAAAAAADOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vel_pub_\:move_base::MoveBase}
{\xe \v move_base::MoveBase\:vel_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher move_base::MoveBase::vel_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOE}
{\bkmkend AAAAAAADOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
move_base/include/move_base/{\b move_base.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
move_base/src/{\b move_base.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_slow_and_clear::MoveSlowAndClear\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear}
{\bkmkstart AAAAAAADOG}
{\bkmkend AAAAAAADOG}
\par
{
{\f2 #include <move_slow_and_clear.h>}}\par
\'C0\'E0 move_slow_and_clear::MoveSlowAndClear \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
move_slow_and_clear::MoveSlowAndClear \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MoveSlowAndClear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MoveSlowAndClear} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string {\b n}, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *global_costmap, {\b costmap_2d::Costmap2DROS} *local_costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the parameters of the behavior }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b runBehavior} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run the behavior }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRobotSpeed} (double trans_speed, double rot_speed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b distanceCheck} (const ros::TimerEvent &e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getSqDistance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removeSpeedLimit} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b private_nh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::NodeHandle {\b planner_nh_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b global_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b local_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b clearing_distance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b limited_distance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b limited_trans_speed_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b limited_rot_speed_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b old_trans_speed_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b old_rot_speed_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b max_trans_param_name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b max_rot_param_name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Timer {\b distance_check_timer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::PoseStamped {\b speed_limit_pose_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::thread * {\b remove_limit_thread_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b limit_set_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceClient {\b planner_dynamic_reconfigure_service_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MoveSlowAndClear\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:MoveSlowAndClear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
move_slow_and_clear::MoveSlowAndClear::MoveSlowAndClear ()}}
\par
{\bkmkstart AAAAAAADOH}
{\bkmkend AAAAAAADOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~MoveSlowAndClear\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:~MoveSlowAndClear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
move_slow_and_clear::MoveSlowAndClear::~MoveSlowAndClear ()}}
\par
{\bkmkstart AAAAAAADOI}
{\bkmkend AAAAAAADOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v distanceCheck\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:distanceCheck}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_slow_and_clear::MoveSlowAndClear::distanceCheck (const ros::TimerEvent &  {\i e}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOJ}
{\bkmkend AAAAAAADOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_a35a4c0d845dd8b4d0c85a57f3d2d5b1e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_a35a4c0d845dd8b4d0c85a57f3d2d5b1e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSqDistance\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:getSqDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::getSqDistance (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOK}
{\bkmkend AAAAAAADOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_a2fe9f869a53b89056d292ce47833a68c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_a2fe9f869a53b89056d292ce47833a68c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_slow_and_clear::MoveSlowAndClear::initialize (std::string  {\i n}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i global_costmap}, {\b costmap_2d::Costmap2DROS} *  {\i local_costmap}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADOL}
{\bkmkend AAAAAAADOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize the parameters of the behavior }}\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::RecoveryBehavior} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v removeSpeedLimit\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:removeSpeedLimit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_slow_and_clear::MoveSlowAndClear::removeSpeedLimit (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOM}
{\bkmkend AAAAAAADOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_ae41f9c43f9e585844b732da55de298f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_ae41f9c43f9e585844b732da55de298f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v runBehavior\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:runBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_slow_and_clear::MoveSlowAndClear::runBehavior (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADON}
{\bkmkend AAAAAAADON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run the behavior }}\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::RecoveryBehavior} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_abf32e06b525c141d8b7afcac857c241a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setRobotSpeed\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:setRobotSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void move_slow_and_clear::MoveSlowAndClear::setRobotSpeed (double  {\i trans_speed}, double  {\i rot_speed}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOO}
{\bkmkend AAAAAAADOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classmove__slow__and__clear_1_1_move_slow_and_clear_a04fa319b6f46d429937aa1e00a1b3dba_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearing_distance_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:clearing_distance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::clearing_distance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOP}
{\bkmkend AAAAAAADOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v distance_check_timer_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:distance_check_timer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Timer move_slow_and_clear::MoveSlowAndClear::distance_check_timer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOQ}
{\bkmkend AAAAAAADOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_costmap_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:global_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* move_slow_and_clear::MoveSlowAndClear::global_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOR}
{\bkmkend AAAAAAADOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_slow_and_clear::MoveSlowAndClear::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOS}
{\bkmkend AAAAAAADOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limit_set_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:limit_set_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool move_slow_and_clear::MoveSlowAndClear::limit_set_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOT}
{\bkmkend AAAAAAADOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limited_distance_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:limited_distance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::limited_distance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOU}
{\bkmkend AAAAAAADOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limited_rot_speed_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:limited_rot_speed_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::limited_rot_speed_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOV}
{\bkmkend AAAAAAADOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limited_trans_speed_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:limited_trans_speed_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::limited_trans_speed_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOW}
{\bkmkend AAAAAAADOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v local_costmap_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:local_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* move_slow_and_clear::MoveSlowAndClear::local_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOX}
{\bkmkend AAAAAAADOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_rot_param_name_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:max_rot_param_name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string move_slow_and_clear::MoveSlowAndClear::max_rot_param_name_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOY}
{\bkmkend AAAAAAADOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_trans_param_name_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:max_trans_param_name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string move_slow_and_clear::MoveSlowAndClear::max_trans_param_name_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADOZ}
{\bkmkend AAAAAAADOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mutex_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex move_slow_and_clear::MoveSlowAndClear::mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPA}
{\bkmkend AAAAAAADPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v old_rot_speed_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:old_rot_speed_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::old_rot_speed_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPB}
{\bkmkend AAAAAAADPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v old_trans_speed_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:old_trans_speed_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double move_slow_and_clear::MoveSlowAndClear::old_trans_speed_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPC}
{\bkmkend AAAAAAADPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_dynamic_reconfigure_service_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:planner_dynamic_reconfigure_service_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceClient move_slow_and_clear::MoveSlowAndClear::planner_dynamic_reconfigure_service_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPD}
{\bkmkend AAAAAAADPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_nh_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:planner_nh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle move_slow_and_clear::MoveSlowAndClear::planner_nh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPE}
{\bkmkend AAAAAAADPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v private_nh_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:private_nh_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::NodeHandle move_slow_and_clear::MoveSlowAndClear::private_nh_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPF}
{\bkmkend AAAAAAADPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v remove_limit_thread_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:remove_limit_thread_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::thread* move_slow_and_clear::MoveSlowAndClear::remove_limit_thread_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPG}
{\bkmkend AAAAAAADPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v speed_limit_pose_\:move_slow_and_clear::MoveSlowAndClear}
{\xe \v move_slow_and_clear::MoveSlowAndClear\:speed_limit_pose_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::PoseStamped move_slow_and_clear::MoveSlowAndClear::speed_limit_pose_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADPH}
{\bkmkend AAAAAAADPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
move_slow_and_clear/include/move_slow_and_clear/{\b move_slow_and_clear.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
move_slow_and_clear/src/{\b move_slow_and_clear.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn::NavFn\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn::NavFn}
{\xe \v navfn::NavFn}
{\bkmkstart AAAAAAADQB}
{\bkmkend AAAAAAADQB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navigation function class. Holds buffers for costmap, navfn map.\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'BA\'CDNavFn\'B5\'D8\'CD\'BC\'CA\'C7\'BB\'F9\'D3\'DA\'CF\'F1\'CB\'D8\'B5\'C4\'A3\'AC\'CB\'FB\'C3\'C7\'B5\'C4\'D4\'AD\'B5\'E3\'D4\'DA\'D7\'F3\'C9\'CF\'B7\'BD\'A3\'ACx \'D6\'E1\'CF\'F2\'D3\'D2\'A3\'ACy \'D6\'E1\'CF\'F2\'CF\'C2 }}\par
{
{\f2 #include <navfn.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavFn} (int {\b nx}, int {\b ny})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NavFn} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNavArr} (int {\b nx}, int {\b ny})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCostmap} (const {\b COSTTYPE} *cmap, bool isROS=true, bool allow_unknown=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up the cost array for the planner, usually from ROS }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b calcNavFnAstar} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates a plan using the A* heuristic, returns true if one is found }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b calcNavFnDijkstra} (bool atStart=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Caclulates the full navigation function using Dijkstra }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b getPathX} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x-coordinates of a path }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b getPathY} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y-coordinates of a path }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getPathLen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the length of a path }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b getLastPathCost} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the cost of the path found the last time a navigation function was computed }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGoal} (int *{\b goal})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the goal position for the planner. Note: the navigation cost field computed gives the cost to get to a given point from the goal, not from the start. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStart} (int *{\b start})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the start position for the planner. Note: the navigation cost field computed gives the cost to get to a given point from the goal, not from the start. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initCost} (int k, float v)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize cell k with cost v for propagation }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateCell} (int {\b n})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the cell at index n }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateCellAstar} (int {\b n})\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the cell at index n using the A* heuristic }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupNavFn} (bool keepit=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b propNavFnDijkstra} (int cycles, bool atStart=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run propagation for <cycles> iterations, or until start is reached using breadth-first Dijkstra method }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b propNavFnAstar} (int cycles)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run propagation for <cycles> iterations, or until start is reached using the best-first A* method with Euclidean distance heuristic }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b calcPath} (int {\b n}, int *st=NULL)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the path for at mose <n> cycles }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b gradCell} (int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b display} (void fn({\b NavFn} *nav), int {\b n}=100)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b savemap} (const char *fname)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ny}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ns}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COSTTYPE} * {\b costarr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b potarr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool * {\b pending}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nobs}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b pb1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b pb2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b pb3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b curP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b nextP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b overP}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b curPe}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nextPe}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b overPe}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b curT}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b priInc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b goal} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b start} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b gradx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b grady}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b pathx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float * {\b pathy}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b npath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b npathbuf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b last_path_cost_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b pathStep}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b displayInt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void(* {\b displayFn} )({\b NavFn} *nav)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navigation function class. Holds buffers for costmap, navfn map.\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'BA\'CDNavFn\'B5\'D8\'CD\'BC\'CA\'C7\'BB\'F9\'D3\'DA\'CF\'F1\'CB\'D8\'B5\'C4\'A3\'AC\'CB\'FB\'C3\'C7\'B5\'C4\'D4\'AD\'B5\'E3\'D4\'DA\'D7\'F3\'C9\'CF\'B7\'BD\'A3\'ACx \'D6\'E1\'CF\'F2\'D3\'D2\'A3\'ACy \'D6\'E1\'CF\'F2\'CF\'C2 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v NavFn\:navfn::NavFn}
{\xe \v navfn::NavFn\:NavFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavFn::NavFn (int  {\i nx}, int  {\i ny})}}
\par
{\bkmkstart AAAAAAADQC}
{\bkmkend AAAAAAADQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nx} \cell }{\'B5\'D8\'CD\'BCx\'D6\'E1\'B7\'BD\'CF\'F2\'B5\'C4\'B4\'F3\'D0\'A1 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ny} \cell }{\'B5\'D8\'CD\'BCy\'D6\'E1\'B7\'BD\'CF\'F2\'B5\'C4\'B4\'F3\'D0\'A1 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_aeed7d6c6f59caf8935ed76bb39a80379_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~NavFn\:navfn::NavFn}
{\xe \v navfn::NavFn\:~NavFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavFn::~NavFn ()}}
\par
{\bkmkstart AAAAAAADQD}
{\bkmkend AAAAAAADQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v calcNavFnAstar\:navfn::NavFn}
{\xe \v navfn::NavFn\:calcNavFnAstar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavFn::calcNavFnAstar ()}}
\par
{\bkmkstart AAAAAAADQE}
{\bkmkend AAAAAAADQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates a plan using the A* heuristic, returns true if one is found }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if a plan is found, false otherwise calculates a plan, returns true if found \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a20f2459aef927442363148b8403ad199_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calcNavFnDijkstra\:navfn::NavFn}
{\xe \v navfn::NavFn\:calcNavFnDijkstra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavFn::calcNavFnDijkstra (bool  {\i atStart} = {\f2 false})}}
\par
{\bkmkstart AAAAAAADQF}
{\bkmkend AAAAAAADQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Caclulates the full navigation function using Dijkstra }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculates the full navigation function \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a3516a575e782e45168ee810a983befa3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a3516a575e782e45168ee810a983befa3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calcPath\:navfn::NavFn}
{\xe \v navfn::NavFn\:calcPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::calcPath (int  {\i n}, int *  {\i st} = {\f2 NULL})}}
\par
{\bkmkstart AAAAAAADQG}
{\bkmkend AAAAAAADQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculates the path for at mose <n> cycles }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i n} \cell }{The maximum number of cycles to run for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The length of the path found calculates path for at most <n> cycles, returns path length, 0 if none \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a672ab629393be0eb4b91696cb1b6c01a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a672ab629393be0eb4b91696cb1b6c01a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v display\:navfn::NavFn}
{\xe \v navfn::NavFn\:display}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::display (void   {\i fn}NavFn *nav, int  {\i n} = {\f2 100})}}
\par
{\bkmkstart AAAAAAADQH}
{\bkmkend AAAAAAADQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
display callback <n> is the number of cycles between updates \par
 \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_ab42572b5439ae4510a1a261d704082f0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLastPathCost\:navfn::NavFn}
{\xe \v navfn::NavFn\:getLastPathCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavFn::getLastPathCost ()}}
\par
{\bkmkstart AAAAAAADQI}
{\bkmkend AAAAAAADQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets the cost of the path found the last time a navigation function was computed }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The cost of the last path found Return cost of path found the last time A* was called \par
}}}}
{\xe \v getPathLen\:navfn::NavFn}
{\xe \v navfn::NavFn\:getPathLen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::getPathLen ()}}
\par
{\bkmkstart AAAAAAADQJ}
{\bkmkend AAAAAAADQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the length of a path }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The length of a path length of path, 0 if not found \par
}}}}
{\xe \v getPathX\:navfn::NavFn}
{\xe \v navfn::NavFn\:getPathX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * navfn::NavFn::getPathX ()}}
\par
{\bkmkstart AAAAAAADQK}
{\bkmkend AAAAAAADQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the x-coordinates of a path }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The x-coordinates of a path x-coordinates of path \par
}}}}
{\xe \v getPathY\:navfn::NavFn}
{\xe \v navfn::NavFn\:getPathY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * navfn::NavFn::getPathY ()}}
\par
{\bkmkstart AAAAAAADQL}
{\bkmkend AAAAAAADQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Accessor for the y-coordinates of a path }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The y-coordinates of a path y-coordinates of path \par
}}}}
{\xe \v gradCell\:navfn::NavFn}
{\xe \v navfn::NavFn\:gradCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavFn::gradCell (int  {\i n})}}
\par
{\bkmkstart AAAAAAADQM}
{\bkmkend AAAAAAADQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
calculates gradient at cell <n>, returns norm \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a28b709d5ffb7619f9f2083415a5c96ab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initCost\:navfn::NavFn}
{\xe \v navfn::NavFn\:initCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::initCost (int  {\i k}, float  {\i v})}}
\par
{\bkmkstart AAAAAAADQN}
{\bkmkend AAAAAAADQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Initialize cell k with cost v for propagation }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i k} \cell }{the cell to initialize \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v} \cell }{the cost to give to the cell initialize cell <k> with cost <v>, for propagation \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a18a538679f3b968ef741dd6ad76f7753_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v propNavFnAstar\:navfn::NavFn}
{\xe \v navfn::NavFn\:propNavFnAstar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavFn::propNavFnAstar (int  {\i cycles})}}
\par
{\bkmkstart AAAAAAADQO}
{\bkmkend AAAAAAADQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run propagation for <cycles> iterations, or until start is reached using the best-first A* method with Euclidean distance heuristic }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{The maximum number of iterations to run for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true if the start point is reached returns true if start point found \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a561511e57e6590da2dcfe7d5a4cf751d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a561511e57e6590da2dcfe7d5a4cf751d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v propNavFnDijkstra\:navfn::NavFn}
{\xe \v navfn::NavFn\:propNavFnDijkstra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavFn::propNavFnDijkstra (int  {\i cycles}, bool  {\i atStart} = {\f2 false})}}
\par
{\bkmkstart AAAAAAADQP}
{\bkmkend AAAAAAADQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run propagation for <cycles> iterations, or until start is reached using breadth-first Dijkstra method }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cycles} \cell }{The maximum number of iterations to run for \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i atStart} \cell }{Whether or not to stop when the start point is reached \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
true if the start point is reached returns true if start point found or full prop \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a076842de1d6d76769040f21856b7cb55_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a076842de1d6d76769040f21856b7cb55_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v savemap\:navfn::NavFn}
{\xe \v navfn::NavFn\:savemap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::savemap (const char *  {\i fname})}}
\par
{\bkmkstart AAAAAAADQQ}
{\bkmkend AAAAAAADQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
save costmap write out costmap and start/goal states as fname.pgm and fname.txt \par
}}
{\xe \v setCostmap\:navfn::NavFn}
{\xe \v navfn::NavFn\:setCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::setCostmap (const {\b COSTTYPE} *  {\i cmap}, bool  {\i isROS} = {\f2 true}, bool  {\i allow_unknown} = {\f2 true})}}
\par
{\bkmkstart AAAAAAADQR}
{\bkmkend AAAAAAADQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set up the cost array for the planner, usually from ROS }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmap} \cell }{The costmap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i isROS} \cell }{Whether or not the costmap is coming in in ROS format \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i allow_unknown} \cell }{Whether or not the planner should be allowed to plan through unknown space sets up the cost map \cell }
{\row }
}
}}
{\xe \v setGoal\:navfn::NavFn}
{\xe \v navfn::NavFn\:setGoal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::setGoal (int *  {\i goal})}}
\par
{\bkmkstart AAAAAAADQS}
{\bkmkend AAAAAAADQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the goal position for the planner. Note: the navigation cost field computed gives the cost to get to a given point from the goal, not from the start. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
goal and start positions {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{the goal position \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a11224bd6ba1392f59e2b8e053c29e19f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setNavArr\:navfn::NavFn}
{\xe \v navfn::NavFn\:setNavArr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::setNavArr (int  {\i nx}, int  {\i ny})}}
\par
{\bkmkstart AAAAAAADQT}
{\bkmkend AAAAAAADQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nx} \cell }{The x size of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ny} \cell }{The y size of the map sets or resets the size of the map \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a3b0c18b3e87f5f4350814e24b9a722fa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setStart\:navfn::NavFn}
{\xe \v navfn::NavFn\:setStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::setStart (int *  {\i start})}}
\par
{\bkmkstart AAAAAAADQU}
{\bkmkend AAAAAAADQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the start position for the planner. Note: the navigation cost field computed gives the cost to get to a given point from the goal, not from the start. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{the start position \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_aae372dff3862f5fddc7de05a8ec9729c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setupNavFn\:navfn::NavFn}
{\xe \v navfn::NavFn\:setupNavFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::setupNavFn (bool  {\i keepit} = {\f2 false})}}
\par
{\bkmkstart AAAAAAADQV}
{\bkmkend AAAAAAADQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
resets all nav fn arrays for propagation \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a233063ad5d082e7e86802c194a9a322a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a233063ad5d082e7e86802c194a9a322a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateCell\:navfn::NavFn}
{\xe \v navfn::NavFn\:updateCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::updateCell (int  {\i n}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQW}
{\bkmkend AAAAAAADQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the cell at index n }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
propagation {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i n} \cell }{The index to update updates the cell at index <n> \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a5246a7901de2865ac90b19d2434f22c1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateCellAstar\:navfn::NavFn}
{\xe \v navfn::NavFn\:updateCellAstar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavFn::updateCellAstar (int  {\i n}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADQX}
{\bkmkend AAAAAAADQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Updates the cell at index n using the A* heuristic }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i n} \cell }{The index to update updates the cell at index <n>, uses A* heuristic \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_fn_a45813052a7bd3295909b5eb4d0364e58_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costarr\:navfn::NavFn}
{\xe \v navfn::NavFn\:costarr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COSTTYPE}* navfn::NavFn::costarr}}
\par
{\bkmkstart AAAAAAADQY}
{\bkmkend AAAAAAADQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'B8\'B8\'F6\'D6\'D8\'D2\'AA\'B5\'C4\'CA\'FD\'D7\'E9 2D\'BF\'D5\'BC\'E4\'B5\'C4\'B4\'FA\'BC\'DB\'CA\'FD\'D7\'E9 \par
}}
{\xe \v curP\:navfn::NavFn}
{\xe \v navfn::NavFn\:curP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* navfn::NavFn::curP}}
\par
{\bkmkstart AAAAAAADQZ}
{\bkmkend AAAAAAADQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v curPe\:navfn::NavFn}
{\xe \v navfn::NavFn\:curPe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::curPe}}
\par
{\bkmkstart AAAAAAADRA}
{\bkmkend AAAAAAADRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v curT\:navfn::NavFn}
{\xe \v navfn::NavFn\:curT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavFn::curT}}
\par
{\bkmkstart AAAAAAADRB}
{\bkmkend AAAAAAADRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block priority thresholds \'B5\'B1\'C7\'B0\'B4\'AB\'B2\'A5\'E3\'D0\'D6\'B5 \par
}}
{\xe \v displayFn\:navfn::NavFn}
{\xe \v navfn::NavFn\:displayFn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void(* navfn::NavFn::displayFn) ({\b NavFn} *nav)}}
\par
{\bkmkstart AAAAAAADRC}
{\bkmkend AAAAAAADRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
display function itself \par
}}
{\xe \v displayInt\:navfn::NavFn}
{\xe \v navfn::NavFn\:displayInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::displayInt}}
\par
{\bkmkstart AAAAAAADRD}
{\bkmkend AAAAAAADRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
save second argument of {\b display()} above \par
}}
{\xe \v goal\:navfn::NavFn}
{\xe \v navfn::NavFn\:goal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::goal[2]}}
\par
{\bkmkstart AAAAAAADRE}
{\bkmkend AAAAAAADRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gradx\:navfn::NavFn}
{\xe \v navfn::NavFn\:gradx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* navfn::NavFn::gradx}}
\par
{\bkmkstart AAAAAAADRF}
{\bkmkend AAAAAAADRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gradient and paths \par
}}
{\xe \v grady\:navfn::NavFn}
{\xe \v navfn::NavFn\:grady}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * navfn::NavFn::grady}}
\par
{\bkmkstart AAAAAAADRG}
{\bkmkend AAAAAAADRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
gradient arrays, size of potential array \par
}}
{\xe \v last_path_cost_\:navfn::NavFn}
{\xe \v navfn::NavFn\:last_path_cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavFn::last_path_cost_}}
\par
{\bkmkstart AAAAAAADRH}
{\bkmkend AAAAAAADRH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds the cost of the path found the last time A* was called \par
}}
{\xe \v nextP\:navfn::NavFn}
{\xe \v navfn::NavFn\:nextP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * navfn::NavFn::nextP}}
\par
{\bkmkstart AAAAAAADRI}
{\bkmkend AAAAAAADRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextPe\:navfn::NavFn}
{\xe \v navfn::NavFn\:nextPe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::nextPe}}
\par
{\bkmkstart AAAAAAADRJ}
{\bkmkend AAAAAAADRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nobs\:navfn::NavFn}
{\xe \v navfn::NavFn\:nobs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::nobs}}
\par
{\bkmkstart AAAAAAADRK}
{\bkmkend AAAAAAADRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'A5\'D4\'AA\'B8\'F1\'B5\'C4\'CA\'FD\'C1\'BF \par
}}
{\xe \v npath\:navfn::NavFn}
{\xe \v navfn::NavFn\:npath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::npath}}
\par
{\bkmkstart AAAAAAADRL}
{\bkmkend AAAAAAADRL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of path points \par
}}
{\xe \v npathbuf\:navfn::NavFn}
{\xe \v navfn::NavFn\:npathbuf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::npathbuf}}
\par
{\bkmkstart AAAAAAADRM}
{\bkmkend AAAAAAADRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
size of pathx, pathy buffers \par
}}
{\xe \v ns\:navfn::NavFn}
{\xe \v navfn::NavFn\:ns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::ns}}
\par
{\bkmkstart AAAAAAADRN}
{\bkmkend AAAAAAADRN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
size of grid, in pixels \par
}}
{\xe \v nx\:navfn::NavFn}
{\xe \v navfn::NavFn\:nx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::nx}}
\par
{\bkmkstart AAAAAAADRO}
{\bkmkend AAAAAAADRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ny\:navfn::NavFn}
{\xe \v navfn::NavFn\:ny}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::ny}}
\par
{\bkmkstart AAAAAAADRP}
{\bkmkend AAAAAAADRP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v overP\:navfn::NavFn}
{\xe \v navfn::NavFn\:overP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * navfn::NavFn::overP}}
\par
{\bkmkstart AAAAAAADRQ}
{\bkmkend AAAAAAADRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
priority buffer block \'D6\'B8\'D5\'EB \par
}}
{\xe \v overPe\:navfn::NavFn}
{\xe \v navfn::NavFn\:overPe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::overPe}}
\par
{\bkmkstart AAAAAAADRR}
{\bkmkend AAAAAAADRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
curP, nextP, overP \'CA\'FD\'D7\'E9\'B5\'C4\'D7\'EE\'BA\'F3\'D2\'BB\'B8\'F6\'B5\'E3 \par
}}
{\xe \v pathStep\:navfn::NavFn}
{\xe \v navfn::NavFn\:pathStep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavFn::pathStep}}
\par
{\bkmkstart AAAAAAADRS}
{\bkmkend AAAAAAADRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
step size for following gradient \par
}}
{\xe \v pathx\:navfn::NavFn}
{\xe \v navfn::NavFn\:pathx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* navfn::NavFn::pathx}}
\par
{\bkmkstart AAAAAAADRT}
{\bkmkend AAAAAAADRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pathy\:navfn::NavFn}
{\xe \v navfn::NavFn\:pathy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float * navfn::NavFn::pathy}}
\par
{\bkmkstart AAAAAAADRU}
{\bkmkend AAAAAAADRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
path points, as subpixel cell coordinates \par
}}
{\xe \v pb1\:navfn::NavFn}
{\xe \v navfn::NavFn\:pb1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* navfn::NavFn::pb1}}
\par
{\bkmkstart AAAAAAADRV}
{\bkmkend AAAAAAADRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
block priority buffers \par
}}
{\xe \v pb2\:navfn::NavFn}
{\xe \v navfn::NavFn\:pb2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * navfn::NavFn::pb2}}
\par
{\bkmkstart AAAAAAADRW}
{\bkmkend AAAAAAADRW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pb3\:navfn::NavFn}
{\xe \v navfn::NavFn\:pb3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * navfn::NavFn::pb3}}
\par
{\bkmkstart AAAAAAADRX}
{\bkmkend AAAAAAADRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
priority blocks \'B5\'C4\'BB\'BA\'B3\'E5\'B4\'E6\'B4\'A2 \par
}}
{\xe \v pending\:navfn::NavFn}
{\xe \v navfn::NavFn\:pending}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool* navfn::NavFn::pending}}
\par
{\bkmkstart AAAAAAADRY}
{\bkmkend AAAAAAADRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'AB\'B2\'A5\'CA\'B1\'B5\'C4pending cells \par
}}
{\xe \v potarr\:navfn::NavFn}
{\xe \v navfn::NavFn\:potarr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float* navfn::NavFn::potarr}}
\par
{\bkmkstart AAAAAAADRZ}
{\bkmkend AAAAAAADRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
potential\'B5\'C4\'CA\'FD\'D7\'E9\'A3\'AC navigation function potential \par
}}
{\xe \v priInc\:navfn::NavFn}
{\xe \v navfn::NavFn\:priInc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavFn::priInc}}
\par
{\bkmkstart AAAAAAADSA}
{\bkmkend AAAAAAADSA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
priority \'E3\'D0\'D6\'B5\'D4\'F6\'C1\'BF \par
}}
{\xe \v start\:navfn::NavFn}
{\xe \v navfn::NavFn\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavFn::start[2]}}
\par
{\bkmkstart AAAAAAADSB}
{\bkmkend AAAAAAADSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/include/navfn/{\b navfn.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/src/{\b navfn.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn::NavfnROS\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn::NavfnROS}
{\xe \v navfn::NavfnROS}
{\bkmkstart AAAAAAADSC}
{\bkmkend AAAAAAADSC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navfn \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4ROS\'B7\'E2\'D7\'B0\'C0\'E0 }}\par
{
{\f2 #include <navfn_ros.h>}}\par
\'C0\'E0 navfn::NavfnROS \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
navfn::NavfnROS \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavfnROS} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NavFnROS\'B6\'D4\'CF\'F3\'B5\'C4\'C4\'AC\'C8\'CF\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavfnROS} (std::string name, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NavFnROS\'B6\'D4\'CF\'F3\'B5\'C4\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavfnROS} (std::string name, {\b costmap_2d::Costmap2D} *costmap, std::string global_frame)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'B9\'CA\'C7NavFnROS\'B6\'D4\'CF\'F3\'B5\'C4\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NavFnROS \'B6\'D4\'CF\'F3\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, {\b costmap_2d::Costmap2D} *costmap, std::string global_frame)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
avFnROS \'B6\'D4\'CF\'F3\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlan} (const geometry_msgs::PoseStamped &{\b start}, const geometry_msgs::PoseStamped &{\b goal}, double tolerance, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b computePotential} (const geometry_msgs::Point &world_point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'B5\'D8\'CD\'BC\'B5\'C4\'B5\'BC\'BA\'BD\'BA\'AF\'CA\'FD\'A3\'AC\'B4\'D3\'D2\'D1\'D6\'AA\'B5\'C4\'C6\'F0\'CA\'BC\'B5\'E3\'B5\'BD\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getPlanFromPotential} (const geometry_msgs::PoseStamped &{\b goal}, std::vector< geometry_msgs::PoseStamped > &plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B5\'B1\'C6\'F0\'CA\'BC\'B5\'E3\'B5\'C4potential\'B1\'BB\'BC\'C6\'CB\'E3\'B3\'F6\'C0\'B4\'BA\'F3\'A3\'AC\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPointPotential} (const geometry_msgs::Point &world_point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'B5\'C3 potential \'BB\'F2\'D5\'DF \'B5\'BC\'BA\'BD\'B5\'C4\'B4\'FA\'BC\'DB (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validPointPotential} (const geometry_msgs::Point &world_point)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9potential\'D6\'B5\'CA\'C7\'B7\'F1\'D3\'D0\'D0\'A7 (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b validPointPotential} (const geometry_msgs::Point &world_point, double tolerance)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9potential\'D6\'B5\'CA\'C7\'B7\'F1\'D3\'D0\'D0\'A7 (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b publishPlan} (const std::vector< geometry_msgs::PoseStamped > &path, double r, double g, double b, double a)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BF\'C9\'CA\'D3\'BB\'AF\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NavfnROS} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlanService} (nav_msgs::GetPlan::Request &req, nav_msgs::GetPlan::Response &resp)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store a copy of the current costmap in {\i costmap} . Called by makePlan. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< {\b NavFn} > {\b planner_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b plan_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b potarr_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b allow_unknown_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b visualize_potential_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sq_distance} (const geometry_msgs::PoseStamped &p1, const geometry_msgs::PoseStamped &p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapToWorld} (double mx, double my, double &wx, double &wy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearRobotCell} (const geometry_msgs::PoseStamped &global_pose, unsigned int mx, unsigned int my)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b planner_window_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b planner_window_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b default_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b make_plan_srv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navfn \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4ROS\'B7\'E2\'D7\'B0\'C0\'E0 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v NavfnROS\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:NavfnROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavfnROS::NavfnROS ()}}
\par
{\bkmkstart AAAAAAADSD}
{\bkmkend AAAAAAADSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NavFnROS\'B6\'D4\'CF\'F3\'B5\'C4\'C4\'AC\'C8\'CF\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }}\par
}
{\xe \v NavfnROS\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:NavfnROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavfnROS::NavfnROS (std::string  {\i name}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros})}}
\par
{\bkmkstart AAAAAAADSE}
{\bkmkend AAAAAAADSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NavFnROS\'B6\'D4\'CF\'F3\'B5\'C4\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a06ba0ae6bd1cac9ee89110290c5b86e6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v NavfnROS\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:NavfnROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavfnROS::NavfnROS (std::string  {\i name}, {\b costmap_2d::Costmap2D} *  {\i costmap}, std::string  {\i global_frame})}}
\par
{\bkmkstart AAAAAAADSF}
{\bkmkend AAAAAAADSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'B9\'CA\'C7NavFnROS\'B6\'D4\'CF\'F3\'B5\'C4\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_af405588d08b37d071e72d85dc33c6523_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~NavfnROS\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:~NavfnROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavfnROS::~NavfnROS (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADSG}
{\bkmkend AAAAAAADSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearRobotCell\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:clearRobotCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavfnROS::clearRobotCell (const geometry_msgs::PoseStamped &  {\i global_pose}, unsigned int  {\i mx}, unsigned int  {\i my}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSH}
{\bkmkend AAAAAAADSH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_abcd849ed9ec685971d6015e8d4056a83_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_abcd849ed9ec685971d6015e8d4056a83_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computePotential\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:computePotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::computePotential (const geometry_msgs::Point &  {\i world_point})}}
\par
{\bkmkstart AAAAAAADSI}
{\bkmkend AAAAAAADSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'B5\'D8\'CD\'BC\'B5\'C4\'B5\'BC\'BA\'BD\'BA\'AF\'CA\'FD\'A3\'AC\'B4\'D3\'D2\'D1\'D6\'AA\'B5\'C4\'C6\'F0\'CA\'BC\'B5\'E3\'B5\'BD\'C4\'BF\'B1\'EA\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{The point to use for seeding the navigation function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED navigation function \'B3\'C9\'B9\'A6\'B5\'C4\'BC\'C6\'CB\'E3\'B3\'F6\'C0\'B4 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a01635a5d9947ae1b51ce70603db0c843_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPlanFromPotential\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:getPlanFromPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::getPlanFromPotential (const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan})}}
\par
{\bkmkstart AAAAAAADSJ}
{\bkmkend AAAAAAADSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B5\'B1\'C6\'F0\'CA\'BC\'B5\'E3\'B5\'C4potential\'B1\'BB\'BC\'C6\'CB\'E3\'B3\'F6\'C0\'B4\'BA\'F3\'A3\'AC\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'B5\'E3\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'BC\'C6\'CB\'E3\'B3\'F6\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D5\'D2\'B5\'BD\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_ad645a775f99aa2a120bb0b7f6cd08fd5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_ad645a775f99aa2a120bb0b7f6cd08fd5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPointPotential\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:getPointPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double navfn::NavfnROS::getPointPotential (const geometry_msgs::Point &  {\i world_point})}}
\par
{\bkmkstart AAAAAAADSK}
{\bkmkend AAAAAAADSK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'B5\'C3 potential \'BB\'F2\'D5\'DF \'B5\'BC\'BA\'BD\'B5\'C4\'B4\'FA\'BC\'DB (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{\'B1\'BB\'BC\'EC\'B2\'E9\'B5\'C4\'B5\'E3 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'B8\'C3\'B5\'E3\'D4\'DAnavigation function\'B5\'C4\'D6\'B5 \'A3\'A8\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'A3\'A9 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a51f40b93d0f1c181f94fb7da28a476e2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a51f40b93d0f1c181f94fb7da28a476e2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavfnROS::initialize (std::string  {\i name}, {\b costmap_2d::Costmap2D} *  {\i costmap}, std::string  {\i global_frame})}}
\par
{\bkmkstart AAAAAAADSL}
{\bkmkend AAAAAAADSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
avFnROS \'B6\'D4\'CF\'F3\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a935ac2d5a76a101a3521cb078ee4ba4d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialize\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavfnROS::initialize (std::string  {\i name}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPO}
{\bkmkend AAAAAAADPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NavFnROS \'B6\'D4\'CF\'F3\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseGlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a7f1e06b4e3b390aaaa3e4733a0668c4d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a7f1e06b4e3b390aaaa3e4733a0668c4d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, double  {\i tolerance}, std::vector< geometry_msgs::PoseStamped > &  {\i plan})}}
\par
{\bkmkstart AAAAAAADSM}
{\bkmkend AAAAAAADSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{\'C6\'F0\'CA\'BC\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tolerance} \cell }{\'C4\'BF\'B1\'EA\'B5\'E3\'B5\'C4\'C8\'DD\'C8\'CC\'CE\'F3\'B2\'EE \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'BC\'C6\'CB\'E3\'B3\'F6\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D5\'D2\'B5\'BD\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a1925183250dd36115daadd91b14656aa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlan\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:makePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::makePlan (const geometry_msgs::PoseStamped &  {\i start}, const geometry_msgs::PoseStamped &  {\i goal}, std::vector< geometry_msgs::PoseStamped > &  {\i plan}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPP}
{\bkmkend AAAAAAADPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB\'BC\'C6\'CB\'E3\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i start} \cell }{\'C6\'F0\'CA\'BC\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal} \cell }{\'C4\'BF\'B1\'EA\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i plan} \cell }{\'BC\'C6\'CB\'E3\'B3\'F6\'B5\'C4\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D5\'D2\'B5\'BD\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseGlobalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACJY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_aa8cec6d49a902ace7e71ffc7125b29a9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_aa8cec6d49a902ace7e71ffc7125b29a9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v makePlanService\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:makePlanService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::makePlanService (nav_msgs::GetPlan::Request &  {\i req}, nav_msgs::GetPlan::Response &  {\i resp})}}
\par
{\bkmkstart AAAAAAADSN}
{\bkmkend AAAAAAADSN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a81643ac812bc02a5652f691c30834c27_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a81643ac812bc02a5652f691c30834c27_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapToWorld\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:mapToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavfnROS::mapToWorld (double  {\i mx}, double  {\i my}, double &  {\i wx}, double &  {\i wy}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSO}
{\bkmkend AAAAAAADSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_afa5d363d19a0451e2f0f1b4bdf9f878f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_afa5d363d19a0451e2f0f1b4bdf9f878f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publishPlan\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:publishPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavfnROS::publishPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i path}, double  {\i r}, double  {\i g}, double  {\i b}, double  {\i a})}}
\par
{\bkmkstart AAAAAAADSP}
{\bkmkend AAAAAAADSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BF\'C9\'CA\'D3\'BB\'AF\'C2\'B7\'BE\'B6 }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a05b4ca9b40c385791f4cb7be8237e4bb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sq_distance\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:sq_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double navfn::NavfnROS::sq_distance (const geometry_msgs::PoseStamped &  {\i p1}, const geometry_msgs::PoseStamped &  {\i p2}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSQ}
{\bkmkend AAAAAAADSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a51ca146d8780724b2349f08c10b771b0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validPointPotential\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:validPointPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::validPointPotential (const geometry_msgs::Point &  {\i world_point})}}
\par
{\bkmkstart AAAAAAADSR}
{\bkmkend AAAAAAADSR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9potential\'D6\'B5\'CA\'C7\'B7\'F1\'D3\'D0\'D0\'A7 (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{\'B1\'BB\'BC\'EC\'B2\'E9\'B5\'C4\'B5\'E3 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED navigation function \'D4\'DA\'B8\'C3\'B5\'E3\'CA\'C7\'D3\'D0\'D0\'A7\'B5\'C4 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_ad2b915897586064db5c861658133e909_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_ad2b915897586064db5c861658133e909_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validPointPotential\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:validPointPotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::validPointPotential (const geometry_msgs::Point &  {\i world_point}, double  {\i tolerance})}}
\par
{\bkmkstart AAAAAAADSS}
{\bkmkend AAAAAAADSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9potential\'D6\'B5\'CA\'C7\'B7\'F1\'D3\'D0\'D0\'A7 (\'D7\'A2\'D2\'E2: \'D2\'AA\'CF\'C8\'B5\'F7\'D3\'C3 computePotential) }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_point} \cell }{\'B1\'BB\'BC\'EC\'B2\'E9\'B5\'C4\'B5\'E3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tolerance} \cell }{\'D4\'DAworld_point\'B8\'BD\'BD\'FC\'CB\'D1\'CB\'F7\'B5\'C4\'C8\'DD\'C8\'CC\'CE\'F3\'B2\'EE \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED navigation function \'D4\'DA\'B8\'C3\'B5\'E3\'CA\'C7\'D3\'D0\'D0\'A7\'B5\'C4 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_r_o_s_a2df71f9e257d604ba8cf630848eb3529_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v allow_unknown_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:allow_unknown_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::allow_unknown_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADST}
{\bkmkend AAAAAAADST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* navfn::NavfnROS::costmap_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADSU}
{\bkmkend AAAAAAADSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store a copy of the current costmap in {\i costmap} . Called by makePlan. }}\par
}
{\xe \v default_tolerance_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:default_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double navfn::NavfnROS::default_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSV}
{\bkmkend AAAAAAADSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string navfn::NavfnROS::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSW}
{\bkmkend AAAAAAADSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::initialized_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADSX}
{\bkmkend AAAAAAADSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_srv_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:make_plan_srv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer navfn::NavfnROS::make_plan_srv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSY}
{\bkmkend AAAAAAADSY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mutex_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex navfn::NavfnROS::mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADSZ}
{\bkmkend AAAAAAADSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plan_pub_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:plan_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher navfn::NavfnROS::plan_pub_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTA}
{\bkmkend AAAAAAADTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:planner_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<{\b NavFn}> navfn::NavfnROS::planner_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTB}
{\bkmkend AAAAAAADTB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_window_x_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:planner_window_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double navfn::NavfnROS::planner_window_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTC}
{\bkmkend AAAAAAADTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v planner_window_y_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:planner_window_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double navfn::NavfnROS::planner_window_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTD}
{\bkmkend AAAAAAADTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v potarr_pub_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:potarr_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher navfn::NavfnROS::potarr_pub_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTE}
{\bkmkend AAAAAAADTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visualize_potential_\:navfn::NavfnROS}
{\xe \v navfn::NavfnROS\:visualize_potential_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnROS::visualize_potential_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADTF}
{\bkmkend AAAAAAADTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/include/navfn/{\b navfn_ros.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/src/{\b navfn_ros.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn::NavfnWithCostmap\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap}
{\bkmkstart AAAAAAADTG}
{\bkmkend AAAAAAADTG}
\'C0\'E0 navfn::NavfnWithCostmap \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
navfn::NavfnWithCostmap \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavfnWithCostmap} (string name, {\b Costmap2DROS} *cmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlanService} (MakeNavPlan::Request &req, MakeNavPlan::Response &resp)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b poseCallback} (const rm::PoseStamped::ConstPtr &{\b goal})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2DROS} * {\b cmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b make_plan_service_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b pose_sub_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v NavfnWithCostmap\:navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap\:NavfnWithCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavfnWithCostmap::NavfnWithCostmap (string  {\i name}, {\b Costmap2DROS} *  {\i cmap})}}
\par
{\bkmkstart AAAAAAADTH}
{\bkmkend AAAAAAADTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap_aba48f2e70ebe9c84bd9b3de9ce1c3e33_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v makePlanService\:navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap\:makePlanService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool navfn::NavfnWithCostmap::makePlanService (MakeNavPlan::Request &  {\i req}, MakeNavPlan::Response &  {\i resp})}}
\par
{\bkmkstart AAAAAAADTI}
{\bkmkend AAAAAAADTI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap_aa8e245ce4b1e4d9a6d4616107f993d6f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap_aa8e245ce4b1e4d9a6d4616107f993d6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v poseCallback\:navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap\:poseCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavfnWithCostmap::poseCallback (const rm::PoseStamped::ConstPtr &  {\i goal}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTJ}
{\bkmkend AAAAAAADTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap_a793a74f16803f58b9293d13e87a3537e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_navfn_with_costmap_a793a74f16803f58b9293d13e87a3537e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cmap_\:navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap\:cmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2DROS}* navfn::NavfnWithCostmap::cmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTK}
{\bkmkend AAAAAAADTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_service_\:navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap\:make_plan_service_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer navfn::NavfnWithCostmap::make_plan_service_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTL}
{\bkmkend AAAAAAADTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pose_sub_\:navfn::NavfnWithCostmap}
{\xe \v navfn::NavfnWithCostmap\:pose_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber navfn::NavfnWithCostmap::pose_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADTM}
{\bkmkend AAAAAAADTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/src/{\b navfn_node.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn::NavWin\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn::NavWin}
{\xe \v navfn::NavWin}
{\bkmkstart AAAAAAADTN}
{\bkmkend AAAAAAADTN}
\par
{
{\f2 #include <navwin.h>}}\par
\'C0\'E0 navfn::NavWin \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_win__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
navfn::NavWin \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_win__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavWin} (int w, int h, const char *name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~NavWin} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawPot} ({\b NavFn} *nav)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b drawOverlay} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b draw} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ph}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dec}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b inc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b maxval}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uchar * {\b im}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b pc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b pn}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b po}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pce}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pne}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b poe}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b goal} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b start} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b path}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pathlen}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pathbuflen}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v NavWin\:navfn::NavWin}
{\xe \v navfn::NavWin\:NavWin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavWin::NavWin (int  {\i w}, int  {\i h}, const char *  {\i name})}}
\par
{\bkmkstart AAAAAAADTO}
{\bkmkend AAAAAAADTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~NavWin\:navfn::NavWin}
{\xe \v navfn::NavWin\:~NavWin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
navfn::NavWin::~NavWin ()}}
\par
{\bkmkstart AAAAAAADTP}
{\bkmkend AAAAAAADTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v draw\:navfn::NavWin}
{\xe \v navfn::NavWin\:draw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavWin::draw ()}}
\par
{\bkmkstart AAAAAAADTQ}
{\bkmkend AAAAAAADTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_win_a13eedcb0a2af0309e3fe8610aaee352f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawOverlay\:navfn::NavWin}
{\xe \v navfn::NavWin\:drawOverlay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavWin::drawOverlay ()}}
\par
{\bkmkstart AAAAAAADTR}
{\bkmkend AAAAAAADTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_win_ab798d08a7b8bda455651dce23220b433_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v drawPot\:navfn::NavWin}
{\xe \v navfn::NavWin\:drawPot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void navfn::NavWin::drawPot ({\b NavFn} *  {\i nav})}}
\par
{\bkmkstart AAAAAAADTS}
{\bkmkend AAAAAAADTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_win_a7b08b1ff35ee825d53a9ca50148884f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnavfn_1_1_nav_win_a7b08b1ff35ee825d53a9ca50148884f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dec\:navfn::NavWin}
{\xe \v navfn::NavWin\:dec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::dec}}
\par
{\bkmkstart AAAAAAADTT}
{\bkmkend AAAAAAADTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal\:navfn::NavWin}
{\xe \v navfn::NavWin\:goal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::goal[2]}}
\par
{\bkmkstart AAAAAAADTU}
{\bkmkend AAAAAAADTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v im\:navfn::NavWin}
{\xe \v navfn::NavWin\:im}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uchar* navfn::NavWin::im}}
\par
{\bkmkstart AAAAAAADTV}
{\bkmkend AAAAAAADTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v inc\:navfn::NavWin}
{\xe \v navfn::NavWin\:inc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::inc}}
\par
{\bkmkstart AAAAAAADTW}
{\bkmkend AAAAAAADTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxval\:navfn::NavWin}
{\xe \v navfn::NavWin\:maxval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::NavWin::maxval}}
\par
{\bkmkstart AAAAAAADTX}
{\bkmkend AAAAAAADTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nh\:navfn::NavWin}
{\xe \v navfn::NavWin\:nh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::nh}}
\par
{\bkmkstart AAAAAAADTY}
{\bkmkend AAAAAAADTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nw\:navfn::NavWin}
{\xe \v navfn::NavWin\:nw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::nw}}
\par
{\bkmkstart AAAAAAADTZ}
{\bkmkend AAAAAAADTZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v path\:navfn::NavWin}
{\xe \v navfn::NavWin\:path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* navfn::NavWin::path}}
\par
{\bkmkstart AAAAAAADUA}
{\bkmkend AAAAAAADUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pathbuflen\:navfn::NavWin}
{\xe \v navfn::NavWin\:pathbuflen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::pathbuflen}}
\par
{\bkmkstart AAAAAAADUB}
{\bkmkend AAAAAAADUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pathlen\:navfn::NavWin}
{\xe \v navfn::NavWin\:pathlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::pathlen}}
\par
{\bkmkstart AAAAAAADUC}
{\bkmkend AAAAAAADUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pc\:navfn::NavWin}
{\xe \v navfn::NavWin\:pc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int* navfn::NavWin::pc}}
\par
{\bkmkstart AAAAAAADUD}
{\bkmkend AAAAAAADUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pce\:navfn::NavWin}
{\xe \v navfn::NavWin\:pce}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::pce}}
\par
{\bkmkstart AAAAAAADUE}
{\bkmkend AAAAAAADUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ph\:navfn::NavWin}
{\xe \v navfn::NavWin\:ph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::ph}}
\par
{\bkmkstart AAAAAAADUF}
{\bkmkend AAAAAAADUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pn\:navfn::NavWin}
{\xe \v navfn::NavWin\:pn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * navfn::NavWin::pn}}
\par
{\bkmkstart AAAAAAADUG}
{\bkmkend AAAAAAADUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pne\:navfn::NavWin}
{\xe \v navfn::NavWin\:pne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::pne}}
\par
{\bkmkstart AAAAAAADUH}
{\bkmkend AAAAAAADUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v po\:navfn::NavWin}
{\xe \v navfn::NavWin\:po}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * navfn::NavWin::po}}
\par
{\bkmkstart AAAAAAADUI}
{\bkmkend AAAAAAADUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v poe\:navfn::NavWin}
{\xe \v navfn::NavWin\:poe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::poe}}
\par
{\bkmkstart AAAAAAADUJ}
{\bkmkend AAAAAAADUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pw\:navfn::NavWin}
{\xe \v navfn::NavWin\:pw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::pw}}
\par
{\bkmkstart AAAAAAADUK}
{\bkmkend AAAAAAADUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start\:navfn::NavWin}
{\xe \v navfn::NavWin\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int navfn::NavWin::start[2]}}
\par
{\bkmkstart AAAAAAADUL}
{\bkmkend AAAAAAADUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/src/navtest/{\b navwin.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/src/navtest/{\b navwin.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Observation\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Observation}
{\xe \v costmap_2d::Observation}
{\bkmkstart AAAAAAACXK}
{\bkmkend AAAAAAACXK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an observation in terms of a point cloud and the origin of the source }}\par
{
{\f2 #include <observation.h>}}\par
costmap_2d::Observation \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_observation__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Observation} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty observation }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Observation} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Observation} (geometry_msgs::Point &origin, const sensor_msgs::PointCloud2 &cloud, double obstacle_range, double raytrace_range)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an observation from an origin point and a point cloud }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Observation} (const {\b Observation} &obs)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Observation} (const sensor_msgs::PointCloud2 &cloud, double obstacle_range)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an observation from a point cloud }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point {\b origin_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sensor_msgs::PointCloud2 * {\b cloud_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b obstacle_range_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b raytrace_range_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an observation in terms of a point cloud and the origin of the source \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'D7\'A2\'BD\'E2\par}\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Tried to make members and constructor arguments const but the compiler would not accept the default assignment operator for vector insertion! \par
}}}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Observation\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:Observation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Observation::Observation (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACXL}
{\bkmkend AAAAAAACXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an empty observation }}\par
}
{\xe \v ~Observation\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:~Observation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual costmap_2d::Observation::~Observation (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACXM}
{\bkmkend AAAAAAACXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Observation\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:Observation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Observation::Observation (geometry_msgs::Point &  {\i origin}, const sensor_msgs::PointCloud2 &  {\i cloud}, double  {\i obstacle_range}, double  {\i raytrace_range}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACXN}
{\bkmkend AAAAAAACXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an observation from an origin point and a point cloud }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin} \cell }{The origin point of the observation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cloud} \cell }{The point cloud of the observation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obstacle_range} \cell }{The range out to which an observation should be able to insert obstacles \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i raytrace_range} \cell }{The range out to which an observation should be able to clear via raytracing \cell }
{\row }
}
}}
{\xe \v Observation\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:Observation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Observation::Observation (const {\b Observation} &  {\i obs}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACXO}
{\bkmkend AAAAAAACXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy constructor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obs} \cell }{The observation to copy \cell }
{\row }
}
}}
{\xe \v Observation\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:Observation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Observation::Observation (const sensor_msgs::PointCloud2 &  {\i cloud}, double  {\i obstacle_range}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACXP}
{\bkmkend AAAAAAACXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Creates an observation from a point cloud }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cloud} \cell }{The point cloud of the observation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obstacle_range} \cell }{The range out to which an observation should be able to insert obstacles \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cloud_\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:cloud_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sensor_msgs::PointCloud2* costmap_2d::Observation::cloud_}}
\par
{\bkmkstart AAAAAAACXQ}
{\bkmkend AAAAAAACXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v obstacle_range_\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:obstacle_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Observation::obstacle_range_}}
\par
{\bkmkstart AAAAAAACXR}
{\bkmkend AAAAAAACXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:origin_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Point costmap_2d::Observation::origin_}}
\par
{\bkmkstart AAAAAAACXS}
{\bkmkend AAAAAAACXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v raytrace_range_\:costmap_2d::Observation}
{\xe \v costmap_2d::Observation\:raytrace_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::Observation::raytrace_range_}}
\par
{\bkmkstart AAAAAAACXT}
{\bkmkend AAAAAAACXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b observation.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::ObservationBuffer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer}
{\bkmkstart AAAAAAACXU}
{\bkmkend AAAAAAACXU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Takes in point clouds from sensors, transforms them to the desired frame, and stores them }}\par
{
{\f2 #include <observation_buffer.h>}}\par
costmap_2d::ObservationBuffer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_observation_buffer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObservationBuffer} (std::string topic_name, double observation_keep_time, double expected_update_rate, double min_obstacle_height, double max_obstacle_height, double obstacle_range, double raytrace_range, tf2_ros::Buffer &tf2_buffer, std::string global_frame, std::string sensor_frame, double tf_tolerance)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs an observation buffer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ObservationBuffer} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor... cleans up }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setGlobalFrame} (const std::string new_global_frame)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the global frame of an observation buffer. This will transform all the currently cached observations to the new global frame }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bufferCloud} (const sensor_msgs::PointCloud2 &cloud)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transforms a PointCloud to the global frame and buffers it {\b Note: The burden is on the user to make sure the transform is available... ie they should use a MessageNotifier}  }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getObservations} (std::vector< {\b Observation} > &observations)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pushes copies of all current observations onto the end of the vector passed in }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isCurrent} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the observation buffer is being update at its expected rate }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b lock} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock the observation buffer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b unlock} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock the observation buffer }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetLastUpdated} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset last updated timestamp }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b purgeStaleObservations} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes any stale observations from the buffer list }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer & {\b tf2_buffer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ros::Duration {\b observation_keep_time_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const ros::Duration {\b expected_update_rate_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Time {\b last_updated_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b sensor_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::list< {\b Observation} > {\b observation_list_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b topic_name_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_obstacle_height_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_obstacle_height_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex {\b lock_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A lock for accessing data in callbacks safely }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b obstacle_range_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b raytrace_range_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tf_tolerance_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Takes in point clouds from sensors, transforms them to the desired frame, and stores them \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ObservationBuffer\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:ObservationBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::ObservationBuffer::ObservationBuffer (std::string  {\i topic_name}, double  {\i observation_keep_time}, double  {\i expected_update_rate}, double  {\i min_obstacle_height}, double  {\i max_obstacle_height}, double  {\i obstacle_range}, double  {\i raytrace_range}, tf2_ros::Buffer &  {\i tf2_buffer}, std::string  {\i global_frame}, std::string  {\i sensor_frame}, double  {\i tf_tolerance})}}
\par
{\bkmkstart AAAAAAACXV}
{\bkmkend AAAAAAACXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs an observation buffer }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i topic_name} \cell }{The topic of the observations, used as an identifier for error and warning messages \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i observation_keep_time} \cell }{Defines the persistence of observations in seconds, 0 means only keep the latest \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i expected_update_rate} \cell }{How often this buffer is expected to be updated, 0 means there is no limit \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_obstacle_height} \cell }{The minimum height of a hitpoint to be considered legal \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_obstacle_height} \cell }{The minimum height of a hitpoint to be considered legal \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obstacle_range} \cell }{The range to which the sensor should be trusted for inserting obstacles \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i raytrace_range} \cell }{The range to which the sensor should be trusted for raytracing to clear out space \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf2_buffer} \cell }{A reference to a tf2 Buffer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_frame} \cell }{The frame to transform PointClouds into \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sensor_frame} \cell }{The frame of the origin of the sensor, can be left blank to be read from the messages \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf_tolerance} \cell }{The amount of time to wait for a transform to be available when setting a new global frame \cell }
{\row }
}
}}
{\xe \v ~ObservationBuffer\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:~ObservationBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::ObservationBuffer::~ObservationBuffer ()}}
\par
{\bkmkstart AAAAAAACXW}
{\bkmkend AAAAAAACXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor... cleans up }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bufferCloud\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:bufferCloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObservationBuffer::bufferCloud (const sensor_msgs::PointCloud2 &  {\i cloud})}}
\par
{\bkmkstart AAAAAAACXX}
{\bkmkend AAAAAAACXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transforms a PointCloud to the global frame and buffers it {\b Note: The burden is on the user to make sure the transform is available... ie they should use a MessageNotifier}  }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cloud} \cell }{The cloud to be buffered \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_observation_buffer_af1bdb755c1ed181b2108fc26826bc273_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getObservations\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:getObservations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObservationBuffer::getObservations (std::vector< {\b Observation} > &  {\i observations})}}
\par
{\bkmkstart AAAAAAACXY}
{\bkmkend AAAAAAACXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Pushes copies of all current observations onto the end of the vector passed in }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i observations} \cell }{The vector to be filled \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_observation_buffer_aa89ff474cd6785349e3c0b2f49e2d738_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isCurrent\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:isCurrent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::ObservationBuffer::isCurrent () const}}
\par
{\bkmkstart AAAAAAACXZ}
{\bkmkend AAAAAAACXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the observation buffer is being update at its expected rate }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if it is being updated at the expected rate, false otherwise \par
}}}}
{\xe \v lock\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:lock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObservationBuffer::lock (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYA}
{\bkmkend AAAAAAACYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock the observation buffer }}\par
}
{\xe \v purgeStaleObservations\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:purgeStaleObservations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObservationBuffer::purgeStaleObservations (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYB}
{\bkmkend AAAAAAACYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes any stale observations from the buffer list }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_observation_buffer_a65b02e4c2e54d86b8e110fbabdab0659_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetLastUpdated\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:resetLastUpdated}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObservationBuffer::resetLastUpdated ()}}
\par
{\bkmkstart AAAAAAACYC}
{\bkmkend AAAAAAACYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset last updated timestamp }}\par
}
{\xe \v setGlobalFrame\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:setGlobalFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::ObservationBuffer::setGlobalFrame (const std::string  {\i new_global_frame})}}
\par
{\bkmkstart AAAAAAACYD}
{\bkmkend AAAAAAACYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the global frame of an observation buffer. This will transform all the currently cached observations to the new global frame }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_global_frame} \cell }{The name of the new global frame. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the operation succeeds, false otherwise \par
}}}}
{\xe \v unlock\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:unlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObservationBuffer::unlock (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYE}
{\bkmkend AAAAAAACYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Lock the observation buffer }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v expected_update_rate_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:expected_update_rate_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ros::Duration costmap_2d::ObservationBuffer::expected_update_rate_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYF}
{\bkmkend AAAAAAACYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::ObservationBuffer::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYG}
{\bkmkend AAAAAAACYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v last_updated_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:last_updated_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Time costmap_2d::ObservationBuffer::last_updated_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYH}
{\bkmkend AAAAAAACYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lock_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:lock_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex costmap_2d::ObservationBuffer::lock_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYI}
{\bkmkend AAAAAAACYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A lock for accessing data in callbacks safely }}\par
}
{\xe \v max_obstacle_height_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:max_obstacle_height_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::ObservationBuffer::max_obstacle_height_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYJ}
{\bkmkend AAAAAAACYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_obstacle_height_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:min_obstacle_height_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::ObservationBuffer::min_obstacle_height_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYK}
{\bkmkend AAAAAAACYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v observation_keep_time_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:observation_keep_time_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const ros::Duration costmap_2d::ObservationBuffer::observation_keep_time_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYL}
{\bkmkend AAAAAAACYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v observation_list_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:observation_list_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::list<{\b Observation}> costmap_2d::ObservationBuffer::observation_list_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYM}
{\bkmkend AAAAAAACYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v obstacle_range_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:obstacle_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::ObservationBuffer::obstacle_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYN}
{\bkmkend AAAAAAACYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v raytrace_range_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:raytrace_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::ObservationBuffer::raytrace_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYO}
{\bkmkend AAAAAAACYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sensor_frame_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:sensor_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::ObservationBuffer::sensor_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYP}
{\bkmkend AAAAAAACYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf2_buffer_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:tf2_buffer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer& costmap_2d::ObservationBuffer::tf2_buffer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYQ}
{\bkmkend AAAAAAACYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf_tolerance_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:tf_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::ObservationBuffer::tf_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYR}
{\bkmkend AAAAAAACYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v topic_name_\:costmap_2d::ObservationBuffer}
{\xe \v costmap_2d::ObservationBuffer\:topic_name_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::ObservationBuffer::topic_name_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACYS}
{\bkmkend AAAAAAACYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b observation_buffer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/src/{\b observation_buffer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::ObstacleCostFunction\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction}
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses costmap 2d to assign negative costs if robot footprint is in obstacle on any point of the trajectory. }}\par
{
{\f2 #include <obstacle_cost_function.h>}}\par
\'C0\'E0 base_local_planner::ObstacleCostFunction \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::ObstacleCostFunction \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObstacleCostFunction} ({\b costmap_2d::Costmap2D} *costmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~ObstacleCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prepare} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} ({\b Trajectory} &traj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSumScores} (bool score_sums)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParams} (double max_trans_vel, double max_scaling_factor, double scaling_speed)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFootprint} (std::vector< geometry_msgs::Point > footprint_spec)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b getScalingFactor} ({\b Trajectory} &traj, double scaling_speed, double max_trans_vel, double max_scaling_factor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b footprintCost} (const double &x, const double &y, const double &th, double scale, std::vector< geometry_msgs::Point > footprint_spec, {\b costmap_2d::Costmap2D} *costmap, {\b base_local_planner::WorldModel} *world_model)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b footprint_spec_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::WorldModel} * {\b world_model_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_trans_vel_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b sum_scores_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_scaling_factor_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scaling_speed_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses costmap 2d to assign negative costs if robot footprint is in obstacle on any point of the trajectory. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
class {\b ObstacleCostFunction} \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ObstacleCostFunction\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:ObstacleCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::ObstacleCostFunction::ObstacleCostFunction ({\b costmap_2d::Costmap2D} *  {\i costmap})}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~ObstacleCostFunction\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:~ObstacleCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::ObstacleCostFunction::~ObstacleCostFunction ()}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v footprintCost\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::ObstacleCostFunction::footprintCost (const double &  {\i x}, const double &  {\i y}, const double &  {\i th}, double  {\i scale}, std::vector< geometry_msgs::Point >  {\i footprint_spec}, {\b costmap_2d::Costmap2D} *  {\i costmap}, {\b base_local_planner::WorldModel} *  {\i world_model}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_a1f6a1fa580a775f11226ca346b8dcc33_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_a1f6a1fa580a775f11226ca346b8dcc33_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getScalingFactor\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:getScalingFactor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::ObstacleCostFunction::getScalingFactor ({\b Trajectory} &  {\i traj}, double  {\i scaling_speed}, double  {\i max_trans_vel}, double  {\i max_scaling_factor}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_aff41f9f317c9e375d0945bda8b9f8970_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v prepare\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::ObstacleCostFunction::prepare (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'B3\'A3\'D3\'C3\'B5\'C4\'B1\'E4\'C1\'BF \'B1\'CF\'BE\'B9\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD\'A3\'AC\'D7\'D3\'C0\'E0\'D6\'D0\'B1\'D8\'D0\'EB\'D6\'D8\'D0\'B4\'B8\'C3\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v scoreTrajectory\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::ObstacleCostFunction::scoreTrajectory ({\b Trajectory} &  {\i traj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C6\'C0\'B7\'D6\'A3\'AC\'D2\'B2\'CA\'C7\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_a3bac5a99d333a755440449809270e638_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setFootprint\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:setFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::ObstacleCostFunction::setFootprint (std::vector< geometry_msgs::Point >  {\i footprint_spec})}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_a8043f943c3bf43dc4836db1a632a6e52_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setParams\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:setParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::ObstacleCostFunction::setParams (double  {\i max_trans_vel}, double  {\i max_scaling_factor}, double  {\i scaling_speed})}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_ad1fc4b6ee10cf4add4e198967030037c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setSumScores\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:setSumScores}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::ObstacleCostFunction::setSumScores (bool  {\i score_sums}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_obstacle_cost_function_a62321188c336dbef4d749a79cecc45c0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* base_local_planner::ObstacleCostFunction::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_spec_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:footprint_spec_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> base_local_planner::ObstacleCostFunction::footprint_spec_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_scaling_factor_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:max_scaling_factor_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::ObstacleCostFunction::max_scaling_factor_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_trans_vel_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:max_trans_vel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::ObstacleCostFunction::max_trans_vel_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scaling_speed_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:scaling_speed_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::ObstacleCostFunction::scaling_speed_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sum_scores_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:sum_scores_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::ObstacleCostFunction::sum_scores_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v world_model_\:base_local_planner::ObstacleCostFunction}
{\xe \v base_local_planner::ObstacleCostFunction\:world_model_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::WorldModel}* base_local_planner::ObstacleCostFunction::world_model_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b obstacle_cost_function.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b obstacle_cost_function.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::ObstacleLayer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer}
{\bkmkstart AAAAAAACYT}
{\bkmkend AAAAAAACYT}
\par
{
{\f2 #include <obstacle_layer.h>}}\par
\'C0\'E0 costmap_2d::ObstacleLayer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::ObstacleLayer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ObstacleLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~ObstacleLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onInitialize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateBounds} (double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateCosts} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b activate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart publishers if they've been stopped. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deactivate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop publishers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b laserScanCallback} (const sensor_msgs::LaserScanConstPtr &message, const boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > &buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'BB\'BA\'B3\'E5\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b laserScanValidInfCallback} (const sensor_msgs::LaserScanConstPtr &message, const boost::shared_ptr< {\b ObservationBuffer} > &buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'BB\'BA\'B3\'E5\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD\'A3\'AC\'B8\'C3\'BA\'AF\'CA\'FD\'BF\'C9\'D2\'D4\'B4\'A6\'C0\'ED\'D3\'D0\'CE\'DE\'C7\'EE\'B4\'F3\'D6\'B5Inf\'B5\'C4\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pointCloudCallback} (const sensor_msgs::PointCloudConstPtr &message, const boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > &buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'BB\'BA\'B3\'E5\'B5\'E3\'D4\'C6\'CF\'FB\'CF\'A2\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD\'A3\'AC\'CA\'FD\'BE\'DD\'C0\'E0\'D0\'CD\'CA\'C7PointCloud }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pointCloud2Callback} (const sensor_msgs::PointCloud2ConstPtr &message, const boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > &buffer)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C0\'ED\'BB\'BA\'B3\'E5\'B5\'E3\'D4\'C6\'CF\'FB\'CF\'A2\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD\'A3\'AC\'CA\'FD\'BE\'DD\'C0\'E0\'D0\'CD\'CA\'C7PointCloud2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addStaticObservation} ({\b costmap_2d::Observation} &obs, bool marking, bool clearing)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearStaticObservations} (bool marking, bool clearing)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setupDynamicReconfigure} (ros::NodeHandle &nh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getMarkingObservations} (std::vector< {\b costmap_2d::Observation} > &marking_observations) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'C8\'A1\'D3\'C3\'D3\'DA\'B1\'EA\'BC\'C7\'BF\'D5\'BC\'E4\'B5\'C4\'B9\'DB\'B2\'EC\'D6\'B5. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getClearingObservations} (std::vector< {\b costmap_2d::Observation} > &clearing_observations) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'C8\'A1\'D3\'C3\'D3\'DA\'C7\'E5\'B3\'FD\'BF\'D5\'BC\'E4\'B5\'C4\'B9\'DB\'B2\'E2\'D6\'B5 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b raytraceFreespace} (const {\b costmap_2d::Observation} &clearing_observation, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'A5\'B4\'CE\'B5\'C4\'B9\'DB\'B2\'E2\'C0\'B4\'C7\'E5\'B3\'FD\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateRaytraceBounds} (double ox, double oy, double wx, double wy, double range, double *min_x, double *min_y, double *max_x, double *max_y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateFootprint} (double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b transformed_footprint_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b footprint_clearing_enabled_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The global frame for the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_obstacle_height_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max Obstacle Height }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
laser_geometry::LaserProjection {\b projector_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< message_filters::SubscriberBase > > {\b observation_subscribers_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< tf2_ros::MessageFilterBase > > {\b observation_notifiers_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > > {\b observation_buffers_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > > {\b marking_buffers_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > > {\b clearing_buffers_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b costmap_2d::Observation} > {\b static_clearing_observations_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b costmap_2d::Observation} > {\b static_marking_observations_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rolling_window_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< costmap_2d::ObstaclePluginConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b combination_method_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (costmap_2d::ObstaclePluginConfig &config, uint32_t level)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ObstacleLayer\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:ObstacleLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::ObstacleLayer::ObstacleLayer (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACYU}
{\bkmkend AAAAAAACYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~ObstacleLayer\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:~ObstacleLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::ObstacleLayer::~ObstacleLayer (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACYV}
{\bkmkend AAAAAAACYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v activate\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:activate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::activate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUU}
{\bkmkend AAAAAAACUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart publishers if they've been stopped. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUT \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a96d2b1af3b09d35e02e6d2fc8366195f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v addStaticObservation\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:addStaticObservation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::addStaticObservation ({\b costmap_2d::Observation} &  {\i obs}, bool  {\i marking}, bool  {\i clearing})}}
\par
{\bkmkstart AAAAAAACYW}
{\bkmkend AAAAAAACYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_ac835aba4f43e4c8a2a8ed66c97899b5f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearStaticObservations\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:clearStaticObservations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::clearStaticObservations (bool  {\i marking}, bool  {\i clearing})}}
\par
{\bkmkstart AAAAAAACYX}
{\bkmkend AAAAAAACYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v deactivate\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:deactivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::deactivate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUX}
{\bkmkend AAAAAAACUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop publishers. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUW \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a4b5054749c568e2df8180c2a7c0e6177_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getClearingObservations\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:getClearingObservations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::ObstacleLayer::getClearingObservations (std::vector< {\b costmap_2d::Observation} > &  {\i clearing_observations}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACYY}
{\bkmkend AAAAAAACYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'C8\'A1\'D3\'C3\'D3\'DA\'C7\'E5\'B3\'FD\'BF\'D5\'BC\'E4\'B5\'C4\'B9\'DB\'B2\'E2\'D6\'B5 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i clearing_observations} \cell }{\'CD\'AC\'B2\'BD\'B9\'DB\'B2\'E2\'D6\'B5\'CF\'F2\'C1\'BF\'B5\'C4\'D2\'FD\'D3\'C3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C8\'E7\'B9\'FB\'CB\'F9\'D3\'D0\'B9\'DB\'B2\'EC\'BB\'BA\'B3\'E5\'C7\'F8\'B6\'BC\'CA\'C7\'B5\'B1\'C7\'B0\'B5\'C4\'A3\'AC\'D4\'F2\'B7\'B5\'BB\'D8True\'A3\'AC\'B7\'F1\'D4\'F2\'B7\'B5\'BB\'D8false \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_ac36f129eecc398e3fd4c235078be29e4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getMarkingObservations\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:getMarkingObservations}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::ObstacleLayer::getMarkingObservations (std::vector< {\b costmap_2d::Observation} > &  {\i marking_observations}) const{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACYZ}
{\bkmkend AAAAAAACYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F1\'C8\'A1\'D3\'C3\'D3\'DA\'B1\'EA\'BC\'C7\'BF\'D5\'BC\'E4\'B5\'C4\'B9\'DB\'B2\'EC\'D6\'B5. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i marking_observations} \cell }{\'CD\'AC\'B2\'BD\'B9\'DB\'B2\'E2\'D6\'B5\'CF\'F2\'C1\'BF\'B5\'C4\'D2\'FD\'D3\'C3. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'C8\'E7\'B9\'FB\'CB\'F9\'D3\'D0\'B9\'DB\'B2\'EC\'BB\'BA\'B3\'E5\'C7\'F8\'B6\'BC\'CA\'C7\'B5\'B1\'C7\'B0\'B5\'C4\'A3\'AC\'D4\'F2\'B7\'B5\'BB\'D8True\'A3\'AC\'B7\'F1\'D4\'F2\'B7\'B5\'BB\'D8false. \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_ad697514e2077c33ec3e50ed7ef661d19_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v laserScanCallback\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:laserScanCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::laserScanCallback (const sensor_msgs::LaserScanConstPtr &  {\i message}, const boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > &  {\i buffer})}}
\par
{\bkmkstart AAAAAAACZA}
{\bkmkend AAAAAAACZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'BB\'BA\'B3\'E5\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message returned from a message notifier \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{\'B9\'DB\'B2\'E2\'BB\'BA\'B3\'E5\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_adf9bf6f5d231ae52d012320dd18fe047_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v laserScanValidInfCallback\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:laserScanValidInfCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::laserScanValidInfCallback (const sensor_msgs::LaserScanConstPtr &  {\i message}, const boost::shared_ptr< {\b ObservationBuffer} > &  {\i buffer})}}
\par
{\bkmkstart AAAAAAACZB}
{\bkmkend AAAAAAACZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'BB\'BA\'B3\'E5\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD\'A3\'AC\'B8\'C3\'BA\'AF\'CA\'FD\'BF\'C9\'D2\'D4\'B4\'A6\'C0\'ED\'D3\'D0\'CE\'DE\'C7\'EE\'B4\'F3\'D6\'B5Inf\'B5\'C4\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message returned from a message notifier \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{A pointer to the observation buffer to update \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_ae83ee29b89e126ffbfb477aff5fafe92_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v onInitialize\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:onInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::onInitialize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVE}
{\bkmkend AAAAAAACVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tf_, name_, and layered_costmap_ will all be set already when this is called. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTO \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVG \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a370822e3b19d717ef04311b7b967f496_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a370822e3b19d717ef04311b7b967f496_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pointCloud2Callback\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:pointCloud2Callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::pointCloud2Callback (const sensor_msgs::PointCloud2ConstPtr &  {\i message}, const boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > &  {\i buffer})}}
\par
{\bkmkstart AAAAAAACZC}
{\bkmkend AAAAAAACZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C0\'ED\'BB\'BA\'B3\'E5\'B5\'E3\'D4\'C6\'CF\'FB\'CF\'A2\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD\'A3\'AC\'CA\'FD\'BE\'DD\'C0\'E0\'D0\'CD\'CA\'C7PointCloud2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message returned from a message notifier \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{A pointer to the observation buffer to update \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_aa8d27200c8f888b3bda5c4fc087f59a9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pointCloudCallback\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:pointCloudCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::pointCloudCallback (const sensor_msgs::PointCloudConstPtr &  {\i message}, const boost::shared_ptr< {\b costmap_2d::ObservationBuffer} > &  {\i buffer})}}
\par
{\bkmkstart AAAAAAACZD}
{\bkmkend AAAAAAACZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'BB\'BA\'B3\'E5\'B5\'E3\'D4\'C6\'CF\'FB\'CF\'A2\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD\'A3\'AC\'CA\'FD\'BE\'DD\'C0\'E0\'D0\'CD\'CA\'C7PointCloud }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i message} \cell }{The message returned from a message notifier \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i buffer} \cell }{A pointer to the observation buffer to update \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_acad6bfccd40caba4e3357e7b48981c2a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v raytraceFreespace\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:raytraceFreespace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::raytraceFreespace (const {\b costmap_2d::Observation} &  {\i clearing_observation}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZE}
{\bkmkend AAAAAAACZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'A5\'B4\'CE\'B5\'C4\'B9\'DB\'B2\'E2\'C0\'B4\'C7\'E5\'B3\'FD\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i clearing_observation} \cell }{\'D3\'C3\'D3\'DAraytrace\'B5\'C4\'B9\'DB\'B2\'E2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_y} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_y} \cell }{\cell }
{\row }
}
}{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZF \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a50dac229133e7c22981b0c7e0eafc910_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a50dac229133e7c22981b0c7e0eafc910_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::reconfigureCB (costmap_2d::ObstaclePluginConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACZG}
{\bkmkend AAAAAAACZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a44529d13388d525090b766fd0bce12e9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::reset (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVH}
{\bkmkend AAAAAAACVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTR \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a9eca6114b3d54c93504058a1754103e4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setupDynamicReconfigure\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:setupDynamicReconfigure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::setupDynamicReconfigure (ros::NodeHandle &  {\i nh}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZH}
{\bkmkend AAAAAAACZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZI \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a8a24f6bb0bd8600154c21af4638708c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a8a24f6bb0bd8600154c21af4638708c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateBounds\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:updateBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::updateBounds (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVK}
{\bkmkend AAAAAAACVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For more details, see "Layered Costmaps for Context-Sensitive Navigation", by Lu et. Al, IROS 2014. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTU \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
{
\'B1\'BB {\b costmap_2d::VoxelLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVM \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a1bfef13f020e8aa64a33743f72824ebd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateCosts\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:updateCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::updateCosts ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVN}
{\bkmkend AAAAAAACVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Actually update the underlying costmap, only within the bounds calculated during UpdateBounds(). }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTW \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_a02fbdf76db69ddc03c400b2c00e903ee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateFootprint\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:updateFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::updateFootprint (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZJ}
{\bkmkend AAAAAAACZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_ac81261d46ebc829ca1d747c024a00603_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_ac81261d46ebc829ca1d747c024a00603_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateRaytraceBounds\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:updateRaytraceBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::ObstacleLayer::updateRaytraceBounds (double  {\i ox}, double  {\i oy}, double  {\i wx}, double  {\i wy}, double  {\i range}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZK}
{\bkmkend AAAAAAACZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_aadace7301e7b08f358ea3e9e8a17f452_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_obstacle_layer_aadace7301e7b08f358ea3e9e8a17f452_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearing_buffers_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:clearing_buffers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<{\b costmap_2d::ObservationBuffer}> > costmap_2d::ObstacleLayer::clearing_buffers_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZL}
{\bkmkend AAAAAAACZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v combination_method_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:combination_method_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int costmap_2d::ObstacleLayer::combination_method_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZM}
{\bkmkend AAAAAAACZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<costmap_2d::ObstaclePluginConfig>* costmap_2d::ObstacleLayer::dsrv_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZN}
{\bkmkend AAAAAAACZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_clearing_enabled_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:footprint_clearing_enabled_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::ObstacleLayer::footprint_clearing_enabled_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZO}
{\bkmkend AAAAAAACZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::ObstacleLayer::global_frame_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZP}
{\bkmkend AAAAAAACZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The global frame for the costmap }}\par
}
{\xe \v marking_buffers_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:marking_buffers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<{\b costmap_2d::ObservationBuffer}> > costmap_2d::ObstacleLayer::marking_buffers_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZQ}
{\bkmkend AAAAAAACZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_obstacle_height_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:max_obstacle_height_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::ObstacleLayer::max_obstacle_height_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZR}
{\bkmkend AAAAAAACZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Max Obstacle Height }}\par
}
{\xe \v observation_buffers_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:observation_buffers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<{\b costmap_2d::ObservationBuffer}> > costmap_2d::ObstacleLayer::observation_buffers_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZS}
{\bkmkend AAAAAAACZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v observation_notifiers_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:observation_notifiers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<tf2_ros::MessageFilterBase> > costmap_2d::ObstacleLayer::observation_notifiers_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZT}
{\bkmkend AAAAAAACZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v observation_subscribers_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:observation_subscribers_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<boost::shared_ptr<message_filters::SubscriberBase> > costmap_2d::ObstacleLayer::observation_subscribers_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZU}
{\bkmkend AAAAAAACZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v projector_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:projector_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
laser_geometry::LaserProjection costmap_2d::ObstacleLayer::projector_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZV}
{\bkmkend AAAAAAACZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rolling_window_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:rolling_window_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::ObstacleLayer::rolling_window_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZW}
{\bkmkend AAAAAAACZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v static_clearing_observations_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:static_clearing_observations_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b costmap_2d::Observation}> costmap_2d::ObstacleLayer::static_clearing_observations_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZX}
{\bkmkend AAAAAAACZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v static_marking_observations_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:static_marking_observations_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b costmap_2d::Observation}> costmap_2d::ObstacleLayer::static_marking_observations_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZY}
{\bkmkend AAAAAAACZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transformed_footprint_\:costmap_2d::ObstacleLayer}
{\xe \v costmap_2d::ObstacleLayer\:transformed_footprint_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> costmap_2d::ObstacleLayer::transformed_footprint_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACZZ}
{\bkmkend AAAAAAACZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b obstacle_layer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/plugins/{\b obstacle_layer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::OdometryHelperRos\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos}
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
\par
{
{\f2 #include <odometry_helper_ros.h>}}\par
base_local_planner::OdometryHelperRos \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OdometryHelperRos} (std::string odom_topic="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~OdometryHelperRos} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b odomCallback} (const nav_msgs::Odometry::ConstPtr &msg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback for receiving odometry data }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getOdom} (nav_msgs::Odometry &base_odom)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getRobotVel} (geometry_msgs::PoseStamped &robot_vel)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOdomTopic} (std::string odom_topic)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the odometry topic. This overrides what was set in the constructor, if anything. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getOdomTopic} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the current odometry topic. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b odom_topic_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b odom_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_msgs::Odometry {\b base_odom_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b odom_mutex_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b frame_id_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The frame_id associated this data }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v OdometryHelperRos\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:OdometryHelperRos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::OdometryHelperRos::OdometryHelperRos (std::string  {\i odom_topic} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAABVI}
{\bkmkend AAAAAAABVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i odom_topic} \cell }{The topic on which to subscribe to Odometry messages. If the empty string is given (the default), no subscription is done. \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros_af6ea30bc773864015dd3d243dc375d0b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~OdometryHelperRos\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:~OdometryHelperRos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::OdometryHelperRos::~OdometryHelperRos (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVJ}
{\bkmkend AAAAAAABVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getOdom\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:getOdom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OdometryHelperRos::getOdom (nav_msgs::Odometry &  {\i base_odom})}}
\par
{\bkmkstart AAAAAAABVK}
{\bkmkend AAAAAAABVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros_ada88271c5b81d4a97b81eb51de64f67c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getOdomTopic\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:getOdomTopic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::OdometryHelperRos::getOdomTopic () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABVL}
{\bkmkend AAAAAAABVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the current odometry topic. }}\par
}
{\xe \v getRobotVel\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:getRobotVel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OdometryHelperRos::getRobotVel (geometry_msgs::PoseStamped &  {\i robot_vel})}}
\par
{\bkmkstart AAAAAAABVM}
{\bkmkend AAAAAAABVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros_ab70a70a7a3f3d8e6788e6e1f0503a717_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v odomCallback\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:odomCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OdometryHelperRos::odomCallback (const nav_msgs::Odometry::ConstPtr &  {\i msg})}}
\par
{\bkmkstart AAAAAAABVN}
{\bkmkend AAAAAAABVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback for receiving odometry data }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i msg} \cell }{An Odometry message \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros_a0eeb49d061e05d16d43cac5196552c01_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setOdomTopic\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:setOdomTopic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OdometryHelperRos::setOdomTopic (std::string  {\i odom_topic})}}
\par
{\bkmkstart AAAAAAABVO}
{\bkmkend AAAAAAABVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the odometry topic. This overrides what was set in the constructor, if anything. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This unsubscribes from the old topic (if any) and subscribes to the new one (if any).\par
If odom_topic is the empty string, this just unsubscribes from the previous topic. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros_a3405fc02265edac001b3f4c8802c983d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_odometry_helper_ros_a3405fc02265edac001b3f4c8802c983d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v base_odom_\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:base_odom_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_msgs::Odometry base_local_planner::OdometryHelperRos::base_odom_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVP}
{\bkmkend AAAAAAABVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frame_id_\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:frame_id_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::OdometryHelperRos::frame_id_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVQ}
{\bkmkend AAAAAAABVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The frame_id associated this data }}\par
}
{\xe \v odom_mutex_\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:odom_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex base_local_planner::OdometryHelperRos::odom_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVR}
{\bkmkend AAAAAAABVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_sub_\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:odom_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber base_local_planner::OdometryHelperRos::odom_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVS}
{\bkmkend AAAAAAABVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_topic_\:base_local_planner::OdometryHelperRos}
{\xe \v base_local_planner::OdometryHelperRos\:odom_topic_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::OdometryHelperRos::odom_topic_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVT}
{\bkmkend AAAAAAABVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b odometry_helper_ros.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b odometry_helper_ros.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::OrientationFilter\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter}
{\bkmkstart AAAAAAADJB}
{\bkmkend AAAAAAADJB}
\par
{
{\f2 #include <orientation_filter.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OrientationFilter} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b processPath} (const geometry_msgs::PoseStamped &{\b start}, std::vector< geometry_msgs::PoseStamped > &path)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAngleBasedOnPositionDerivative} (std::vector< geometry_msgs::PoseStamped > &path, int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b interpolate} (std::vector< geometry_msgs::PoseStamped > &path, int start_index, int end_index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMode} ({\b OrientationMode} new_mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMode} (int new_mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setWindowSize} (size_t window_size)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OrientationMode} {\b omode_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b window_size_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v OrientationFilter\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:OrientationFilter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::OrientationFilter::OrientationFilter (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJC}
{\bkmkend AAAAAAADJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v interpolate\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:interpolate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::OrientationFilter::interpolate (std::vector< geometry_msgs::PoseStamped > &  {\i path}, int  {\i start_index}, int  {\i end_index})}}
\par
{\bkmkstart AAAAAAADJD}
{\bkmkend AAAAAAADJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a36817535ca10c2662b6cc2d0919576bf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a36817535ca10c2662b6cc2d0919576bf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v processPath\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:processPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::OrientationFilter::processPath (const geometry_msgs::PoseStamped &  {\i start}, std::vector< geometry_msgs::PoseStamped > &  {\i path}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADJE}
{\bkmkend AAAAAAADJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a90c8cd6c44018145bf0ae3e71580c1b1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a90c8cd6c44018145bf0ae3e71580c1b1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setAngleBasedOnPositionDerivative\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:setAngleBasedOnPositionDerivative}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::OrientationFilter::setAngleBasedOnPositionDerivative (std::vector< geometry_msgs::PoseStamped > &  {\i path}, int  {\i index})}}
\par
{\bkmkstart AAAAAAADJF}
{\bkmkend AAAAAAADJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a59770ba7f30c0e87e62b407bc44feda1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a59770ba7f30c0e87e62b407bc44feda1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setMode\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:setMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::OrientationFilter::setMode (int  {\i new_mode}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJG}
{\bkmkend AAAAAAADJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a7419925acb4ebb8b67bf1ae95f9c4333_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a7419925acb4ebb8b67bf1ae95f9c4333_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setMode\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:setMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::OrientationFilter::setMode ({\b OrientationMode}  {\i new_mode}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJH}
{\bkmkend AAAAAAADJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_a1934b57509ac8d2074695bee82c8e178_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setWindowSize\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:setWindowSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::OrientationFilter::setWindowSize (size_t  {\i window_size}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJI}
{\bkmkend AAAAAAADJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_orientation_filter_acf2026f87791f87970220d7a42e42422_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v omode_\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:omode_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OrientationMode} global_planner::OrientationFilter::omode_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJJ}
{\bkmkend AAAAAAADJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v window_size_\:global_planner::OrientationFilter}
{\xe \v global_planner::OrientationFilter\:window_size_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::OrientationFilter::window_size_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJK}
{\bkmkend AAAAAAADJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b orientation_filter.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b orientation_filter.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::OscillationCostFunction\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction}
{\bkmkstart AAAAAAABVU}
{\bkmkend AAAAAAABVU}
\par
{
{\f2 #include <oscillation_cost_function.h>}}\par
\'C0\'E0 base_local_planner::OscillationCostFunction \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::OscillationCostFunction \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OscillationCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~OscillationCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} ({\b Trajectory} &traj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prepare} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetOscillationFlags} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the oscillation flags for the local planner }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateOscillationFlags} (Eigen::Vector3f pos, {\b base_local_planner::Trajectory} *traj, double min_vel_trans)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setOscillationResetDist} (double dist, double angle)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetOscillationFlagsIfPossible} (const Eigen::Vector3f &pos, const Eigen::Vector3f &prev)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setOscillationFlags} ({\b base_local_planner::Trajectory} *t, double min_vel_trans)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a trajectory that's selected, set flags if needed to prevent the robot from oscillating }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strafe_pos_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strafe_neg_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strafing_pos_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strafing_neg_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rot_pos_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rot_neg_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotating_pos_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotating_neg_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b forward_pos_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b forward_neg_only_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b forward_pos_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b forward_neg_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b oscillation_reset_dist_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b oscillation_reset_angle_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eigen::Vector3f {\b prev_stationary_pos_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v OscillationCostFunction\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:OscillationCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::OscillationCostFunction::OscillationCostFunction ()}}
\par
{\bkmkstart AAAAAAABVV}
{\bkmkend AAAAAAABVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~OscillationCostFunction\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:~OscillationCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::OscillationCostFunction::~OscillationCostFunction (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVW}
{\bkmkend AAAAAAABVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v prepare\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::prepare (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABVX}
{\bkmkend AAAAAAABVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'B3\'A3\'D3\'C3\'B5\'C4\'B1\'E4\'C1\'BF \'B1\'CF\'BE\'B9\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD\'A3\'AC\'D7\'D3\'C0\'E0\'D6\'D0\'B1\'D8\'D0\'EB\'D6\'D8\'D0\'B4\'B8\'C3\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v resetOscillationFlags\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:resetOscillationFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OscillationCostFunction::resetOscillationFlags ()}}
\par
{\bkmkstart AAAAAAABVY}
{\bkmkend AAAAAAABVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reset the oscillation flags for the local planner }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_afb420d9a488660f3583e182cb1939ee1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetOscillationFlagsIfPossible\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:resetOscillationFlagsIfPossible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OscillationCostFunction::resetOscillationFlagsIfPossible (const Eigen::Vector3f &  {\i pos}, const Eigen::Vector3f &  {\i prev}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABVZ}
{\bkmkend AAAAAAABVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_aa6224a4812d149fcf71dc2131b92cb96_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_aa6224a4812d149fcf71dc2131b92cb96_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v scoreTrajectory\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::OscillationCostFunction::scoreTrajectory ({\b Trajectory} &  {\i traj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABWA}
{\bkmkend AAAAAAABWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C6\'C0\'B7\'D6\'A3\'AC\'D2\'B2\'CA\'C7\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setOscillationFlags\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:setOscillationFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::setOscillationFlags ({\b base_local_planner::Trajectory} *  {\i t}, double  {\i min_vel_trans}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWB}
{\bkmkend AAAAAAABWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a trajectory that's selected, set flags if needed to prevent the robot from oscillating }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i t} \cell }{The selected trajectory \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if a flag was set, false otherwise \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_ada617a8fb122a0889bbbe93e6baa82de_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setOscillationResetDist\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:setOscillationResetDist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OscillationCostFunction::setOscillationResetDist (double  {\i dist}, double  {\i angle})}}
\par
{\bkmkstart AAAAAAABWC}
{\bkmkend AAAAAAABWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_a489f8c9c3f2322d6f24fe8aa1e39b118_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateOscillationFlags\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:updateOscillationFlags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::OscillationCostFunction::updateOscillationFlags (Eigen::Vector3f  {\i pos}, {\b base_local_planner::Trajectory} *  {\i traj}, double  {\i min_vel_trans})}}
\par
{\bkmkstart AAAAAAABWD}
{\bkmkend AAAAAAABWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_a2cd60c5b611d43697f3345e3c356f48f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_oscillation_cost_function_a2cd60c5b611d43697f3345e3c356f48f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v forward_neg_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:forward_neg_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::forward_neg_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWE}
{\bkmkend AAAAAAABWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v forward_neg_only_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:forward_neg_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::forward_neg_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWF}
{\bkmkend AAAAAAABWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v forward_pos_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:forward_pos_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::forward_pos_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWG}
{\bkmkend AAAAAAABWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v forward_pos_only_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:forward_pos_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::forward_pos_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWH}
{\bkmkend AAAAAAABWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oscillation_reset_angle_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:oscillation_reset_angle_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::OscillationCostFunction::oscillation_reset_angle_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWI}
{\bkmkend AAAAAAABWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oscillation_reset_dist_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:oscillation_reset_dist_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::OscillationCostFunction::oscillation_reset_dist_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWJ}
{\bkmkend AAAAAAABWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v prev_stationary_pos_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:prev_stationary_pos_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f base_local_planner::OscillationCostFunction::prev_stationary_pos_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWK}
{\bkmkend AAAAAAABWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rot_neg_only_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:rot_neg_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::rot_neg_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWL}
{\bkmkend AAAAAAABWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rot_pos_only_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:rot_pos_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::rot_pos_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWM}
{\bkmkend AAAAAAABWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotating_neg_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:rotating_neg_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::rotating_neg_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWN}
{\bkmkend AAAAAAABWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotating_pos_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:rotating_pos_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::rotating_pos_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWO}
{\bkmkend AAAAAAABWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strafe_neg_only_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:strafe_neg_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::strafe_neg_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWP}
{\bkmkend AAAAAAABWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strafe_pos_only_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:strafe_pos_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::strafe_pos_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWQ}
{\bkmkend AAAAAAABWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strafing_neg_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:strafing_neg_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::strafing_neg_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWR}
{\bkmkend AAAAAAABWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strafing_pos_\:base_local_planner::OscillationCostFunction}
{\xe \v base_local_planner::OscillationCostFunction\:strafing_pos_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::OscillationCostFunction::strafing_pos_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABWS}
{\bkmkend AAAAAAABWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b oscillation_cost_function.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b oscillation_cost_function.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_cluster_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_cluster_t}
{\xe \v pf_cluster_t}
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
\par
{
{\f2 #include <pf.h>}}\par
pf_cluster_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpf__cluster__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b weight}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b mean}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b cov}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b m} [4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b c} [2][2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v c\:pf_cluster_t}
{\xe \v pf_cluster_t\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_cluster_t::c[2][2]}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v count\:pf_cluster_t}
{\xe \v pf_cluster_t\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_cluster_t::count}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cov\:pf_cluster_t}
{\xe \v pf_cluster_t\:cov}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} pf_cluster_t::cov}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v m\:pf_cluster_t}
{\xe \v pf_cluster_t\:m}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_cluster_t::m[4]}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mean\:pf_cluster_t}
{\xe \v pf_cluster_t\:mean}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_cluster_t::mean}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v weight\:pf_cluster_t}
{\xe \v pf_cluster_t\:weight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_cluster_t::weight}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_kdtree_node\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_kdtree_node}
{\xe \v pf_kdtree_node}
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
\par
{
{\f2 #include <pf_kdtree.h>}}\par
pf_kdtree_node \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpf__kdtree__node__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b leaf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b depth}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pivot_dim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pivot_value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b key} [3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b cluster}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_kdtree_node} * {\b children} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v children\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:children}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b pf_kdtree_node}* pf_kdtree_node::children[2]}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cluster\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:cluster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_node::cluster}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v depth\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:depth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_node::depth}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v key\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:key}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_node::key[3]}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v leaf\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:leaf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_node::leaf}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pivot_dim\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:pivot_dim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_node::pivot_dim}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pivot_value\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:pivot_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_kdtree_node::pivot_value}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:pf_kdtree_node}
{\xe \v pf_kdtree_node\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_kdtree_node::value}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf_kdtree.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_kdtree_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_kdtree_t}
{\xe \v pf_kdtree_t}
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
\par
{
{\f2 #include <pf_kdtree.h>}}\par
pf_kdtree_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpf__kdtree__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b size} [3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_kdtree_node_t} * {\b root}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b node_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b node_max_count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_kdtree_node_t} * {\b nodes}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b leaf_count}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v leaf_count\:pf_kdtree_t}
{\xe \v pf_kdtree_t\:leaf_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_t::leaf_count}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v node_count\:pf_kdtree_t}
{\xe \v pf_kdtree_t\:node_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_t::node_count}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v node_max_count\:pf_kdtree_t}
{\xe \v pf_kdtree_t\:node_max_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_t::node_max_count}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nodes\:pf_kdtree_t}
{\xe \v pf_kdtree_t\:nodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_node_t}* pf_kdtree_t::nodes}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v root\:pf_kdtree_t}
{\xe \v pf_kdtree_t\:root}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_node_t}* pf_kdtree_t::root}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size\:pf_kdtree_t}
{\xe \v pf_kdtree_t\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_kdtree_t::size[3]}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf_kdtree.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_matrix_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_matrix_t}
{\xe \v pf_matrix_t}
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
\par
{
{\f2 #include <pf_vector.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b m} [3][3]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v m\:pf_matrix_t}
{\xe \v pf_matrix_t\:m}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_matrix_t::m[3][3]}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf_vector.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_pdf_gaussian_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_pdf_gaussian_t}
{\xe \v pf_pdf_gaussian_t}
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
\par
{
{\f2 #include <pf_pdf.h>}}\par
pf_pdf_gaussian_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpf__pdf__gaussian__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b cx}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cxdet}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b cr}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b cd}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cd\:pf_pdf_gaussian_t}
{\xe \v pf_pdf_gaussian_t\:cd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_pdf_gaussian_t::cd}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cr\:pf_pdf_gaussian_t}
{\xe \v pf_pdf_gaussian_t\:cr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} pf_pdf_gaussian_t::cr}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cx\:pf_pdf_gaussian_t}
{\xe \v pf_pdf_gaussian_t\:cx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} pf_pdf_gaussian_t::cx}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cxdet\:pf_pdf_gaussian_t}
{\xe \v pf_pdf_gaussian_t\:cxdet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_pdf_gaussian_t::cxdet}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:pf_pdf_gaussian_t}
{\xe \v pf_pdf_gaussian_t\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_pdf_gaussian_t::x}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf_pdf.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_sample_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_sample_t}
{\xe \v pf_sample_t}
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
\par
{
{\f2 #include <pf.h>}}\par
pf_sample_t \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "structpf__sample__t__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pose}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b weight}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pose\:pf_sample_t}
{\xe \v pf_sample_t\:pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_sample_t::pose}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v weight\:pf_sample_t}
{\xe \v pf_sample_t\:weight}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_sample_t::weight}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_vector_t\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v pf_vector_t}
{\xe \v pf_vector_t}
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
\par
{
{\f2 #include <pf_vector.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b v} [3]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v v\:pf_vector_t}
{\xe \v pf_vector_t\:v}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_vector_t::v[3]}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/include/amcl/pf/{\b pf_vector.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::PlanarLaserScan\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan}
{\bkmkstart AAAAAAABWT}
{\bkmkend AAAAAAABWT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores a scan from a planar laser that can be used to clear freespace }}\par
{
{\f2 #include <planar_laser_scan.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlanarLaserScan} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point32 {\b origin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sensor_msgs::PointCloud {\b cloud}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angle_min}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angle_max}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angle_increment}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores a scan from a planar laser that can be used to clear freespace \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PlanarLaserScan\:base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan\:PlanarLaserScan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::PlanarLaserScan::PlanarLaserScan (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABWU}
{\bkmkend AAAAAAABWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v angle_increment\:base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan\:angle_increment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PlanarLaserScan::angle_increment}}
\par
{\bkmkstart AAAAAAABWV}
{\bkmkend AAAAAAABWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angle_max\:base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan\:angle_max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PlanarLaserScan::angle_max}}
\par
{\bkmkstart AAAAAAABWW}
{\bkmkend AAAAAAABWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angle_min\:base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan\:angle_min}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PlanarLaserScan::angle_min}}
\par
{\bkmkstart AAAAAAABWX}
{\bkmkend AAAAAAABWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cloud\:base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan\:cloud}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sensor_msgs::PointCloud base_local_planner::PlanarLaserScan::cloud}}
\par
{\bkmkstart AAAAAAABWY}
{\bkmkend AAAAAAABWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin\:base_local_planner::PlanarLaserScan}
{\xe \v base_local_planner::PlanarLaserScan\:origin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Point32 base_local_planner::PlanarLaserScan::origin}}
\par
{\bkmkstart AAAAAAABWZ}
{\bkmkend AAAAAAABWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b planar_laser_scan.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
PlannerCore\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v PlannerCore}
{\xe \v PlannerCore}
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F8\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'CC\'E1\'B9\'A9\'C1\'CB\'B7\'E2\'D7\'B0\'C0\'E0 }}\par
{
{\f2 #include <planner_core.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F8\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'CC\'E1\'B9\'A9\'C1\'CB\'B7\'E2\'D7\'B0\'C0\'E0 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b planner_core.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::PlannerWithCostmap\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap}
{\bkmkstart AAAAAAADJL}
{\bkmkend AAAAAAADJL}
\'C0\'E0 global_planner::PlannerWithCostmap \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::PlannerWithCostmap \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PlannerWithCostmap} (string name, {\b Costmap2DROS} *cmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b makePlanService} (navfn::MakeNavPlan::Request &req, navfn::MakeNavPlan::Response &resp)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b poseCallback} (const rm::PoseStamped::ConstPtr &{\b goal})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Costmap2DROS} * {\b cmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::ServiceServer {\b make_plan_service_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b pose_sub_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PlannerWithCostmap\:global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap\:PlannerWithCostmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::PlannerWithCostmap::PlannerWithCostmap (string  {\i name}, {\b Costmap2DROS} *  {\i cmap})}}
\par
{\bkmkstart AAAAAAADJM}
{\bkmkend AAAAAAADJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap_abf6efea3cec2f9f41ae7104005f777c7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v makePlanService\:global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap\:makePlanService}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool global_planner::PlannerWithCostmap::makePlanService (navfn::MakeNavPlan::Request &  {\i req}, navfn::MakeNavPlan::Response &  {\i resp})}}
\par
{\bkmkstart AAAAAAADJN}
{\bkmkend AAAAAAADJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap_a735f4750a1e88ab01b22a4d12d8dfc0d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap_a735f4750a1e88ab01b22a4d12d8dfc0d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v poseCallback\:global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap\:poseCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::PlannerWithCostmap::poseCallback (const rm::PoseStamped::ConstPtr &  {\i goal}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADJO}
{\bkmkend AAAAAAADJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap_ae259e4a6eda8cca0b6fec1018f152b55_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_planner_with_costmap_ae259e4a6eda8cca0b6fec1018f152b55_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cmap_\:global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap\:cmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Costmap2DROS}* global_planner::PlannerWithCostmap::cmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADJP}
{\bkmkend AAAAAAADJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_plan_service_\:global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap\:make_plan_service_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::ServiceServer global_planner::PlannerWithCostmap::make_plan_service_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADJQ}
{\bkmkend AAAAAAADJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pose_sub_\:global_planner::PlannerWithCostmap}
{\xe \v global_planner::PlannerWithCostmap\:pose_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber global_planner::PlannerWithCostmap::pose_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADJR}
{\bkmkend AAAAAAADJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b plan_node.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::PointGrid\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid}
{\bkmkstart AAAAAAABXA}
{\bkmkend AAAAAAABXA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6WorldModel\'BD\'D3\'BF\'DA\'B5\'C4\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4\'B5\'C4\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2\'A3\'AC \'B8\'C3\'C0\'E0\'B4\'E6\'B4\'A2\'CD\'F8\'B8\'F1\'B5\'C4\'B5\'E3\'B2\'A2\'C7\'D2\'BC\'EC\'B2\'E9\'B6\'E0\'B1\'DF\'D0\'CE\'D6\'D0\'B5\'C4\'B5\'E3\'CA\'C7\'B7\'F1\'C5\'F6\'D7\'B2(\'CD\'A8\'B9\'FD\'B0\'D1\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint\'D3\'B3\'C9\'E4\'B5\'BD\'B8\'F8\'B6\'A8\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'BF\'B4\'D3\'D0\'C3\'BB\'D3\'D0\'BA\'CD\'D5\'CF\'B0\'AD\'CE\'EF\'D6\'D8\'BA\'CF) }}\par
{
{\f2 #include <point_grid.h>}}\par
\'C0\'E0 base_local_planner::PointGrid \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::PointGrid \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PointGrid} (double width, double height, double resolution, geometry_msgs::Point origin, double max_z, double obstacle_range, double min_separation)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'B4\'E6\'B4\'A2\'C6\'BD\'C3\'E6\'B5\'E3\'B5\'C4\'CD\'F8\'B8\'F1 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PointGrid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getPointsInRange} (const geometry_msgs::Point &lower_left, const geometry_msgs::Point &upper_right, std::vector< std::list< geometry_msgs::Point32 > * > &points)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'CE\'BB\'D3\'DA\'CC\'D8\'B6\'A8\'B7\'B6\'CE\'A7\'C4\'DA\'B5\'A5\'D4\'AA\'B8\'F1\'D6\'D0\'B5\'C4\'B5\'E3\'A3\'AC\'D3\'D0\'D0\'A9\'B5\'E3\'BF\'C9\'C4\'DC\'B3\'AC\'B9\'FD\'C1\'CB\'CC\'D8\'B6\'A8\'B5\'C4\'B7\'B6\'CE\'A7. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'D3\'D0\'C3\'BB\'D3\'D0\'CD\'F8\'B8\'F1\'B5\'E3\'C2\'E4\'D4\'DA\'BB\'FA\'C6\'F7\'C8\'CBfootprint\'D6\'D0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateWorld} (const std::vector< geometry_msgs::Point > &footprint, const std::vector< {\b costmap_2d::Observation} > &observations, const std::vector< {\b PlanarLaserScan} > &laser_scans)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B2\'E5\'C8\'EB\'B4\'AB\'B8\'D0\'C6\'F7\'B9\'DB\'B2\'EC\'D6\'B5\'B5\'BDpoint grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gridCoords} (geometry_msgs::Point pt, unsigned int &gx, unsigned int &gy) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'D3\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'D7\'AA\'BB\'BB\'B5\'BD\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getCellBounds} (unsigned int gx, unsigned int gy, geometry_msgs::Point &lower_left, geometry_msgs::Point &upper_right) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the bounds in world coordinates of a cell in the point grid, assumes a legal cell when called }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sq_distance} (const geometry_msgs::Point32 &pt1, const geometry_msgs::Point32 &pt2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the squared distance between two points }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gridCoords} (const geometry_msgs::Point32 &pt, unsigned int &gx, unsigned int &gy) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to grid coordinates }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b gridIndex} (unsigned int gx, unsigned int gy) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts cell coordinates to an index value that can be used to look up the correct grid cell }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b orient} (const geometry_msgs::Point &a, const geometry_msgs::Point &b, const geometry_msgs::Point32 &c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check the orientation of a pt c with respect to the vector a->b }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > double {\b orient} (const T &a, const T &b, const T &c)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check the orientation of a pt c with respect to the vector a->b }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b segIntersect} (const geometry_msgs::Point32 &v1, const geometry_msgs::Point32 &v2, const geometry_msgs::Point32 &u1, const geometry_msgs::Point32 &u2)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if two line segmenst intersect }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b intersectionPoint} (const geometry_msgs::Point &v1, const geometry_msgs::Point &v2, const geometry_msgs::Point &u1, const geometry_msgs::Point &u2, geometry_msgs::Point &result)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the intersection point of two lines }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ptInPolygon} (const geometry_msgs::Point32 &pt, const std::vector< geometry_msgs::Point > &poly)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a point is in a polygon }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insert} (const geometry_msgs::Point32 &pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insert a point into the point grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b nearestNeighborDistance} (const geometry_msgs::Point32 &pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the distance between a point and its nearest neighbor in the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getNearestInCell} (const geometry_msgs::Point32 &pt, unsigned int gx, unsigned int gy)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the distance between a point and its nearest neighbor in a cell }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removePointsInPolygon} (const std::vector< geometry_msgs::Point > poly)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes points from the grid that lie within the polygon }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removePointsInScanBoundry} (const {\b PlanarLaserScan} &laser_scan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes points from the grid that lie within a laser scan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ptInScan} (const geometry_msgs::Point32 &pt, const {\b PlanarLaserScan} &laser_scan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if a point is within a laser scan specification }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getPoints} (sensor_msgs::PointCloud2 &cloud)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the points in the point grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, double inscribed_radius=0.0, double circumscribed_radius=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius, double extra)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b resolution_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The resolution of the grid in meters/cell }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point {\b origin_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The origin point of the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b width_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the grid in cells }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b height_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height of the grid in cells }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::list< geometry_msgs::Point32 > > {\b cells_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for the cells in the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_z_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height cutoff for adding points as obstacles }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sq_obstacle_range_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The square distance at which we no longer add obstacles to the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sq_min_separation_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minimum square distance required between points in the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::list< geometry_msgs::Point32 > * > {\b points_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The lists of points returned by a range search, made a member to save on memory allocation }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6WorldModel\'BD\'D3\'BF\'DA\'B5\'C4\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4\'B5\'C4\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2\'A3\'AC \'B8\'C3\'C0\'E0\'B4\'E6\'B4\'A2\'CD\'F8\'B8\'F1\'B5\'C4\'B5\'E3\'B2\'A2\'C7\'D2\'BC\'EC\'B2\'E9\'B6\'E0\'B1\'DF\'D0\'CE\'D6\'D0\'B5\'C4\'B5\'E3\'CA\'C7\'B7\'F1\'C5\'F6\'D7\'B2(\'CD\'A8\'B9\'FD\'B0\'D1\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint\'D3\'B3\'C9\'E4\'B5\'BD\'B8\'F8\'B6\'A8\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'BF\'B4\'D3\'D0\'C3\'BB\'D3\'D0\'BA\'CD\'D5\'CF\'B0\'AD\'CE\'EF\'D6\'D8\'BA\'CF) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PointGrid\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:PointGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::PointGrid::PointGrid (double  {\i width}, double  {\i height}, double  {\i resolution}, geometry_msgs::Point  {\i origin}, double  {\i max_z}, double  {\i obstacle_range}, double  {\i min_separation})}}
\par
{\bkmkstart AAAAAAABXB}
{\bkmkend AAAAAAABXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'B4\'E6\'B4\'A2\'C6\'BD\'C3\'E6\'B5\'E3\'B5\'C4\'CD\'F8\'B8\'F1 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i width} \cell }{\'CD\'F8\'B8\'F1\'B5\'C4\'BF\'ED(\'C3\'D7) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i height} \cell }{\'CD\'F8\'B8\'F1\'B5\'C4\'B8\'DF(\'C3\'D7) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i resolution} \cell }{\'CD\'F8\'B8\'F1\'B7\'D6\'B1\'E6\'C2\'CA meters/cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin} \cell }{The origin of the bottom left corner of the grid \'CD\'F8\'B8\'F1\'B5\'C4\'D7\'F3\'CF\'C2\'BD\'C7\'D4\'AD\'B5\'E3\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_z} \cell }{\'CD\'F8\'B8\'F1\'D6\'D0\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'C4\'D7\'EE\'B4\'F3\'B8\'DF\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obstacle_range} \cell }{\'CD\'F8\'B8\'F1\'D6\'D0\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'C4\'D7\'EE\'B4\'F3\'BE\'E0\'C0\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_separation} \cell }{\'CD\'F8\'B8\'F1\'D6\'D0\'B5\'E3\'D6\'AE\'BC\'E4\'D7\'EE\'D0\'A1\'BE\'E0\'C0\'EB \cell }
{\row }
}
}}
{\xe \v ~PointGrid\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:~PointGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::PointGrid::~PointGrid (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXC}
{\bkmkend AAAAAAABXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v footprintCost\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXD}
{\bkmkend AAAAAAABXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'D3\'D0\'C3\'BB\'D3\'D0\'CD\'F8\'B8\'F1\'B5\'E3\'C2\'E4\'D4\'DA\'BB\'FA\'C6\'F7\'C8\'CBfootprint\'D6\'D0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{\'BB\'FA\'C6\'F7\'C8\'CBfootprint \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'C4\'DA\'C7\'D0\'D4\'B2\'B0\'EB\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CD\'E2\'BD\'D3\'D4\'B2\'B0\'EB\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D5\'FD\'D6\'B5\'B4\'FA\'B1\'ED\'CB\'F9\'D3\'D0\'B5\'E3\'D4\'DAfootprint\'CD\'E2\'A3\'AC\'B8\'BA\'D6\'B5\'D4\'F2\'D3\'D0\'B5\'E3\'D4\'DA\'C0\'EF\'C3\'E6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::WorldModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_ae9398ded210128450fbdb86f231cf588_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_ae9398ded210128450fbdb86f231cf588_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABXE}
{\bkmkend AAAAAAABXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise: -1 if footprint covers at least a lethal obstacle cell, or -2 if footprint covers at least a no-information cell, or -3 if footprint is partially or totally outside of the map \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::WorldModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v footprintCost\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}, double  {\i extra}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXF}
{\bkmkend AAAAAAABXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise \par
}}}}
{\xe \v footprintCost\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (double  {\i x}, double  {\i y}, double  {\i theta}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec}, double  {\i inscribed_radius} = {\f2 0.0}, double  {\i circumscribed_radius} = {\f2 0.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXG}
{\bkmkend AAAAAAABXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getCellBounds\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:getCellBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::getCellBounds (unsigned int  {\i gx}, unsigned int  {\i gy}, geometry_msgs::Point &  {\i lower_left}, geometry_msgs::Point &  {\i upper_right}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXH}
{\bkmkend AAAAAAABXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the bounds in world coordinates of a cell in the point grid, assumes a legal cell when called }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gx} \cell }{The x coordinate of the grid cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gy} \cell }{The y coordinate of the grid cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lower_left} \cell }{The lower left bounds of the cell in world coordinates to be filled in \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i upper_right} \cell }{The upper right bounds of the cell in world coordinates to be filled in \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_aa98a155058a5045be350a89eb3858f41_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getNearestInCell\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:getNearestInCell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::getNearestInCell (const geometry_msgs::Point32 &  {\i pt}, unsigned int  {\i gx}, unsigned int  {\i gy})}}
\par
{\bkmkstart AAAAAAABXI}
{\bkmkend AAAAAAABXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the distance between a point and its nearest neighbor in a cell }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{The point used for comparison \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gx} \cell }{The x coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gy} \cell }{The y coordinate of the cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The distance between the point passed in and its nearest neighbor in the cell \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_aace5884f03d444ee13dffd0dbe866678_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_aace5884f03d444ee13dffd0dbe866678_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPoints\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:getPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::getPoints (sensor_msgs::PointCloud2 &  {\i cloud})}}
\par
{\bkmkstart AAAAAAABXJ}
{\bkmkend AAAAAAABXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the points in the point grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cloud} \cell }{The point cloud to insert the points into \cell }
{\row }
}
}}
{\xe \v getPointsInRange\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:getPointsInRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::getPointsInRange (const geometry_msgs::Point &  {\i lower_left}, const geometry_msgs::Point &  {\i upper_right}, std::vector< std::list< geometry_msgs::Point32 > * > &  {\i points})}}
\par
{\bkmkstart AAAAAAABXK}
{\bkmkend AAAAAAABXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'CE\'BB\'D3\'DA\'CC\'D8\'B6\'A8\'B7\'B6\'CE\'A7\'C4\'DA\'B5\'A5\'D4\'AA\'B8\'F1\'D6\'D0\'B5\'C4\'B5\'E3\'A3\'AC\'D3\'D0\'D0\'A9\'B5\'E3\'BF\'C9\'C4\'DC\'B3\'AC\'B9\'FD\'C1\'CB\'CC\'D8\'B6\'A8\'B5\'C4\'B7\'B6\'CE\'A7. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i lower_left} \cell }{\'B7\'B6\'CE\'A7\'CB\'D1\'CB\'F7\'B5\'C4\'D7\'F3\'CF\'C2\'BD\'C7 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i upper_right} \cell }{\'B7\'B6\'CE\'A7\'CB\'D1\'CB\'F7\'B5\'C4\'D3\'D2\'C9\'CF\'BD\'C7 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i points} \cell }{\'D2\'BB\'CF\'B5\'C1\'D0\'B5\'E3\'B5\'C4\'D6\'B8\'D5\'EB\'CF\'F2\'C1\'BF \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_af222229f74f1bc4e14536548c316e755_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_af222229f74f1bc4e14536548c316e755_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v gridCoords\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:gridCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::PointGrid::gridCoords (const geometry_msgs::Point32 &  {\i pt}, unsigned int &  {\i gx}, unsigned int &  {\i gy}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXL}
{\bkmkend AAAAAAABXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert from world coordinates to grid coordinates }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{A point in world space \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gx} \cell }{The x coordinate of the corresponding grid cell to be set by the function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gy} \cell }{The y coordinate of the corresponding grid cell to be set by the function \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the conversion was successful, false otherwise \par
}}}}
{\xe \v gridCoords\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:gridCoords}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::PointGrid::gridCoords (geometry_msgs::Point  {\i pt}, unsigned int &  {\i gx}, unsigned int &  {\i gy}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXM}
{\bkmkend AAAAAAABXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'D3\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'D7\'AA\'BB\'BB\'B5\'BD\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'B5\'E3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gx} \cell }{\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'B5\'E3x\'D6\'E1 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gy} \cell }{\'CD\'F8\'B8\'F1\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'B5\'E3y\'D6\'E1 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'D2\'E2\'CE\'B6\'D7\'C5\'D7\'AA\'BB\'BB\'B3\'C9\'B9\'A6 \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a85f9826c14353e9a75696be52d438554_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v gridIndex\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:gridIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::PointGrid::gridIndex (unsigned int  {\i gx}, unsigned int  {\i gy}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXN}
{\bkmkend AAAAAAABXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Converts cell coordinates to an index value that can be used to look up the correct grid cell }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gx} \cell }{The x coordinate of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i gy} \cell }{The y coordinate of the cell \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The index of the cell in the stored cell list \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a107ea768298e5560e962498692674d5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v insert\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::insert (const geometry_msgs::Point32 &  {\i pt})}}
\par
{\bkmkstart AAAAAAABXO}
{\bkmkend AAAAAAABXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Insert a point into the point grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{The point to be inserted \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a5276643487b1ab03a4a9602b3f338ba8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a5276643487b1ab03a4a9602b3f338ba8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v intersectionPoint\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:intersectionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::intersectionPoint (const geometry_msgs::Point &  {\i v1}, const geometry_msgs::Point &  {\i v2}, const geometry_msgs::Point &  {\i u1}, const geometry_msgs::Point &  {\i u2}, geometry_msgs::Point &  {\i result})}}
\par
{\bkmkstart AAAAAAABXP}
{\bkmkend AAAAAAABXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the intersection point of two lines }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v1} \cell }{The first point of the first segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v2} \cell }{The second point of the first segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i u1} \cell }{The first point of the second segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i u2} \cell }{The second point of the second segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i result} \cell }{The point to be filled in \cell }
{\row }
}
}}
{\xe \v nearestNeighborDistance\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:nearestNeighborDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::nearestNeighborDistance (const geometry_msgs::Point32 &  {\i pt})}}
\par
{\bkmkstart AAAAAAABXQ}
{\bkmkend AAAAAAABXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Find the distance between a point and its nearest neighbor in the grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{The point used for comparison \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The distance between the point passed in and its nearest neighbor in the point grid \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_aebd6e4378342589f07e5700aac825550_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_aebd6e4378342589f07e5700aac825550_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v orient\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:orient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::orient (const geometry_msgs::Point &  {\i a}, const geometry_msgs::Point &  {\i b}, const geometry_msgs::Point32 &  {\i c}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXR}
{\bkmkend AAAAAAABXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check the orientation of a pt c with respect to the vector a->b }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{The start point of the vector \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{The end point of the vector \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{The point to compute orientation for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
orient(a, b, c) < 0 -\'97> Right, orient(a, b, c) > 0 -\'97> Left \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_ab3604c15e0eebb45dcaf4ae5403c5f7e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v orient\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:orient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > double base_local_planner::PointGrid::orient (const T &  {\i a}, const T &  {\i b}, const T &  {\i c}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXS}
{\bkmkend AAAAAAABXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check the orientation of a pt c with respect to the vector a->b }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a} \cell }{The start point of the vector \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i b} \cell }{The end point of the vector \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i c} \cell }{The point to compute orientation for \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
orient(a, b, c) < 0 -\'97> Right, orient(a, b, c) > 0 -\'97> Left \par
}}}}
{\xe \v ptInPolygon\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:ptInPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::PointGrid::ptInPolygon (const geometry_msgs::Point32 &  {\i pt}, const std::vector< geometry_msgs::Point > &  {\i poly})}}
\par
{\bkmkstart AAAAAAABXT}
{\bkmkend AAAAAAABXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if a point is in a polygon }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{The point to be checked \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i poly} \cell }{The polygon to check against \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the point is in the polygon, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a7d813f2a10631747b458377fdd4a2a4f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a7d813f2a10631747b458377fdd4a2a4f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ptInScan\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:ptInScan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::PointGrid::ptInScan (const geometry_msgs::Point32 &  {\i pt}, const {\b PlanarLaserScan} &  {\i laser_scan})}}
\par
{\bkmkstart AAAAAAABXU}
{\bkmkend AAAAAAABXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks to see if a point is within a laser scan specification }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt} \cell }{The point to check \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i laser_scan} \cell }{The specification of the scan to check against \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the point is contained within the scan, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a763e1d4207cc1ecbc670936074211155_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a763e1d4207cc1ecbc670936074211155_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v removePointsInPolygon\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:removePointsInPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::removePointsInPolygon (const std::vector< geometry_msgs::Point >  {\i poly})}}
\par
{\bkmkstart AAAAAAABXV}
{\bkmkend AAAAAAABXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes points from the grid that lie within the polygon }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i poly} \cell }{A specification of the polygon to clear from the grid \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_afb743eed27facd44c2ed0e59e9f04449_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_afb743eed27facd44c2ed0e59e9f04449_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v removePointsInScanBoundry\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:removePointsInScanBoundry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::removePointsInScanBoundry (const {\b PlanarLaserScan} &  {\i laser_scan})}}
\par
{\bkmkstart AAAAAAABXW}
{\bkmkend AAAAAAABXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Removes points from the grid that lie within a laser scan }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i laser_scan} \cell }{A specification of the laser scan to use for clearing \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a693cf4b2962ea0ffb4e74daf44a317a4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a693cf4b2962ea0ffb4e74daf44a317a4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v segIntersect\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:segIntersect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::PointGrid::segIntersect (const geometry_msgs::Point32 &  {\i v1}, const geometry_msgs::Point32 &  {\i v2}, const geometry_msgs::Point32 &  {\i u1}, const geometry_msgs::Point32 &  {\i u2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXX}
{\bkmkend AAAAAAABXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if two line segmenst intersect }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v1} \cell }{The first point of the first segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i v2} \cell }{The second point of the first segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i u1} \cell }{The first point of the second segment \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i u2} \cell }{The second point of the second segment \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the segments intersect, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_af11952049cf710f3e49d27181a7c09e9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sq_distance\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:sq_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::sq_distance (const geometry_msgs::Point32 &  {\i pt1}, const geometry_msgs::Point32 &  {\i pt2}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABXY}
{\bkmkend AAAAAAABXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the squared distance between two points }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt1} \cell }{The first point \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pt2} \cell }{The second point \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The squared distance between the two points \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_a70991650fe65105f90f31acdab32a830_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateWorld\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:updateWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PointGrid::updateWorld (const std::vector< geometry_msgs::Point > &  {\i footprint}, const std::vector< {\b costmap_2d::Observation} > &  {\i observations}, const std::vector< {\b PlanarLaserScan} > &  {\i laser_scans})}}
\par
{\bkmkstart AAAAAAABXZ}
{\bkmkend AAAAAAABXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B2\'E5\'C8\'EB\'B4\'AB\'B8\'D0\'C6\'F7\'B9\'DB\'B2\'EC\'D6\'B5\'B5\'BDpoint grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'B1\'C7\'B0\'CE\'BB\'D6\'C3\'B5\'C4footprint \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i observations} \cell }{\'B2\'BB\'CD\'AC\'B4\'AB\'B8\'D0\'C6\'F7\'B5\'C4\'B9\'DB\'B2\'E2\'C1\'BF \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i laser_scans} \cell }{\'D3\'C3\'D3\'DA\'C7\'E5\'C9\'A8\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4\'B5\'C4laser\'C9\'A8\'C3\'E8 (the point grid only uses the first scan which is assumed to be the base laser) \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_adb8a9a0665445fe274510a86dd0e8277_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_point_grid_adb8a9a0665445fe274510a86dd0e8277_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cells_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:cells_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::list<geometry_msgs::Point32> > base_local_planner::PointGrid::cells_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYA}
{\bkmkend AAAAAAABYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for the cells in the grid }}\par
}
{\xe \v height_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:height_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::PointGrid::height_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYB}
{\bkmkend AAAAAAABYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height of the grid in cells }}\par
}
{\xe \v max_z_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:max_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::max_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYC}
{\bkmkend AAAAAAABYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height cutoff for adding points as obstacles }}\par
}
{\xe \v origin_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:origin_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Point base_local_planner::PointGrid::origin_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYD}
{\bkmkend AAAAAAABYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The origin point of the grid }}\par
}
{\xe \v points_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:points_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< std::list<geometry_msgs::Point32>* > base_local_planner::PointGrid::points_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYE}
{\bkmkend AAAAAAABYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The lists of points returned by a range search, made a member to save on memory allocation }}\par
}
{\xe \v resolution_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:resolution_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::resolution_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYF}
{\bkmkend AAAAAAABYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The resolution of the grid in meters/cell }}\par
}
{\xe \v sq_min_separation_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:sq_min_separation_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::sq_min_separation_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYG}
{\bkmkend AAAAAAABYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The minimum square distance required between points in the grid }}\par
}
{\xe \v sq_obstacle_range_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:sq_obstacle_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PointGrid::sq_obstacle_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYH}
{\bkmkend AAAAAAABYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The square distance at which we no longer add obstacles to the grid }}\par
}
{\xe \v width_\:base_local_planner::PointGrid}
{\xe \v base_local_planner::PointGrid\:width_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::PointGrid::width_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYI}
{\bkmkend AAAAAAABYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The width of the grid in cells }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b point_grid.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b point_grid.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::Costmap2D::PolygonOutlineCells\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::Costmap2D::PolygonOutlineCells}
{\xe \v costmap_2d::Costmap2D::PolygonOutlineCells}
{\bkmkstart AAAAAAACOO}
{\bkmkend AAAAAAACOO}
\par
{
{\f2 #include <costmap_2d.h>}}\par
costmap_2d::Costmap2D::PolygonOutlineCells \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_1_1_polygon_outline_cells__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PolygonOutlineCells} (const {\b Costmap2D} &costmap, const unsigned char *char_map, std::vector< {\b MapLocation} > &cells)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (unsigned int offset)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b Costmap2D} & {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char * {\b char_map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b MapLocation} > & {\b cells_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PolygonOutlineCells\:costmap_2d::Costmap2D::PolygonOutlineCells}
{\xe \v costmap_2d::Costmap2D::PolygonOutlineCells\:PolygonOutlineCells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::Costmap2D::PolygonOutlineCells::PolygonOutlineCells (const {\b Costmap2D} &  {\i costmap}, const unsigned char *  {\i char_map}, std::vector< {\b MapLocation} > &  {\i cells}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOP}
{\bkmkend AAAAAAACOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:costmap_2d::Costmap2D::PolygonOutlineCells}
{\xe \v costmap_2d::Costmap2D::PolygonOutlineCells\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::Costmap2D::PolygonOutlineCells::operator() (unsigned int  {\i offset}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACOQ}
{\bkmkend AAAAAAACOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_costmap2_d_1_1_polygon_outline_cells_a719a499677280caa41ec7cdde8c2508b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cells_\:costmap_2d::Costmap2D::PolygonOutlineCells}
{\xe \v costmap_2d::Costmap2D::PolygonOutlineCells\:cells_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b MapLocation}>& costmap_2d::Costmap2D::PolygonOutlineCells::cells_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOR}
{\bkmkend AAAAAAACOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v char_map_\:costmap_2d::Costmap2D::PolygonOutlineCells}
{\xe \v costmap_2d::Costmap2D::PolygonOutlineCells\:char_map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char* costmap_2d::Costmap2D::PolygonOutlineCells::char_map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOS}
{\bkmkend AAAAAAACOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:costmap_2d::Costmap2D::PolygonOutlineCells}
{\xe \v costmap_2d::Costmap2D::PolygonOutlineCells\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b Costmap2D}& costmap_2d::Costmap2D::PolygonOutlineCells::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACOT}
{\bkmkend AAAAAAACOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
set_pose.PoseSetter\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v set_pose.PoseSetter}
{\xe \v set_pose.PoseSetter}
{\bkmkstart AAAAAAADVK}
{\bkmkend AAAAAAADVK}
\'C0\'E0 set_pose.PoseSetter \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classset__pose_1_1_pose_setter__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
set_pose.PoseSetter \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classset__pose_1_1_pose_setter__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b __init__} (self, {\b pose}, {\b stamp}, {\b publish_time})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b peer_subscribe} (self, topic_name, topic_publish, peer_publish)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pose}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b stamp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b publish_time}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v __init__\:set_pose.PoseSetter}
{\xe \v set_pose.PoseSetter\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def set_pose.PoseSetter.__init__ (  {\i self},   {\i pose},   {\i stamp},   {\i publish_time})}}
\par
{\bkmkstart AAAAAAADVL}
{\bkmkend AAAAAAADVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v peer_subscribe\:set_pose.PoseSetter}
{\xe \v set_pose.PoseSetter\:peer_subscribe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def set_pose.PoseSetter.peer_subscribe (  {\i self},   {\i topic_name},   {\i topic_publish},   {\i peer_publish})}}
\par
{\bkmkstart AAAAAAADVM}
{\bkmkend AAAAAAADVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pose\:set_pose.PoseSetter}
{\xe \v set_pose.PoseSetter\:pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.PoseSetter.pose}}
\par
{\bkmkstart AAAAAAADVN}
{\bkmkend AAAAAAADVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_time\:set_pose.PoseSetter}
{\xe \v set_pose.PoseSetter\:publish_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.PoseSetter.publish_time}}
\par
{\bkmkstart AAAAAAADVO}
{\bkmkend AAAAAAADVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stamp\:set_pose.PoseSetter}
{\xe \v set_pose.PoseSetter\:stamp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
set_pose.PoseSetter.stamp}}
\par
{\bkmkstart AAAAAAADVP}
{\bkmkend AAAAAAADVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/test/{\b set_pose.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn::PotarrPoint\'BD\'E1\'B9\'B9\'CC\'E5 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn::PotarrPoint}
{\xe \v navfn::PotarrPoint}
{\bkmkstart AAAAAAADUM}
{\bkmkend AAAAAAADUM}
\par
{
{\f2 #include <potarr_point.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b z}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b pot_value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pot_value\:navfn::PotarrPoint}
{\xe \v navfn::PotarrPoint\:pot_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::PotarrPoint::pot_value}}
\par
{\bkmkstart AAAAAAADUN}
{\bkmkend AAAAAAADUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:navfn::PotarrPoint}
{\xe \v navfn::PotarrPoint\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::PotarrPoint::x}}
\par
{\bkmkstart AAAAAAADUO}
{\bkmkend AAAAAAADUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:navfn::PotarrPoint}
{\xe \v navfn::PotarrPoint\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::PotarrPoint::y}}
\par
{\bkmkstart AAAAAAADUP}
{\bkmkend AAAAAAADUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z\:navfn::PotarrPoint}
{\xe \v navfn::PotarrPoint\:z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float navfn::PotarrPoint::z}}
\par
{\bkmkstart AAAAAAADUQ}
{\bkmkend AAAAAAADUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'BD\'E1\'B9\'B9\'CC\'E5\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
navfn/include/navfn/{\b potarr_point.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::PotentialCalculator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator}
{\bkmkstart AAAAAAADJS}
{\bkmkend AAAAAAADJS}
\par
{
{\f2 #include <potential_calculator.h>}}\par
\'C0\'E0 global_planner::PotentialCalculator \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_potential_calculator__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PotentialCalculator} (int nx, int ny)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~PotentialCalculator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b calculatePotential} (float *potential, unsigned char cost, int {\b n}, float prev_potential=-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setSize} (int nx, int ny)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b toIndex} (int x, int y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nx_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ny_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ns_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PotentialCalculator\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:PotentialCalculator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::PotentialCalculator::PotentialCalculator (int  {\i nx}, int  {\i ny}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADJT}
{\bkmkend AAAAAAADJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_potential_calculator_a9e785461ad18ae3e6a393dedcf903a6a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~PotentialCalculator\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:~PotentialCalculator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual global_planner::PotentialCalculator::~PotentialCalculator (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADJU}
{\bkmkend AAAAAAADJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v calculatePotential\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:calculatePotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float global_planner::PotentialCalculator::calculatePotential (float *  {\i potential}, unsigned char  {\i cost}, int  {\i n}, float  {\i prev_potential} = {\f2 -1}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADJV}
{\bkmkend AAAAAAADJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'B1\'BB {\b global_planner::QuadraticCalculator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADJW \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_potential_calculator_a4befc4819934603d43c8dc539f445fd4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setSize\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void global_planner::PotentialCalculator::setSize (int  {\i nx}, int  {\i ny}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADJX}
{\bkmkend AAAAAAADJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets or resets the size of the map }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i nx} \cell }{The x size of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ny} \cell }{The y size of the map sets or resets the size of the map \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_potential_calculator_a9ff19259198704723eb62d515ea91e58_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toIndex\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:toIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::PotentialCalculator::toIndex (int  {\i x}, int  {\i y}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJY}
{\bkmkend AAAAAAADJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ns_\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:ns_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::PotentialCalculator::ns_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADJZ}
{\bkmkend AAAAAAADJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
size of grid, in pixels \par
}}
{\xe \v nx_\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:nx_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::PotentialCalculator::nx_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKA}
{\bkmkend AAAAAAADKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ny_\:global_planner::PotentialCalculator}
{\xe \v global_planner::PotentialCalculator\:ny_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::PotentialCalculator::ny_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKB}
{\bkmkend AAAAAAADKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b potential_calculator.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::PreferForwardCostFunction\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction}
{\bkmkstart AAAAAAABYJ}
{\bkmkend AAAAAAABYJ}
\par
{
{\f2 #include <prefer_forward_cost_function.h>}}\par
\'C0\'E0 base_local_planner::PreferForwardCostFunction \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_prefer_forward_cost_function__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::PreferForwardCostFunction \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_prefer_forward_cost_function__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PreferForwardCostFunction} (double penalty)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~PreferForwardCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} ({\b Trajectory} &traj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prepare} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPenalty} (double penalty)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b penalty_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PreferForwardCostFunction\:base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction\:PreferForwardCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::PreferForwardCostFunction::PreferForwardCostFunction (double  {\i penalty}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYK}
{\bkmkend AAAAAAABYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~PreferForwardCostFunction\:base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction\:~PreferForwardCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::PreferForwardCostFunction::~PreferForwardCostFunction (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYL}
{\bkmkend AAAAAAABYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v prepare\:base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction\:prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::PreferForwardCostFunction::prepare (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYM}
{\bkmkend AAAAAAABYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'B3\'A3\'D3\'C3\'B5\'C4\'B1\'E4\'C1\'BF \'B1\'CF\'BE\'B9\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD\'A3\'AC\'D7\'D3\'C0\'E0\'D6\'D0\'B1\'D8\'D0\'EB\'D6\'D8\'D0\'B4\'B8\'C3\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v scoreTrajectory\:base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PreferForwardCostFunction::scoreTrajectory ({\b Trajectory} &  {\i traj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYN}
{\bkmkend AAAAAAABYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C6\'C0\'B7\'D6\'A3\'AC\'D2\'B2\'CA\'C7\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v setPenalty\:base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction\:setPenalty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::PreferForwardCostFunction::setPenalty (double  {\i penalty}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYO}
{\bkmkend AAAAAAABYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v penalty_\:base_local_planner::PreferForwardCostFunction}
{\xe \v base_local_planner::PreferForwardCostFunction\:penalty_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::PreferForwardCostFunction::penalty_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYP}
{\bkmkend AAAAAAABYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b prefer_forward_cost_function.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b prefer_forward_cost_function.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::QuadraticCalculator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::QuadraticCalculator}
{\xe \v global_planner::QuadraticCalculator}
{\bkmkstart AAAAAAADKC}
{\bkmkend AAAAAAADKC}
\par
{
{\f2 #include <quadratic_calculator.h>}}\par
\'C0\'E0 global_planner::QuadraticCalculator \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_quadratic_calculator__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::QuadraticCalculator \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_quadratic_calculator__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b QuadraticCalculator} (int nx, int ny)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b calculatePotential} (float *potential, unsigned char cost, int {\b n}, float prev_potential)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v QuadraticCalculator\:global_planner::QuadraticCalculator}
{\xe \v global_planner::QuadraticCalculator\:QuadraticCalculator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::QuadraticCalculator::QuadraticCalculator (int  {\i nx}, int  {\i ny}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADKD}
{\bkmkend AAAAAAADKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v calculatePotential\:global_planner::QuadraticCalculator}
{\xe \v global_planner::QuadraticCalculator\:calculatePotential}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float global_planner::QuadraticCalculator::calculatePotential (float *  {\i potential}, unsigned char  {\i cost}, int  {\i n}, float  {\i prev_potential}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADJW}
{\bkmkend AAAAAAADJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b global_planner::PotentialCalculator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADJV \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b quadratic_calculator.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/src/{\b quadratic_calculator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core::RecoveryBehavior\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core::RecoveryBehavior}
{\xe \v nav_core::RecoveryBehavior}
{\bkmkstart AAAAAAADPU}
{\bkmkend AAAAAAADPU}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'C4\'A3\'BF\'E9\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par
{
{\f2 #include <recovery_behavior.h>}}\par
\'C0\'E0 nav_core::RecoveryBehavior \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classnav__core_1_1_recovery_behavior__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b initialize} (std::string name, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *global_costmap, {\b costmap_2d::Costmap2DROS} *local_costmap)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RecoveryBehavior} \'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b runBehavior} ()=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'CB\'D0\'D0RecoveryBehavior }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~RecoveryBehavior} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BD\'D3\'BF\'DA\'B5\'C4\'D0\'E9\'CE\'F6\'B9\'B9 }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RecoveryBehavior} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'C4\'A3\'BF\'E9\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~RecoveryBehavior\:nav_core::RecoveryBehavior}
{\xe \v nav_core::RecoveryBehavior\:~RecoveryBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual nav_core::RecoveryBehavior::~RecoveryBehavior (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPV}
{\bkmkend AAAAAAADPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BD\'D3\'BF\'DA\'B5\'C4\'D0\'E9\'CE\'F6\'B9\'B9 }}\par
}
{\xe \v RecoveryBehavior\:nav_core::RecoveryBehavior}
{\xe \v nav_core::RecoveryBehavior\:RecoveryBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_core::RecoveryBehavior::RecoveryBehavior (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADPW}
{\bkmkend AAAAAAADPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v initialize\:nav_core::RecoveryBehavior}
{\xe \v nav_core::RecoveryBehavior\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void nav_core::RecoveryBehavior::initialize (std::string  {\i name}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i global_costmap}, {\b costmap_2d::Costmap2DROS} *  {\i local_costmap}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACKL}
{\bkmkend AAAAAAACKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b RecoveryBehavior} \'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{transform listener \'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_costmap} \cell }{\'D6\'B8\'CF\'F2 global_costmap \'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i local_costmap} \cell }{\'D6\'B8\'CF\'F2 local_costmap \'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}{
\'D4\'DA {\b move_slow_and_clear::MoveSlowAndClear} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADOL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b rotate_recovery::RotateRecovery} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPX \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b clear_costmap_recovery::ClearCostmapRecovery} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKK \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\xe \v runBehavior\:nav_core::RecoveryBehavior}
{\xe \v nav_core::RecoveryBehavior\:runBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void nav_core::RecoveryBehavior::runBehavior (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAACKN}
{\bkmkend AAAAAAACKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'CB\'D0\'D0RecoveryBehavior }}\par
{
\'D4\'DA {\b clear_costmap_recovery::ClearCostmapRecovery} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b move_slow_and_clear::MoveSlowAndClear} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADON \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b rotate_recovery::RotateRecovery} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADPY \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_core/include/nav_core/{\b recovery_behavior.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rotate_recovery::RotateRecovery\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery}
{\bkmkstart AAAAAAADUS}
{\bkmkend AAAAAAADUS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'BB\'E1\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'B6\'A8\'B5\'E3\'D0\'FD\'D7\'AA\'D2\'BB\'C8\'A6\'A3\'AC\'B3\'A2\'CA\'D4\'C7\'E5\'B3\'FD\'B5\'F7\'D6\'DC\'CE\'A7\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF }}\par
{
{\f2 #include <rotate_recovery.h>}}\par
\'C0\'E0 rotate_recovery::RotateRecovery \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classrotate__recovery_1_1_rotate_recovery__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
rotate_recovery::RotateRecovery \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classrotate__recovery_1_1_rotate_recovery__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b RotateRecovery} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor, make sure to call initialize in addition to actually initialize the object }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, tf2_ros::Buffer *, {\b costmap_2d::Costmap2DROS} *, {\b costmap_2d::Costmap2DROS} *local_costmap)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b runBehavior} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C6\'F4\'B6\'AF\'D0\'FD\'D7\'AA\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~RotateRecovery} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b local_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_granularity_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_rotational_vel_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_rotational_vel_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_th_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b frequency_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::CostmapModel} * {\b world_model_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'BB\'E1\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'B6\'A8\'B5\'E3\'D0\'FD\'D7\'AA\'D2\'BB\'C8\'A6\'A3\'AC\'B3\'A2\'CA\'D4\'C7\'E5\'B3\'FD\'B5\'F7\'D6\'DC\'CE\'A7\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v RotateRecovery\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:RotateRecovery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
rotate_recovery::RotateRecovery::RotateRecovery ()}}
\par
{\bkmkstart AAAAAAADUT}
{\bkmkend AAAAAAADUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor, make sure to call initialize in addition to actually initialize the object }}\par
}
{\xe \v ~RotateRecovery\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:~RotateRecovery}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
rotate_recovery::RotateRecovery::~RotateRecovery ()}}
\par
{\bkmkstart AAAAAAADUU}
{\bkmkend AAAAAAADUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v initialize\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void rotate_recovery::RotateRecovery::initialize (std::string  {\i name}, tf2_ros::Buffer * , {\b costmap_2d::Costmap2DROS} * , {\b costmap_2d::Costmap2DROS} *  {\i local_costmap}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPX}
{\bkmkend AAAAAAADPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'AF\'CA\'FD }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Namespace used in initialization \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{(unused) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_costmap} \cell }{(unused) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i local_costmap} \cell }{\'D6\'B8\'CF\'F2\'BE\'D6\'B2\'BF\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::RecoveryBehavior} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classrotate__recovery_1_1_rotate_recovery_a609f496f7a9f916f526a40a517c69204_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v runBehavior\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:runBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void rotate_recovery::RotateRecovery::runBehavior (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADPY}
{\bkmkend AAAAAAADPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C6\'F4\'B6\'AF\'D0\'FD\'D7\'AA\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA }}\par
{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::RecoveryBehavior} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACKN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classrotate__recovery_1_1_rotate_recovery_a8a95adca66937ca4d01fb7a584b905f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v acc_lim_th_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:acc_lim_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rotate_recovery::RotateRecovery::acc_lim_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADUV}
{\bkmkend AAAAAAADUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v frequency_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:frequency_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rotate_recovery::RotateRecovery::frequency_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADUW}
{\bkmkend AAAAAAADUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool rotate_recovery::RotateRecovery::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADUX}
{\bkmkend AAAAAAADUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v local_costmap_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:local_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* rotate_recovery::RotateRecovery::local_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADUY}
{\bkmkend AAAAAAADUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_rotational_vel_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:max_rotational_vel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rotate_recovery::RotateRecovery::max_rotational_vel_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADUZ}
{\bkmkend AAAAAAADUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_rotational_vel_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:min_rotational_vel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rotate_recovery::RotateRecovery::min_rotational_vel_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADVA}
{\bkmkend AAAAAAADVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sim_granularity_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:sim_granularity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rotate_recovery::RotateRecovery::sim_granularity_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADVB}
{\bkmkend AAAAAAADVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tolerance_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double rotate_recovery::RotateRecovery::tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADVC}
{\bkmkend AAAAAAADVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v world_model_\:rotate_recovery::RotateRecovery}
{\xe \v rotate_recovery::RotateRecovery\:world_model_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::CostmapModel}* rotate_recovery::RotateRecovery::world_model_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADVD}
{\bkmkend AAAAAAADVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
rotate_recovery/include/rotate_recovery/{\b rotate_recovery.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
rotate_recovery/src/{\b rotate_recovery.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::SimpleScoredSamplingPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner}
{\bkmkstart AAAAAAABYQ}
{\bkmkend AAAAAAABYQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B8\'F8\'B6\'A8\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'BA\'CD\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD\'BC\'C6\'CB\'E3\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3.\'D5\'E2\'C0\'EF\'BC\'D9\'C9\'E8\'B4\'FA\'BC\'DB\'D4\'BD\'D0\'A1\'D4\'BD\'BA\'C3\'CD\'AC\'CA\'B1\'B8\'BA\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB\'D2\'E2\'CE\'B6\'D7\'C5\'CE\'DE\'C7\'EE\'B4\'F3 }}\par
{
{\f2 #include <simple_scored_sampling_planner.h>}}\par
\'C0\'E0 base_local_planner::SimpleScoredSamplingPlanner \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_scored_sampling_planner__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::SimpleScoredSamplingPlanner \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_scored_sampling_planner__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~SimpleScoredSamplingPlanner} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimpleScoredSamplingPlanner} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimpleScoredSamplingPlanner} (std::vector< {\b TrajectorySampleGenerator} * > gen_list, std::vector< {\b TrajectoryCostFunction} * > &critics, int max_samples=-1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} ({\b Trajectory} &traj, double best_traj_cost)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b findBestTrajectory} ({\b Trajectory} &traj, std::vector< {\b Trajectory} > *all_explored=0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b TrajectorySampleGenerator} * > {\b gen_list_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< {\b TrajectoryCostFunction} * > {\b critics_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b max_samples_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B8\'F8\'B6\'A8\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'BA\'CD\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD\'BC\'C6\'CB\'E3\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3.\'D5\'E2\'C0\'EF\'BC\'D9\'C9\'E8\'B4\'FA\'BC\'DB\'D4\'BD\'D0\'A1\'D4\'BD\'BA\'C3\'CD\'AC\'CA\'B1\'B8\'BA\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB\'D2\'E2\'CE\'B6\'D7\'C5\'CE\'DE\'C7\'EE\'B4\'F3 \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
TrajectorySearch\'BD\'D3\'BF\'DA\'B5\'C4\'BC\'F2\'B5\'A5\'BA\'CD\'C2\'B3\'B0\'F4\'B5\'C4\'CA\'B5\'CF\'D6\'A3\'AC\'C8\'E7\'B9\'FB\'CF\'EB\'D3\'C3\'B8\'FC\'D3\'D0\'D0\'A7\'C2\'CA\'B5\'C4\'CB\'D1\'CB\'F7\'A3\'AC\'BF\'C9\'D2\'D4\'BF\'BC\'C2\'C7search heuristics, parallel search \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~SimpleScoredSamplingPlanner\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:~SimpleScoredSamplingPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::SimpleScoredSamplingPlanner::~SimpleScoredSamplingPlanner (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYR}
{\bkmkend AAAAAAABYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SimpleScoredSamplingPlanner\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:SimpleScoredSamplingPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::SimpleScoredSamplingPlanner::SimpleScoredSamplingPlanner (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABYS}
{\bkmkend AAAAAAABYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SimpleScoredSamplingPlanner\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:SimpleScoredSamplingPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::SimpleScoredSamplingPlanner::SimpleScoredSamplingPlanner (std::vector< {\b TrajectorySampleGenerator} * >  {\i gen_list}, std::vector< {\b TrajectoryCostFunction} * > &  {\i critics}, int  {\i max_samples} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAABYT}
{\bkmkend AAAAAAABYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B4\'A6\'C0\'ED\'D2\'BB\'CF\'B5\'C1\'D0\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'BA\'CD\'C6\'C0\'B7\'D6\'C6\'F7\'A1\'A3\'C6\'C0\'B7\'D6\'C6\'F7\'B7\'B5\'BB\'D8\'B4\'FA\'BC\'DB\'B4\'F3\'D3\'DA0\'A3\'AC\'C8\'E7\'B9\'FB\'D0\'A1\'D3\'DA0\'D2\'E2\'CE\'B6\'D7\'C5\'CE\'DE\'D0\'A7\'C2\'B7\'BE\'B6 \'B2\'FA\'C9\'FA\'C6\'F7\'B2\'BB\'CA\'C7\'D6\'AE\'C7\'B0\'B5\'C4\'C4\'C7\'B8\'F6\'A3\'AC\'CA\'C7fallback\'B2\'FA\'C9\'FA\'C6\'F7\'A3\'AC\'D6\'BB\'D3\'D0\'D4\'DA\'CF\'C8\'C7\'B0\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'C3\'BB\'D3\'D0\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'C2\'B7\'BE\'B6\'CA\'B1\'A3\'AC\'CB\'FB\'C3\'C7\'B2\'C5\'C8\'A5\'BC\'C6\'CB\'E3 \'BD\'AB\'BB\'E1\'D3\'C3\'B5\'BD\'C3\'BF\'B8\'F6\'B2\'FA\'C9\'FA\'C6\'F7\'D6\'B1\'B5\'BD\'B2\'BB\'D4\'DA\'B7\'B5\'BB\'D8\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'BB\'F2\'D5\'DF\'BC\'C6\'CA\'FD\'C2\'FA\'D7\'E3\'C1\'CB\'D2\'AA\'C7\'F3 \'C8\'BB\'BA\'F3\'D6\'D8\'D6\'C3\'BC\'C6\'CA\'FD\'B2\'A2\'C7\'D2\'B3\'A2\'CA\'D4\'C1\'D0\'B1\'ED\'D6\'D0\'B5\'C4\'CF\'C2\'D2\'BB\'B8\'F6 \'C8\'E7\'B9\'FBmax_samples = -1 (\'C4\'AC\'C8\'CF\'D6\'B5)\'A3\'BA\'C3\'BF\'D2\'BB\'B8\'F6\'B2\'C9\'D1\'F9\'B9\'E6\'BB\'AE\'C6\'F7\'BB\'E1\'B3\'D6\'D0\'F8\'B5\'C4\'B5\'F7\'D3\'C3\'B2\'FA\'C9\'FA\'C6\'F7\'D6\'B1\'B5\'BD\'B2\'FA\'C9\'FA\'C6\'F7\'B1\'E9\'C0\'FA\'C1\'CB\'CB\'F9\'D3\'D0\'B5\'C4\'D1\'F9\'B1\'BE Takes a list of generators and critics. Critics return costs > 0, or negative costs for invalid trajectories. Generators other than the first are fallback generators, meaning they only get to generate if the previous generator did not find a valid trajectory. Will use every generator until it stops returning trajectories or count reaches max_samples. Then resets count and tries for the next in the list. passing max_samples = -1 (default): Each Sampling planner will continue to call generator until generator runs out of samples (or forever if that never happens) \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v findBestTrajectory\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:findBestTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleScoredSamplingPlanner::findBestTrajectory ({\b Trajectory} &  {\i traj}, std::vector< {\b Trajectory} > *  {\i all_explored} = {\f2 0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABYU}
{\bkmkend AAAAAAABYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calls generator until generator has no more samples or max_samples is reached. For each generated traj, calls critics in turn. If any critic returns negative value, that value is assumed as costs, else the costs are the sum of all critics result. Returns true and sets the traj parameter to the first trajectory with minimal non-negative costs if sampling yields trajectories with non-negative costs, else returns false.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i traj} \cell }{The container to write the result to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i all_explored} \cell }{pass NULL or a container to collect all trajectories for debugging (has a penalty) \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectorySearch} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_scored_sampling_planner_ad1a365b0504879a2e57f1a9d713acdc4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_scored_sampling_planner_ad1a365b0504879a2e57f1a9d713acdc4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v scoreTrajectory\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::SimpleScoredSamplingPlanner::scoreTrajectory ({\b Trajectory} &  {\i traj}, double  {\i best_traj_cost})}}
\par
{\bkmkstart AAAAAAABYW}
{\bkmkend AAAAAAABYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
runs all scoring functions over the trajectory creating a weigthed sum of positive costs, aborting as soon as a negative cost are found or costs greater than positive best_traj_cost accumulated \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_scored_sampling_planner_ac11a2d2fbf69d6ed55f720c5ebe1b541_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_scored_sampling_planner_ac11a2d2fbf69d6ed55f720c5ebe1b541_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v critics_\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:critics_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b TrajectoryCostFunction}*> base_local_planner::SimpleScoredSamplingPlanner::critics_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYX}
{\bkmkend AAAAAAABYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gen_list_\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:gen_list_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<{\b TrajectorySampleGenerator}*> base_local_planner::SimpleScoredSamplingPlanner::gen_list_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYY}
{\bkmkend AAAAAAABYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_samples_\:base_local_planner::SimpleScoredSamplingPlanner}
{\xe \v base_local_planner::SimpleScoredSamplingPlanner\:max_samples_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::SimpleScoredSamplingPlanner::max_samples_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABYZ}
{\bkmkend AAAAAAABYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b simple_scored_sampling_planner.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b simple_scored_sampling_planner.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::SimpleTrajectoryGenerator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator}
{\bkmkstart AAAAAAABZA}
{\bkmkend AAAAAAABZA}
\par
{
{\f2 #include <simple_trajectory_generator.h>}}\par
\'C0\'E0 base_local_planner::SimpleTrajectoryGenerator \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::SimpleTrajectoryGenerator \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimpleTrajectoryGenerator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~SimpleTrajectoryGenerator} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialise} (const Eigen::Vector3f &pos, const Eigen::Vector3f &vel, const Eigen::Vector3f &{\b goal}, {\b base_local_planner::LocalPlannerLimits} *limits, const Eigen::Vector3f &vsamples, std::vector< Eigen::Vector3f > additional_samples, bool discretize_by_time=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialise} (const Eigen::Vector3f &pos, const Eigen::Vector3f &vel, const Eigen::Vector3f &{\b goal}, {\b base_local_planner::LocalPlannerLimits} *limits, const Eigen::Vector3f &vsamples, bool discretize_by_time=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'E2\'C0\'EF\'D6\'D8\'D4\'D8\'C1\'CBinitialise\'A3\'AC\'B8\'FA\'C9\'CF\'D2\'BB\'B8\'F6initialise\'CF\'E0\'B1\'C8\'A3\'AC\'C9\'D9\'C1\'CB\'CA\'E4\'C8\'EB\'B2\'CE\'CA\'FDadditional_samples }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setParameters} (double sim_time, double sim_granularity, double angular_sim_granularity, bool use_dwa=false, double sim_period=0.0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D6\'BB\'D3\'C3\'D4\'DA\'B2\'CE\'CA\'FD\'B1\'BB\'B8\'C4\'B1\'E4\'B5\'C4\'CA\'B1\'BA\'F2\'A3\'AC\'B8\'C3\'BA\'AF\'CA\'FD\'B2\'C5\'B1\'BB\'B5\'F7\'D3\'C3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b hasMoreTrajectories} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nextTrajectory} ({\b Trajectory} &traj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b generateTrajectory} (Eigen::Vector3f pos, Eigen::Vector3f vel, Eigen::Vector3f sample_target_vel, {\b base_local_planner::Trajectory} &traj)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Eigen::Vector3f {\b computeNewPositions} (const Eigen::Vector3f &pos, const Eigen::Vector3f &vel, double dt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Eigen::Vector3f {\b computeNewVelocities} (const Eigen::Vector3f &sample_target_vel, const Eigen::Vector3f &vel, Eigen::Vector3f acclimits, double dt)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b next_sample_index_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< Eigen::Vector3f > {\b sample_params_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::LocalPlannerLimits} * {\b limits_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eigen::Vector3f {\b pos_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Eigen::Vector3f {\b vel_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b continued_acceleration_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b discretize_by_time_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_time_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_granularity_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angular_sim_granularity_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b use_dwa_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_period_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
generates trajectories based on equi-distant discretisation of the degrees of freedom. This is supposed to be a simple and robust implementation of the {\b TrajectorySampleGenerator} interface, more efficient implementations are thinkable.\par
This can be used for both dwa and trajectory rollout approaches. As an example, assuming these values: sim_time = 1s, sim_period=200ms, dt = 200ms, vsamples_x=5, acc_limit_x = 1m/s^2, vel_x=0 (robot at rest, values just for easy calculations) dwa_planner will sample max-x-velocities from 0m/s to 0.2m/s. trajectory rollout approach will sample max-x-velocities 0m/s up to 1m/s trajectory rollout approach does so respecting the acceleration limit, so it gradually increases velocity \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v SimpleTrajectoryGenerator\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:SimpleTrajectoryGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::SimpleTrajectoryGenerator::SimpleTrajectoryGenerator (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZB}
{\bkmkend AAAAAAABZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~SimpleTrajectoryGenerator\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:~SimpleTrajectoryGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::SimpleTrajectoryGenerator::~SimpleTrajectoryGenerator (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABZC}
{\bkmkend AAAAAAABZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v computeNewPositions\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:computeNewPositions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f base_local_planner::SimpleTrajectoryGenerator::computeNewPositions (const Eigen::Vector3f &  {\i pos}, const Eigen::Vector3f &  {\i vel}, double  {\i dt}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABZD}
{\bkmkend AAAAAAABZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a4762e662d557328a98abad8155501626_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeNewVelocities\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:computeNewVelocities}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f base_local_planner::SimpleTrajectoryGenerator::computeNewVelocities (const Eigen::Vector3f &  {\i sample_target_vel}, const Eigen::Vector3f &  {\i vel}, Eigen::Vector3f  {\i acclimits}, double  {\i dt}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABZE}
{\bkmkend AAAAAAABZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
change vel using acceleration limits to converge towards sample_target-vel \'B8\'F9\'BE\'DD\'BC\'D3\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6\'B8\'C4\'B1\'E4\'CB\'D9\'B6\'C8\'A3\'AC\'CF\'F2\'B2\'C9\'D1\'F9\'C4\'BF\'B1\'EA\'CB\'D9\'B6\'C8\'CA\'D5\'C1\'B2 \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_abeea221947f5062cdb481c9888c33075_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generateTrajectory\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:generateTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleTrajectoryGenerator::generateTrajectory (Eigen::Vector3f  {\i pos}, Eigen::Vector3f  {\i vel}, Eigen::Vector3f  {\i sample_target_vel}, {\b base_local_planner::Trajectory} &  {\i traj})}}
\par
{\bkmkstart AAAAAAABZF}
{\bkmkend AAAAAAABZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pos} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'B1\'C7\'B0\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vel} \cell }{\'C6\'DA\'CD\'FB\'B2\'C9\'D1\'F9\'B5\'C4\'CB\'D9\'B6\'C8 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a09675e3d736eaf9ff3b8c8bc3587b768_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a09675e3d736eaf9ff3b8c8bc3587b768_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v hasMoreTrajectories\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:hasMoreTrajectories}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleTrajectoryGenerator::hasMoreTrajectories (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZG}
{\bkmkend AAAAAAABZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'CA\'C7\'B7\'F1\'BF\'C9\'D2\'D4\'B2\'FA\'C9\'FA\'B6\'E0\'B8\'F6\'B9\'EC\'BC\'A3\par
\'B2\'FA\'C9\'FA\'C6\'F7\'CA\'C7\'B7\'F1\'BF\'C9\'D2\'D4\'C9\'FA\'B3\'C9\'B6\'E0\'B8\'F6\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6 \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectorySampleGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_ab2e9ca5e1468974af51acc17e5c7aec2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialise\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:initialise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::SimpleTrajectoryGenerator::initialise (const Eigen::Vector3f &  {\i pos}, const Eigen::Vector3f &  {\i vel}, const Eigen::Vector3f &  {\i goal}, {\b base_local_planner::LocalPlannerLimits} *  {\i limits}, const Eigen::Vector3f &  {\i vsamples}, bool  {\i discretize_by_time} = {\f2 false})}}
\par
{\bkmkstart AAAAAAABZI}
{\bkmkend AAAAAAABZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'E2\'C0\'EF\'D6\'D8\'D4\'D8\'C1\'CBinitialise\'A3\'AC\'B8\'FA\'C9\'CF\'D2\'BB\'B8\'F6initialise\'CF\'E0\'B1\'C8\'A3\'AC\'C9\'D9\'C1\'CB\'CA\'E4\'C8\'EB\'B2\'CE\'CA\'FDadditional_samples }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pos} \cell }{\'B5\'B1\'C7\'B0\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vel} \cell }{\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i limits} \cell }{\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vsamples} \cell }{in how many samples to divide the given dimension \'B7\'D6\'B3\'C9\'B6\'E0\'C9\'D9\'B8\'E7\'D1\'F9\'B1\'BE \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i use_acceleration_limits} \cell }{true\'CA\'B1\'A3\'AC\'D3\'C3\'BF\'CD\'B9\'DB\'CE\'EF\'C0\'ED\'C4\'A3\'D0\'CD, \'B2\'BB\'C8\'BB\'D3\'C3\'C0\'ED\'CF\'EB\'B5\'C4\'BB\'FA\'C6\'F7\'C8\'CB\'C4\'A3\'D0\'CD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i discretize_by_time} \cell }{\'C8\'E7\'B9\'FB\'CE\'AAtrue, \'C2\'B7\'BE\'B6\'BB\'F9\'D3\'DA\'CF\'E0\'CD\'AC\'CA\'B1\'BC\'E4\'B2\'BD\'B3\'A4\'B6\'CB\'B1\'BB\'B7\'D6\'B6\'CE\'A3\'AC\'B2\'BB\'C8\'BB\'BB\'F9\'D3\'DA\'B5\'C8\'BE\'E0\'B5\'C4\'B2\'BD\'B3\'A4 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a56881a7d1e6cf7027eb2243a764dc0fa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initialise\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:initialise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::SimpleTrajectoryGenerator::initialise (const Eigen::Vector3f &  {\i pos}, const Eigen::Vector3f &  {\i vel}, const Eigen::Vector3f &  {\i goal}, {\b base_local_planner::LocalPlannerLimits} *  {\i limits}, const Eigen::Vector3f &  {\i vsamples}, std::vector< Eigen::Vector3f >  {\i additional_samples}, bool  {\i discretize_by_time} = {\f2 false})}}
\par
{\bkmkstart AAAAAAABZJ}
{\bkmkend AAAAAAABZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pos} \cell }{\'B5\'B1\'C7\'B0\'CE\'BB\'D6\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vel} \cell }{\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i limits} \cell }{\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vsamples} \cell }{in how many samples to divide the given dimension \'B2\'C9\'D1\'F9\'CB\'D9\'B6\'C8\'A3\'AC\'B7\'D6\'B3\'C9\'B6\'E0\'C9\'D9\'B8\'E7\'D1\'F9\'B1\'BE \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i use_acceleration_limits} \cell }{true\'CA\'B1\'A3\'AC\'D3\'C3\'BF\'CD\'B9\'DB\'CE\'EF\'C0\'ED\'C4\'A3\'D0\'CD, \'B2\'BB\'C8\'BB\'D3\'C3\'C0\'ED\'CF\'EB\'B5\'C4\'BB\'FA\'C6\'F7\'C8\'CB\'C4\'A3\'D0\'CD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i additional_samples} \cell }{(deprecated): Additional velocity samples to generate individual trajectories from. \'D3\'C3\'C0\'B4\'B2\'FA\'C9\'FA\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'B8\'BD\'BC\'D3\'B5\'C4\'CB\'D9\'B6\'C8\'D1\'F9\'B1\'BE(\'B2\'BB\'D4\'F5\'C3\'B4\'D3\'C3\'B5\'BD) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i discretize_by_time} \cell }{\'C8\'E7\'B9\'FB\'CE\'AAtrue, \'C2\'B7\'BE\'B6\'BB\'F9\'D3\'DA\'CF\'E0\'CD\'AC\'CA\'B1\'BC\'E4\'B2\'BD\'B3\'A4\'B6\'CB\'B1\'BB\'B7\'D6\'B6\'CE\'A3\'AC\'B2\'BB\'C8\'BB\'BB\'F9\'D3\'DA\'B5\'C8\'BE\'E0\'B5\'C4\'B2\'BD\'B3\'A4 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a0810ac35a39d3d7ccc1c19a862e97fbf_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a0810ac35a39d3d7ccc1c19a862e97fbf_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v nextTrajectory\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:nextTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleTrajectoryGenerator::nextTrajectory ({\b Trajectory} &  {\i comp_traj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABZK}
{\bkmkend AAAAAAABZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'CA\'C7\'B7\'F1\'BF\'C9\'D2\'D4\'B2\'FA\'C9\'FA\'B6\'E0\'B8\'F6\'B9\'EC\'BC\'A3\par
\'B2\'FA\'C9\'FA\'BA\'CD\'B7\'B5\'BB\'D8\'CF\'C2\'B8\'F6\'B2\'C9\'D1\'F9\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6 \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectorySampleGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_adb064b57ea297fc3810e185861e444e8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setParameters\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:setParameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::SimpleTrajectoryGenerator::setParameters (double  {\i sim_time}, double  {\i sim_granularity}, double  {\i angular_sim_granularity}, bool  {\i use_dwa} = {\f2 false}, double  {\i sim_period} = {\f2 0.0})}}
\par
{\bkmkstart AAAAAAABZM}
{\bkmkend AAAAAAABZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D6\'BB\'D3\'C3\'D4\'DA\'B2\'CE\'CA\'FD\'B1\'BB\'B8\'C4\'B1\'E4\'B5\'C4\'CA\'B1\'BA\'F2\'A3\'AC\'B8\'C3\'BA\'AF\'CA\'FD\'B2\'C5\'B1\'BB\'B5\'F7\'D3\'C3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sim_granularity} \cell }{granularity of collision detection \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i angular_sim_granularity} \cell }{angular granularity of collision detection \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i use_dwa} \cell }{\'CA\'C7\'B7\'F1\'CA\'B9\'D3\'C3DWA\'A3\'A8\'B2\'BB\'CA\'C7\'D4\'F2\'CA\'B9\'D3\'C3trajectory rollout\'A3\'A9 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sim_period} \cell }{\'CD\'AC\'D2\'BB\'B9\'EC\'BC\'A3\'D6\'D0\'C1\'BD\'B5\'E3\'D6\'AE\'BC\'E4\'B5\'C4\'BE\'E0\'C0\'EB \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_simple_trajectory_generator_a9ce8e2d22eafe3f2a2d2daf236e1ce83_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v angular_sim_granularity_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:angular_sim_granularity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::SimpleTrajectoryGenerator::angular_sim_granularity_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZN}
{\bkmkend AAAAAAABZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v continued_acceleration_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:continued_acceleration_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleTrajectoryGenerator::continued_acceleration_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZO}
{\bkmkend AAAAAAABZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v discretize_by_time_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:discretize_by_time_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleTrajectoryGenerator::discretize_by_time_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZP}
{\bkmkend AAAAAAABZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v limits_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:limits_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::LocalPlannerLimits}* base_local_planner::SimpleTrajectoryGenerator::limits_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZQ}
{\bkmkend AAAAAAABZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v next_sample_index_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:next_sample_index_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::SimpleTrajectoryGenerator::next_sample_index_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZR}
{\bkmkend AAAAAAABZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pos_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:pos_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f base_local_planner::SimpleTrajectoryGenerator::pos_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZS}
{\bkmkend AAAAAAABZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sample_params_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:sample_params_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<Eigen::Vector3f> base_local_planner::SimpleTrajectoryGenerator::sample_params_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZT}
{\bkmkend AAAAAAABZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sim_granularity_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:sim_granularity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::SimpleTrajectoryGenerator::sim_granularity_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZU}
{\bkmkend AAAAAAABZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sim_period_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:sim_period_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::SimpleTrajectoryGenerator::sim_period_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZV}
{\bkmkend AAAAAAABZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sim_time_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:sim_time_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::SimpleTrajectoryGenerator::sim_time_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZW}
{\bkmkend AAAAAAABZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v use_dwa_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:use_dwa_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::SimpleTrajectoryGenerator::use_dwa_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZX}
{\bkmkend AAAAAAABZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vel_\:base_local_planner::SimpleTrajectoryGenerator}
{\xe \v base_local_planner::SimpleTrajectoryGenerator\:vel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Eigen::Vector3f base_local_planner::SimpleTrajectoryGenerator::vel_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAABZY}
{\bkmkend AAAAAAABZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b simple_trajectory_generator.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b simple_trajectory_generator.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::StaticLayer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer}
{\bkmkstart AAAAAAADAA}
{\bkmkend AAAAAAADAA}
\par
{
{\f2 #include <static_layer.h>}}\par
\'C0\'E0 costmap_2d::StaticLayer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::StaticLayer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StaticLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~StaticLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onInitialize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b activate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart publishers if they've been stopped. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b deactivate} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop publishers. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateBounds} (double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateCosts} ({\b costmap_2d::Costmap2D} &master_grid, int min_i, int min_j, int max_i, int max_j)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8\'BA\'CD\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'D3\'C3\'B6\'AF\'CC\'AC\'B4\'B0\'BF\'DA\'B7\'BD\'B7\'A8\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b matchSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incomingMap} (const nav_msgs::OccupancyGridConstPtr &new_map)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback to update the costmap's map from the {\b map_server} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b incomingUpdate} (const map_msgs::OccupancyGridUpdateConstPtr &update)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (costmap_2d::GenericPluginConfig &config, uint32_t level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b interpretValue} (unsigned char value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b map_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b subscribe_to_updates_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b map_received_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b has_updated_data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b width_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b height_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b track_unknown_space_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b use_maximum_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b first_map_only_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store the first static map and reuse it on reinitializing }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b trinary_costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b map_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Subscriber {\b map_update_sub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b lethal_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b unknown_cost_value_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< costmap_2d::GenericPluginConfig > * {\b dsrv_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v StaticLayer\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:StaticLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::StaticLayer::StaticLayer ()}}
\par
{\bkmkstart AAAAAAADAB}
{\bkmkend AAAAAAADAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~StaticLayer\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:~StaticLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::StaticLayer::~StaticLayer (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADAC}
{\bkmkend AAAAAAADAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v activate\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:activate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::activate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUV}
{\bkmkend AAAAAAACUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Restart publishers if they've been stopped. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUT \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a4b70375c6f9b105dd2fa765657cc46f8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v deactivate\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:deactivate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::deactivate (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACUY}
{\bkmkend AAAAAAACUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stop publishers. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACUW \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
}
{\xe \v incomingMap\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:incomingMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::incomingMap (const nav_msgs::OccupancyGridConstPtr &  {\i new_map}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAD}
{\bkmkend AAAAAAADAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Callback to update the costmap's map from the {\b map_server} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_map} \cell }{The map to put into the costmap. The origin of the new map along with its size will determine what parts of the costmap's static map are overwritten. \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_aa9d8d26c675b2ecebeb1f2ba2a7ccfd6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_aa9d8d26c675b2ecebeb1f2ba2a7ccfd6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v incomingUpdate\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:incomingUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::incomingUpdate (const map_msgs::OccupancyGridUpdateConstPtr &  {\i update}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAE}
{\bkmkend AAAAAAADAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a07ac2871f5f93542598677f06ba0b5b2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a07ac2871f5f93542598677f06ba0b5b2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v interpretValue\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:interpretValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::StaticLayer::interpretValue (unsigned char  {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAF}
{\bkmkend AAAAAAADAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a8d578a3eff5f630557ea28be27346029_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v matchSize\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:matchSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::matchSize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSE}
{\bkmkend AAAAAAACSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::CostmapLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a3c8a9c7ea061ad416e09d2f1f18cdc8a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v onInitialize\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:onInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::onInitialize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVF}
{\bkmkend AAAAAAACVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tf_, name_, and layered_costmap_ will all be set already when this is called. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTO \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a05ac3b3a903d45c76d076fed8ae220f6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a05ac3b3a903d45c76d076fed8ae220f6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::reconfigureCB (costmap_2d::GenericPluginConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAG}
{\bkmkend AAAAAAADAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_acbe132f678864e1e0f04ab07e71c7883_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::reset (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVI}
{\bkmkend AAAAAAACVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTR \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a80083e19e7d50881f3d46c79e324dd93_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateBounds\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:updateBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::updateBounds (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVL}
{\bkmkend AAAAAAACVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For more details, see "Layered Costmaps for Context-Sensitive Navigation", by Lu et. Al, IROS 2014. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTU \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_ad433844bcb32418450e0fcb763173b6a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateCosts\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:updateCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::StaticLayer::updateCosts ({\b costmap_2d::Costmap2D} &  {\i master_grid}, int  {\i min_i}, int  {\i min_j}, int  {\i max_i}, int  {\i max_j}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVO}
{\bkmkend AAAAAAACVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'B5\'B1\'C7\'B0\'CB\'D9\'B6\'C8\'BA\'CD\'C4\'BF\'B1\'EA\'B5\'E3\'A3\'AC\'D3\'C3\'B6\'AF\'CC\'AC\'B4\'B0\'BF\'DA\'B7\'BD\'B7\'A8\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i master_grid\'A3\'BA} \cell }{master costmap \'B5\'D8\'CD\'BC \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_i} \cell }{\'B5\'D8\'CD\'BC\'D7\'EE\'D0\'A1i\'A3\'AC\'D2\'D4\'CF\'F1\'CB\'D8\'D7\'F8\'B1\'EA\'B1\'ED\'CA\'BE \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_j} \cell }{\'B5\'D8\'CD\'BC\'D7\'EE\'D0\'A1j\'A3\'AC\'D2\'D4\'CF\'F1\'CB\'D8\'D7\'F8\'B1\'EA\'B1\'ED\'CA\'BE \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_i} \cell }{\'B5\'D8\'CD\'BC\'D7\'EE\'B4\'F3i\'A3\'AC\'D2\'D4\'CF\'F1\'CB\'D8\'D7\'F8\'B1\'EA\'B1\'ED\'CA\'BE \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_j} \cell }{\'B5\'D8\'CD\'BC\'D7\'EE\'B4\'F3j\'A3\'AC\'D2\'D4\'CF\'F1\'CB\'D8\'D7\'F8\'B1\'EA\'B1\'ED\'CA\'BE \cell }
{\row }
}
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Layer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACTW \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_static_layer_a9ebed8f042ee945073031e51f82229f1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dsrv_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<costmap_2d::GenericPluginConfig>* costmap_2d::StaticLayer::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAH}
{\bkmkend AAAAAAADAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v first_map_only_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:first_map_only_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::first_map_only_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAI}
{\bkmkend AAAAAAADAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Store the first static map and reuse it on reinitializing }}\par
}
{\xe \v global_frame_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::StaticLayer::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAJ}
{\bkmkend AAAAAAADAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v has_updated_data_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:has_updated_data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::has_updated_data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAK}
{\bkmkend AAAAAAADAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v height_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:height_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::StaticLayer::height_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAL}
{\bkmkend AAAAAAADAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lethal_threshold_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:lethal_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::StaticLayer::lethal_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAM}
{\bkmkend AAAAAAADAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_frame_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:map_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string costmap_2d::StaticLayer::map_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAN}
{\bkmkend AAAAAAADAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_received_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:map_received_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::map_received_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAO}
{\bkmkend AAAAAAADAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_sub_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:map_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber costmap_2d::StaticLayer::map_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAP}
{\bkmkend AAAAAAADAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_update_sub_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:map_update_sub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Subscriber costmap_2d::StaticLayer::map_update_sub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAQ}
{\bkmkend AAAAAAADAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v subscribe_to_updates_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:subscribe_to_updates_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::subscribe_to_updates_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAR}
{\bkmkend AAAAAAADAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v track_unknown_space_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:track_unknown_space_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::track_unknown_space_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAS}
{\bkmkend AAAAAAADAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v trinary_costmap_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:trinary_costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::trinary_costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAT}
{\bkmkend AAAAAAADAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unknown_cost_value_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:unknown_cost_value_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char costmap_2d::StaticLayer::unknown_cost_value_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAU}
{\bkmkend AAAAAAADAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v use_maximum_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:use_maximum_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::StaticLayer::use_maximum_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAV}
{\bkmkend AAAAAAADAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v width_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:width_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::StaticLayer::width_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAW}
{\bkmkend AAAAAAADAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::StaticLayer::x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAX}
{\bkmkend AAAAAAADAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_\:costmap_2d::StaticLayer}
{\xe \v costmap_2d::StaticLayer\:y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::StaticLayer::y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADAY}
{\bkmkend AAAAAAADAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b static_layer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/plugins/{\b static_layer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SuperValue\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v SuperValue}
{\xe \v SuperValue}
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
\par
{
{\f2 #include <costmap_2d_ros.h>}}\par
\'C0\'E0 SuperValue \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_super_value__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
SuperValue \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_super_value__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setStruct} (XmlRpc::XmlRpcValue::ValueStruct *a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setArray} (XmlRpc::XmlRpcValue::ValueArray *a)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v setArray\:SuperValue}
{\xe \v SuperValue\:setArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SuperValue::setArray (XmlRpc::XmlRpcValue::ValueArray *  {\i a}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_super_value_ab1ba33f545994f45cd0e30cc7b83adcb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setStruct\:SuperValue}
{\xe \v SuperValue\:setStruct}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void SuperValue::setStruct (XmlRpc::XmlRpcValue::ValueStruct *  {\i a}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_super_value_abe535082c89a49359388d095b0196d5c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b costmap_2d_ros.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
basic_localization.TestBasicLocalization\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization}
{\bkmkstart AAAAAAACJD}
{\bkmkend AAAAAAACJD}
\'C0\'E0 basic_localization.TestBasicLocalization \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
basic_localization.TestBasicLocalization \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b setUp} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b print_pose_diff} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b get_pose} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b compute_angle} (self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b test_basic_localization} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b wrap_angle} (angle)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tf}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b target_x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b target_y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b target_a}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b tfBuffer}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v compute_angle\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:compute_angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def basic_localization.TestBasicLocalization.compute_angle (  {\i self})}}
\par
{\bkmkstart AAAAAAACJE}
{\bkmkend AAAAAAACJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_a4c90fe70e9f54e6bbfeb6bd4e8545499_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_a4c90fe70e9f54e6bbfeb6bd4e8545499_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v get_pose\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:get_pose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def basic_localization.TestBasicLocalization.get_pose (  {\i self})}}
\par
{\bkmkstart AAAAAAACJF}
{\bkmkend AAAAAAACJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_ab087365be965f093fa8d10c9faad693c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_ab087365be965f093fa8d10c9faad693c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_pose_diff\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:print_pose_diff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def basic_localization.TestBasicLocalization.print_pose_diff (  {\i self})}}
\par
{\bkmkstart AAAAAAACJG}
{\bkmkend AAAAAAACJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_a2067edd237fd25d653549e3526051c09_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_a2067edd237fd25d653549e3526051c09_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setUp\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:setUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def basic_localization.TestBasicLocalization.setUp (  {\i self})}}
\par
{\bkmkstart AAAAAAACJH}
{\bkmkend AAAAAAACJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_basic_localization\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:test_basic_localization}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def basic_localization.TestBasicLocalization.test_basic_localization (  {\i self})}}
\par
{\bkmkstart AAAAAAACJI}
{\bkmkend AAAAAAACJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_a424c92c1737fb37632506f19559ee18d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v wrap_angle\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:wrap_angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def basic_localization.TestBasicLocalization.wrap_angle (  {\i angle}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAACJJ}
{\bkmkend AAAAAAACJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Wrap angle to [-pi, pi)\par
:param angle: Angle to be wrapped\par
:return: wrapped angle\par
}
 \par
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbasic__localization_1_1_test_basic_localization_aa12211c26db7959400a0913f32f4cc5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v target_a\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:target_a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
basic_localization.TestBasicLocalization.target_a}}
\par
{\bkmkstart AAAAAAACJK}
{\bkmkend AAAAAAACJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target_x\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:target_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
basic_localization.TestBasicLocalization.target_x}}
\par
{\bkmkstart AAAAAAACJL}
{\bkmkend AAAAAAACJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target_y\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:target_y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
basic_localization.TestBasicLocalization.target_y}}
\par
{\bkmkstart AAAAAAACJM}
{\bkmkend AAAAAAACJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tf\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:tf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
basic_localization.TestBasicLocalization.tf}}
\par
{\bkmkstart AAAAAAACJN}
{\bkmkend AAAAAAACJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tfBuffer\:basic_localization.TestBasicLocalization}
{\xe \v basic_localization.TestBasicLocalization\:tfBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
basic_localization.TestBasicLocalization.tfBuffer}}
\par
{\bkmkstart AAAAAAACJO}
{\bkmkend AAAAAAACJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
amcl/test/{\b basic_localization.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
consumer.TestConsumer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v consumer.TestConsumer}
{\xe \v consumer.TestConsumer}
{\bkmkstart AAAAAAACLB}
{\bkmkend AAAAAAACLB}
\'C0\'E0 consumer.TestConsumer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classconsumer_1_1_test_consumer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
consumer.TestConsumer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classconsumer_1_1_test_consumer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b __init__} (self, *args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b callback} (self, data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b test_consumer} (self)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b success}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v __init__\:consumer.TestConsumer}
{\xe \v consumer.TestConsumer\:__init__}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def consumer.TestConsumer.__init__ (  {\i self}, *  {\i args})}}
\par
{\bkmkstart AAAAAAACLC}
{\bkmkend AAAAAAACLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classconsumer_1_1_test_consumer_a30e8ea3fdb0aa824257f7d5cdf07a7bc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classconsumer_1_1_test_consumer_a30e8ea3fdb0aa824257f7d5cdf07a7bc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v callback\:consumer.TestConsumer}
{\xe \v consumer.TestConsumer\:callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def consumer.TestConsumer.callback (  {\i self},   {\i data})}}
\par
{\bkmkstart AAAAAAACLD}
{\bkmkend AAAAAAACLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v test_consumer\:consumer.TestConsumer}
{\xe \v consumer.TestConsumer\:test_consumer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
def consumer.TestConsumer.test_consumer (  {\i self})}}
\par
{\bkmkstart AAAAAAACLE}
{\bkmkend AAAAAAACLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v success\:consumer.TestConsumer}
{\xe \v consumer.TestConsumer\:success}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
consumer.TestConsumer.success}}
\par
{\bkmkstart AAAAAAACLF}
{\bkmkend AAAAAAACLF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
map_server/test/{\b consumer.py}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner::Traceback\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner::Traceback}
{\xe \v global_planner::Traceback}
{\bkmkstart AAAAAAADKE}
{\bkmkend AAAAAAADKE}
\par
{
{\f2 #include <traceback.h>}}\par
\'C0\'E0 global_planner::Traceback \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_traceback__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
global_planner::Traceback \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_traceback__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Traceback} ({\b PotentialCalculator} *p_calc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Traceback} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b getPath} (float *potential, double start_x, double start_y, double end_x, double end_y, std::vector< std::pair< float, float > > &path)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setSize} (int xs, int ys)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getIndex} (int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLethalCost} (unsigned char lethal_cost)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xs_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ys_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b lethal_cost_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b PotentialCalculator} * {\b p_calc_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Traceback\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:Traceback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
global_planner::Traceback::Traceback ({\b PotentialCalculator} *  {\i p_calc}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADKF}
{\bkmkend AAAAAAADKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~Traceback\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:~Traceback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual global_planner::Traceback::~Traceback (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADKG}
{\bkmkend AAAAAAADKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getIndex\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:getIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Traceback::getIndex (int  {\i x}, int  {\i y}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADKH}
{\bkmkend AAAAAAADKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_traceback_a9565bfa976f8ce019ce4e4d814b3b575_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPath\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:getPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool global_planner::Traceback::getPath (float *  {\i potential}, double  {\i start_x}, double  {\i start_y}, double  {\i end_x}, double  {\i end_y}, std::vector< std::pair< float, float > > &  {\i path}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAADIK}
{\bkmkend AAAAAAADIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D4\'DA {\b global_planner::GradientPath} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADIJ \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b global_planner::GridPath} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADIW \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_traceback_ad3562c3ff5dc3a1e4465d2ddbe62f812_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setLethalCost\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:setLethalCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void global_planner::Traceback::setLethalCost (unsigned char  {\i lethal_cost}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADKI}
{\bkmkend AAAAAAADKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_traceback_af411eb96102bcedea2d530137b13a002_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setSize\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:setSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void global_planner::Traceback::setSize (int  {\i xs}, int  {\i ys}){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADIN}
{\bkmkend AAAAAAADIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'B1\'BB {\b global_planner::GradientPath} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAADIM \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'D6\'D8\'D4\'D8.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classglobal__planner_1_1_traceback_a75fa8c3628baa7debd94ac83b02e03a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v lethal_cost_\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:lethal_cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char global_planner::Traceback::lethal_cost_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKJ}
{\bkmkend AAAAAAADKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v p_calc_\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:p_calc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b PotentialCalculator}* global_planner::Traceback::p_calc_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKK}
{\bkmkend AAAAAAADKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xs_\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:xs_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Traceback::xs_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKL}
{\bkmkend AAAAAAADKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ys_\:global_planner::Traceback}
{\xe \v global_planner::Traceback\:ys_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int global_planner::Traceback::ys_{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAADKM}
{\bkmkend AAAAAAADKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
global_planner/include/global_planner/{\b traceback.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::Trajectory\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory}
{\bkmkstart AAAAAAABZZ}
{\bkmkend AAAAAAABZZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds a trajectory generated by considering an x, y, and theta velocity }}\par
{
{\f2 #include <trajectory.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Trajectory} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Trajectory} (double xv, double yv, double thetav, double time_delta, unsigned int num_pts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getPoint} (unsigned int index, double &x, double &y, double &th) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a point within the trajectory \'BB\'F1\'C8\'A1\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'C4\'B3\'B8\'F6\'B5\'E3\'B5\'C4\'D0\'C5\'CF\'A2 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPoint} (unsigned int index, double x, double y, double th)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a point within the trajectory \'C9\'E8\'D6\'C3\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'B3\'B8\'F6\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addPoint} (double x, double y, double th)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a point to the end of a trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getEndpoint} (double &x, double &y, double &th) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the last point of the trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetPoints} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the trajectory's points }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b getPointsSize} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the number of points in the trajectory }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b xv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b yv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b thetav_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The x, y, and theta velocities of the trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b cost_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The cost/score of the trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b time_delta_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The time gap between points }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b x_pts_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The x points in the trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b y_pts_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The y points in the trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b th_pts_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The theta points in the trajectory }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds a trajectory generated by considering an x, y, and theta velocity \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v Trajectory\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:Trajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::Trajectory::Trajectory ()}}
\par
{\bkmkstart AAAAAAACAA}
{\bkmkend AAAAAAACAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Default constructor }}\par
}
{\xe \v Trajectory\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:Trajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::Trajectory::Trajectory (double  {\i xv}, double  {\i yv}, double  {\i thetav}, double  {\i time_delta}, unsigned int  {\i num_pts})}}
\par
{\bkmkstart AAAAAAACAB}
{\bkmkend AAAAAAACAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructs a trajectory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xv} \cell }{The x velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yv} \cell }{The y velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i thetav} \cell }{The theta velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i num_pts} \cell }{The expected number of points for a trajectory \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addPoint\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:addPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::Trajectory::addPoint (double  {\i x}, double  {\i y}, double  {\i th})}}
\par
{\bkmkstart AAAAAAACAC}
{\bkmkend AAAAAAACAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add a point to the end of a trajectory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i th} \cell }{The theta position \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_a94ff45de82ae4417fdbb1158c5c2b204_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getEndpoint\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:getEndpoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::Trajectory::getEndpoint (double &  {\i x}, double &  {\i y}, double &  {\i th}) const}}
\par
{\bkmkstart AAAAAAACAD}
{\bkmkend AAAAAAACAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get the last point of the trajectory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{Will be set to the x position of the point \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{Will be set to the y position of the point \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i th} \cell }{Will be set to the theta position of the point \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_a7247858ecf5432a6557d8daf55e3e3f5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPoint\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:getPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::Trajectory::getPoint (unsigned int  {\i index}, double &  {\i x}, double &  {\i y}, double &  {\i th}) const}}
\par
{\bkmkstart AAAAAAACAE}
{\bkmkend AAAAAAACAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get a point within the trajectory \'BB\'F1\'C8\'A1\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'C4\'B3\'B8\'F6\'B5\'E3\'B5\'C4\'D0\'C5\'CF\'A2 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{The index of the point to get \'BB\'F1\'C8\'A1\'B5\'E3\'B5\'C4id \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{Will be set to the x position of the point x\'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{Will be set to the y position of the point \'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i th} \cell }{Will be set to the theta position of the point \'B8\'C3\'B5\'E3\'B3\'AF\'CF\'F2 \cell }
{\row }
}
}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_aefeea7b81d210b228cfe041938be6a14_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPointsSize\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:getPointsSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::Trajectory::getPointsSize () const}}
\par
{\bkmkstart AAAAAAACAF}
{\bkmkend AAAAAAACAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the number of points in the trajectory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The number of points in the trajectory \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_a825364365ad68291ce701c0e97bef3d5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetPoints\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:resetPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::Trajectory::resetPoints ()}}
\par
{\bkmkstart AAAAAAACAG}
{\bkmkend AAAAAAACAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Clear the trajectory's points }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_a35c05c071ce0f8e54c18f0f8816315d3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPoint\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:setPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::Trajectory::setPoint (unsigned int  {\i index}, double  {\i x}, double  {\i y}, double  {\i th})}}
\par
{\bkmkstart AAAAAAACAH}
{\bkmkend AAAAAAACAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set a point within the trajectory \'C9\'E8\'D6\'C3\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'B3\'B8\'F6\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i index} \cell }{The index of the point to set \'B1\'BB\'C9\'E8\'D6\'C3\'B5\'E3\'B5\'C4id \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position x \'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position y \'D7\'F8\'B1\'EA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i th} \cell }{The theta position \'B3\'AF\'CF\'F2 \cell }
{\row }
}
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cost_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:cost_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::Trajectory::cost_}}
\par
{\bkmkstart AAAAAAACAI}
{\bkmkend AAAAAAACAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The cost/score of the trajectory }}\par
}
{\xe \v th_pts_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:th_pts_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> base_local_planner::Trajectory::th_pts_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAJ}
{\bkmkend AAAAAAACAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The theta points in the trajectory }}\par
}
{\xe \v thetav_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:thetav_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::Trajectory::thetav_}}
\par
{\bkmkstart AAAAAAACAK}
{\bkmkend AAAAAAACAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The x, y, and theta velocities of the trajectory }}\par
}
{\xe \v time_delta_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:time_delta_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::Trajectory::time_delta_}}
\par
{\bkmkstart AAAAAAACAL}
{\bkmkend AAAAAAACAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The time gap between points }}\par
}
{\xe \v x_pts_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:x_pts_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> base_local_planner::Trajectory::x_pts_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAM}
{\bkmkend AAAAAAACAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The x points in the trajectory }}\par
}
{\xe \v xv_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:xv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::Trajectory::xv_}}
\par
{\bkmkstart AAAAAAACAN}
{\bkmkend AAAAAAACAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y_pts_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:y_pts_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> base_local_planner::Trajectory::y_pts_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAO}
{\bkmkend AAAAAAACAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The y points in the trajectory }}\par
}
{\xe \v yv_\:base_local_planner::Trajectory}
{\xe \v base_local_planner::Trajectory\:yv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::Trajectory::yv_}}
\par
{\bkmkstart AAAAAAACAP}
{\bkmkend AAAAAAACAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b trajectory.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b trajectory.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectoryCostFunction\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction}
{\bkmkstart AAAAAAACAQ}
{\bkmkend AAAAAAACAQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for critics of trajectories During each sampling run, a batch of many trajectories will be scored using such a cost function. The prepare method is called before each batch run, and then for each trajectory of the sampling set, score_trajectory may be called. }}\par
{
{\f2 #include <trajectory_cost_function.h>}}\par
\'C0\'E0 base_local_planner::TrajectoryCostFunction \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_cost_function__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b prepare} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b scoreTrajectory} ({\b Trajectory} &traj)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getScale} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setScale} (double scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TrajectoryCostFunction} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryCostFunction} (double scale=1.0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scale_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for critics of trajectories During each sampling run, a batch of many trajectories will be scored using such a cost function. The prepare method is called before each batch run, and then for each trajectory of the sampling set, score_trajectory may be called. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~TrajectoryCostFunction\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:~TrajectoryCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::TrajectoryCostFunction::~TrajectoryCostFunction (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAR}
{\bkmkend AAAAAAACAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TrajectoryCostFunction\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:TrajectoryCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryCostFunction::TrajectoryCostFunction (double  {\i scale} = {\f2 1.0}){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACAS}
{\bkmkend AAAAAAACAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getScale\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:getScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryCostFunction::getScale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAT}
{\bkmkend AAAAAAACAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_cost_function_abaae8d899bd41d8baf02bf7aa175ded9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v prepare\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool base_local_planner::TrajectoryCostFunction::prepare (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'B3\'A3\'D3\'C3\'B5\'C4\'B1\'E4\'C1\'BF \'B1\'CF\'BE\'B9\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD\'A3\'AC\'D7\'D3\'C0\'E0\'D6\'D0\'B1\'D8\'D0\'EB\'D6\'D8\'D0\'B4\'B8\'C3\'BA\'AF\'CA\'FD \par
}{
\'D4\'DA {\b base_local_planner::MapGridCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::ObstacleCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::OscillationCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABVX \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::PreferForwardCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYM \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b base_local_planner::TwirlingCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAU \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_cost_function_a351dddca226f210a09bd10c151e2975f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v scoreTrajectory\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double base_local_planner::TrajectoryCostFunction::scoreTrajectory ({\b Trajectory} &  {\i traj}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C6\'C0\'B7\'D6\'A3\'AC\'D2\'B2\'CA\'C7\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD \par
}{
\'D4\'DA {\b base_local_planner::MapGridCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTS \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::ObstacleCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABUW \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::OscillationCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABWA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::PreferForwardCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYN \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b base_local_planner::TwirlingCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACAV \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_cost_function_a6908a8071270b455fc25b48db76e2d3c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setScale\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:setScale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryCostFunction::setScale (double  {\i scale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAW}
{\bkmkend AAAAAAACAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_cost_function_a816da4ed3c9be419fc00abb271d5a8b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v scale_\:base_local_planner::TrajectoryCostFunction}
{\xe \v base_local_planner::TrajectoryCostFunction\:scale_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryCostFunction::scale_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACAX}
{\bkmkend AAAAAAACAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b trajectory_cost_function.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectoryGeneratorTest\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectoryGeneratorTest}
{\xe \v base_local_planner::TrajectoryGeneratorTest}
{\bkmkstart AAAAAAACAY}
{\bkmkend AAAAAAACAY}
\'C0\'E0 base_local_planner::TrajectoryGeneratorTest \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_generator_test__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::TrajectoryGeneratorTest \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_generator_test__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryGeneratorTest} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TestBody} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SimpleTrajectoryGenerator} {\b tg}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TrajectoryGeneratorTest\:base_local_planner::TrajectoryGeneratorTest}
{\xe \v base_local_planner::TrajectoryGeneratorTest\:TrajectoryGeneratorTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryGeneratorTest::TrajectoryGeneratorTest (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACAZ}
{\bkmkend AAAAAAACAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TestBody\:base_local_planner::TrajectoryGeneratorTest}
{\xe \v base_local_planner::TrajectoryGeneratorTest\:TestBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void base_local_planner::TrajectoryGeneratorTest::TestBody (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACBA}
{\bkmkend AAAAAAACBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v tg\:base_local_planner::TrajectoryGeneratorTest}
{\xe \v base_local_planner::TrajectoryGeneratorTest\:tg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SimpleTrajectoryGenerator} base_local_planner::TrajectoryGeneratorTest::tg}}
\par
{\bkmkstart AAAAAAACBB}
{\bkmkend AAAAAAACBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/test/{\b trajectory_generator_test.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectoryPlanner\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner}
{\bkmkstart AAAAAAACBC}
{\bkmkend AAAAAAACBC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'C3\'C0\'E0\'B4\'D3\'B8\'F8\'B6\'A8\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'C2\'B7\'BE\'B6\'BA\'CD\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }}\par
{
{\f2 #include <trajectory_planner.h>}}\par
base_local_planner::TrajectoryPlanner \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlanner} ({\b WorldModel} &world_model, const {\b costmap_2d::Costmap2D} &costmap, std::vector< geometry_msgs::Point > footprint_spec, double acc_lim_x=1.0, double acc_lim_y=1.0, double acc_lim_theta=1.0, double sim_time=1.0, double sim_granularity=0.025, int vx_samples=20, int vtheta_samples=20, double path_distance_bias=0.6, double goal_distance_bias=0.8, double occdist_scale=0.2, double heading_lookahead=0.325, double oscillation_reset_dist=0.05, double escape_reset_dist=0.10, double escape_reset_theta=M_PI_2, bool holonomic_robot=true, double max_vel_x=0.5, double min_vel_x=0.1, double max_vel_th=1.0, double min_vel_th=-1.0, double min_in_place_vel_th=0.4, double backup_vel=-0.1, bool dwa=false, bool heading_scoring=false, double heading_scoring_timestep=0.1, bool meter_scoring=true, bool simple_attractor=false, std::vector< double > y_vels=std::vector< double >(0), double stop_time_buffer=0.2, double sim_period=0.1, double angular_sim_granularity=0.025)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TrajectoryPlanner} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructs a trajectory controller }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigure} (BaseLocalPlannerConfig &cfg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reconfigures the trajectory planner }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Trajectory} {\b findBestPath} (const geometry_msgs::PoseStamped &global_pose, geometry_msgs::PoseStamped &global_vel, geometry_msgs::PoseStamped &drive_velocities)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'D2\'B5\'BD\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updatePlan} (const std::vector< geometry_msgs::PoseStamped > &new_plan, bool compute_dists=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getLocalGoal} (double &x, double &y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkTrajectory} (double x, double y, double theta, double vx, double vy, double vtheta, double vx_samp, double vy_samp, double vtheta_samp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B2\'FA\'C9\'FA\'BA\'CD\'B4\'F2\'B7\'D6\'B5\'A5\'B8\'F6\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} (double x, double y, double theta, double vx, double vy, double vtheta, double vx_samp, double vy_samp, double vtheta_samp)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate and score a single trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b getCellCosts} (int cx, int cy, float &path_cost, float &goal_cost, float &occ_cost, float &total_cost)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the components and total cost for a map grid cell }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setFootprint} (std::vector< geometry_msgs::Point > footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint specification of the robot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Polygon {\b getFootprintPolygon} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the footprint specification of the robot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b getFootprint} () const\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Trajectory} {\b createTrajectories} (double x, double y, double theta, double vx, double vy, double vtheta, double acc_x, double acc_y, double acc_theta)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the trajectories we wish to explore, score them, and return the best option }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b generateTrajectory} (double x, double y, double theta, double vx, double vy, double vtheta, double vx_samp, double vy_samp, double vtheta_samp, double acc_x, double acc_y, double acc_theta, double impossible_cost, {\b Trajectory} &traj)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate and score a single trajectory }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (double x_i, double y_i, double theta_i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the legality of the robot footprint at a position and orientation using the world model }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b computeNewXPosition} (double xi, double vx, double vy, double theta, double dt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute x position based on velocity }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b computeNewYPosition} (double yi, double vx, double vy, double theta, double dt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute y position based on velocity }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b computeNewThetaPosition} (double thetai, double vth, double dt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute orientation based on velocity }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b computeNewVelocity} (double vg, double vi, double a_max, double dt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute velocity based on acceleration }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getMaxSpeedToStopInTime} (double time, double &vx, double &vy, double &vth)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lineCost} (int x0, int x1, int y0, int y1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointCost} (int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b headingDiff} (int cell_x, int cell_y, double x, double y, double heading)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::FootprintHelper} {\b footprint_helper_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} {\b path_map_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local map grid where we propagate path distance }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} {\b goal_map_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local map grid where we propagate goal distance }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b costmap_2d::Costmap2D} & {\b costmap_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides access to cost map information }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WorldModel} & {\b world_model_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The world model that the controller uses for collision detection }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b footprint_spec_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The footprint specification of the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > {\b global_plan_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The global path for the robot to follow }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stuck_left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stuck_right}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep the robot from oscillating during rotation }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotating_left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotating_right}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep track of the direction of rotation for the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stuck_left_strafe}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stuck_right_strafe}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep the robot from oscillating during strafing }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strafe_right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b strafe_left}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep track of strafe direction for the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b escaping_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Boolean to keep track of whether we're in escape mode }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b meter_scoring_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b goal_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b goal_y_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for the local goal the robot is pursuing }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b final_goal_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b final_goal_y_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The end position of the plan. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b final_goal_position_valid_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if final_goal_x_ and final_goal_y_ have valid data. Only false if an empty path is sent. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_time_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of seconds each trajectory is "rolled-out" }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_granularity_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance between simulation points }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b angular_sim_granularity_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance between angular simulation points }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vx_samples_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of samples we'll take in the x dimenstion of the control space }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b vtheta_samples_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of samples we'll take in the theta dimension of the control space }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b path_distance_bias_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b goal_distance_bias_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b occdist_scale_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling factors for the controller's cost function }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_theta_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The acceleration limits of the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b prev_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b prev_y_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to calculate the distance the robot has traveled before reseting oscillation booleans }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b escape_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b escape_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b escape_theta_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to calculate the distance the robot has traveled before reseting escape booleans }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Trajectory} {\b traj_one}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Trajectory} {\b traj_two}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used for scoring trajectories }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b heading_lookahead_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How far the robot should look ahead of itself when differentiating between different rotational velocities }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b oscillation_reset_dist_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance the robot must travel before it can explore rotational velocities that were unsuccessful in the past }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b escape_reset_dist_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b escape_reset_theta_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance the robot must travel before it can leave escape mode }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b holonomic_robot_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is the robot holonomic or not? }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_th_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_th_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_in_place_vel_th_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Velocity limits for the controller }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b backup_vel_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The velocity to use while backing up }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b dwa_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should we use the dynamic window approach? }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b heading_scoring_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should we score based on the rollout approach or the heading approach }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b heading_scoring_timestep_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How far to look ahead in time when we score a heading }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b simple_attractor_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables simple attraction to a goal point }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b y_vels_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y velocities to explore }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b stop_time_buffer_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How long before hitting something we're going to enforce that the robot stop }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_period_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of seconds to use to compute max/min vels for dwa }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b inscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b circumscribed_radius_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::mutex {\b configuration_mutex_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D3\'D1\'D4\'AA\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TrajectoryPlannerTest}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'C3\'C0\'E0\'B4\'D3\'B8\'F8\'B6\'A8\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'C2\'B7\'BE\'B6\'BA\'CD\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TrajectoryPlanner\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:TrajectoryPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryPlanner::TrajectoryPlanner ({\b WorldModel} &  {\i world_model}, const {\b costmap_2d::Costmap2D} &  {\i costmap}, std::vector< geometry_msgs::Point >  {\i footprint_spec}, double  {\i acc_lim_x} = {\f2 1.0}, double  {\i acc_lim_y} = {\f2 1.0}, double  {\i acc_lim_theta} = {\f2 1.0}, double  {\i sim_time} = {\f2 1.0}, double  {\i sim_granularity} = {\f2 0.025}, int  {\i vx_samples} = {\f2 20}, int  {\i vtheta_samples} = {\f2 20}, double  {\i path_distance_bias} = {\f2 0.6}, double  {\i goal_distance_bias} = {\f2 0.8}, double  {\i occdist_scale} = {\f2 0.2}, double  {\i heading_lookahead} = {\f2 0.325}, double  {\i oscillation_reset_dist} = {\f2 0.05}, double  {\i escape_reset_dist} = {\f2 0.10}, double  {\i escape_reset_theta} = {\f2 M_PI_2}, bool  {\i holonomic_robot} = {\f2 true}, double  {\i max_vel_x} = {\f2 0.5}, double  {\i min_vel_x} = {\f2 0.1}, double  {\i max_vel_th} = {\f2 1.0}, double  {\i min_vel_th} = {\f2 -1.0}, double  {\i min_in_place_vel_th} = {\f2 0.4}, double  {\i backup_vel} = {\f2 -0.1}, bool  {\i dwa} = {\f2 false}, bool  {\i heading_scoring} = {\f2 false}, double  {\i heading_scoring_timestep} = {\f2 0.1}, bool  {\i meter_scoring} = {\f2 true}, bool  {\i simple_attractor} = {\f2 false}, std::vector< double >  {\i y_vels} = {\f2 std::vector<double>(0)}, double  {\i stop_time_buffer} = {\f2 0.2}, double  {\i sim_period} = {\f2 0.1}, double  {\i angular_sim_granularity} = {\f2 0.025})}}
\par
{\bkmkstart AAAAAAACBD}
{\bkmkend AAAAAAACBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'EC\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i world_model} \cell }{\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'D3\'C3\'C0\'B4\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2\'B5\'C4\'CA\'C0\'BD\'E7\'C4\'A3\'D0\'CD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D3\'C3\'B5\'BD\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'D2\'FD\'D3\'C3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint_spec} \cell }{\'B4\'FA\'B1\'ED\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'B6\'E0\'B1\'DF\'D0\'CE(\'B1\'D8\'D0\'EB\'CA\'C7\'CD\'B9\'B5\'C4) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'C4\'DA\'C7\'D0\'D4\'B2\'B5\'C4\'B0\'EB\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CD\'E2\'BD\'D3\'D4\'B2\'B5\'C4\'B0\'EB\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_lim_x} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'D4\'DAx\'B7\'BD\'CF\'F2\'C9\'CF\'B5\'C4\'BC\'D3\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_lim_y} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'D4\'DAy\'B7\'BD\'CF\'F2\'C9\'CF\'B5\'C4\'BC\'D3\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_lim_theta} \cell }{\'BD\'C7\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sim_time} \cell }{The number of seconds to "roll-out" each trajectory "roll-out"\'C3\'BF\'B8\'F6\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B5\'C4\'C3\'EB\'CA\'FD \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sim_granularity} \cell }{\'B7\'C2\'D5\'E6\'B5\'E3\'D6\'AE\'BC\'E4\'B5\'C4\'BE\'E0\'C0\'EB\'D3\'A6\'B8\'C3\'D7\'E3\'B9\'BB\'B5\'C4\'D0\'A1\'B6\'F8\'B2\'BB\'BB\'E1\'D7\'B2\'B5\'BD\'D5\'CF\'B0\'AD\'CE\'EF \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx_samples} \cell }{\'D4\'DAx\'B7\'BD\'CF\'F2\'B2\'C9\'D1\'F9\'B5\'C4\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'CA\'FD\'C1\'BF\'A3\'BF \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta_samples} \cell }{\'D4\'DA\'D0\'FD\'D7\'AA\'B7\'BD\'CF\'F2\'B2\'C9\'D1\'F9\'B5\'C4\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'CA\'FD\'C1\'BF \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path_distance_bias} \cell }{\'B5\'F7\'BD\'DA\'BB\'FA\'C6\'F7\'C8\'CB\'D3\'A6\'B8\'C3\'C0\'EB\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B6\'E0\'BD\'FC\'B5\'C4\'B3\'DF\'B6\'C8\'D2\'F2\'D7\'D3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_distance_bias} \cell }{\'B5\'F7\'BD\'DA\'BB\'FA\'C6\'F7\'C8\'CB\'D3\'A6\'B8\'C3\'B6\'E0'\'BB\'FD\'BC\'AB'\'B5\'D8\'B5\'BC\'BA\'BD\'C8\'A5\'C4\'BF\'B1\'EA\'B5\'E3\'B5\'C4\'B3\'DF\'B6\'C8\'D2\'F2\'D7\'D3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i occdist_scale} \cell }{\'B5\'F7\'BD\'DA\'BB\'FA\'C6\'F7\'C8\'CB\'C0\'EB\'D5\'CF\'B0\'AD\'CE\'EF\'BE\'E0\'C0\'EB\'B3\'DF\'B6\'C8\'D2\'F2\'D7\'D3 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i heading_lookahead} \cell }{How far the robot should look ahead of itself when differentiating between different rotational velocities\'A3\'BF \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i oscillation_reset_dist} \cell }{The distance the robot must travel before it can explore rotational velocities that were unsuccessful in the past \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i escape_reset_dist} \cell }{\'CD\'CB\'B3\'F6\'CC\'D3\'C5\'DC\'C4\'A3\'CA\'BD\'D6\'AE\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CB\'D2\'AA\'D7\'DF\'B9\'FD\'B5\'C4\'BE\'E0\'C0\'EB\'B3\'A4\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i escape_reset_theta} \cell }{\'CD\'CB\'B3\'F6\'CC\'D3\'C5\'DC\'C4\'A3\'CA\'BD\'D6\'AE\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CB\'D2\'AA\'D0\'FD\'D7\'AA\'B5\'C4\'BD\'C7\'B6\'C8\'E3\'D0\'D6\'B5 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i holonomic_robot} \cell }{\'C8\'E7\'B9\'FB\'CE\'AAtrue, \'BB\'FA\'C6\'F7\'C8\'CB\'D2\'B2\'BB\'E1\'B1\'BBy\'B7\'BD\'CF\'F2\'B5\'C4\'CF\'DF\'CB\'D9\'B6\'C8\'BF\'D8\'D6\'C6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_vel_x} \cell }{\'D7\'EE\'B4\'F3\'CF\'DF\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_vel_x} \cell }{\'D7\'EE\'D0\'A1\'CF\'DF\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_vel_th} \cell }{\'D7\'EE\'B4\'F3\'BD\'C7\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_vel_th} \cell }{\'D7\'EE\'D0\'A1\'BD\'C7\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_in_place_vel_th} \cell }{\'D7\'EE\'D0\'A1\'B6\'A8\'B5\'E3\'D0\'FD\'D7\'AA\'BD\'C7\'CB\'D9\'B6\'C8 The absolute value of the minimum in-place rotational velocity the controller will explore \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i backup_vel} \cell }{\'BA\'F3\'CD\'CB\'CB\'D9\'B6\'C8\'A3\'BF The velocity to use while backing up \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dwa} \cell }{\'C8\'E7\'B9\'FB\'CE\'AAtrue, \'BD\'AB\'D3\'C3\'B6\'AF\'CC\'AC\'B4\'B0\'BF\'DA\'B7\'A8DWA \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i heading_scoring} \cell }{true\'B1\'ED\'CA\'BE\'B9\'EC\'BC\'A3\'B4\'F2\'B7\'D6\'CF\'EE\'BB\'E1\'B0\'FC\'C0\'A8\'BB\'FA\'C6\'F7\'C8\'CB\'B3\'AF\'CF\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i heading_scoring_timestep} \cell }{\'B4\'D3\'B6\'E0\'D4\'B6\'BF\'AA\'CA\'BC\'CE\'AA\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'B3\'AF\'CF\'F2\'B4\'F2\'B7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i meter_scoring} \cell }{\'B5\'F7\'BD\'DA\'B2\'CE\'CA\'FD\'BA\'CD\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4\'B7\'D6\'B1\'E6\'C2\'CA\'CA\'CA\'C5\'E4 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i simple_attractor} \cell }{true\'D4\'CA\'D0\'ED to allow simple attraction to a goal point instead of intelligent cost propagation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y_vels} \cell }{y\'B7\'BD\'CF\'F2\'CF\'DF\'CB\'D9\'B6\'C8\'B5\'C4\'CF\'F2\'C1\'BF \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i angular_sim_granularity} \cell }{\'B7\'C2\'D5\'E6\'B5\'E3\'D6\'AE\'BC\'E4\'B5\'C4\'BE\'E0\'C0\'EB\'D3\'A6\'B8\'C3\'D7\'E3\'B9\'BB\'B5\'C4\'D0\'A1\'B6\'F8\'B2\'BB\'BB\'E1\'D7\'B2\'B5\'BD\'D5\'CF\'B0\'AD\'CE\'EF\'A3\'BF \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a49c9d7e52d7cad7e90baba29ad6b8a59_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~TrajectoryPlanner\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:~TrajectoryPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryPlanner::~TrajectoryPlanner ()}}
\par
{\bkmkstart AAAAAAACBE}
{\bkmkend AAAAAAACBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructs a trajectory controller }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkTrajectory\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:checkTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::checkTrajectory (double  {\i x}, double  {\i y}, double  {\i theta}, double  {\i vx}, double  {\i vy}, double  {\i vtheta}, double  {\i vx_samp}, double  {\i vy_samp}, double  {\i vtheta_samp})}}
\par
{\bkmkstart AAAAAAACBF}
{\bkmkend AAAAAAACBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B2\'FA\'C9\'FA\'BA\'CD\'B4\'F2\'B7\'D6\'B5\'A5\'B8\'F6\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{\'B5\'B1\'C7\'B0\'D7\'F8\'B1\'EAx\'D6\'E1 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{\'B5\'B1\'C7\'B0\'D7\'F8\'B1\'EAy\'D6\'E1 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{\'B5\'B1\'C7\'B0\'B3\'AF\'CF\'F2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx} \cell }{\'B5\'B1\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CBx\'B7\'BD\'CF\'F2\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy} \cell }{\'B5\'B1\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CBy\'B7\'BD\'CF\'F2\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta} \cell }{\'B5\'B1\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CB\'BD\'C7\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx_samp} \cell }{The x velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy_samp} \cell }{The y velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta_samp} \cell }{The theta velocity used to seed the trajectory \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the trajectory is legal, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a16f45df8237d94cafe714d4e5aa4eeb3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a16f45df8237d94cafe714d4e5aa4eeb3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeNewThetaPosition\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:computeNewThetaPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::computeNewThetaPosition (double  {\i thetai}, double  {\i vth}, double  {\i dt}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBG}
{\bkmkend AAAAAAACBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute orientation based on velocity }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i thetai} \cell }{The current orientation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vth} \cell }{The current theta velocity \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dt} \cell }{The timestep to take \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The new orientation \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_aadd3289b84c1c76778cc705250757c66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeNewVelocity\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:computeNewVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::computeNewVelocity (double  {\i vg}, double  {\i vi}, double  {\i a_max}, double  {\i dt}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBH}
{\bkmkend AAAAAAACBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute velocity based on acceleration }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vg} \cell }{The desired velocity, what we're accelerating up to \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vi} \cell }{The current velocity \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i a_max} \cell }{An acceleration limit \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dt} \cell }{The timestep to take \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The new velocity \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a054ff7c497b332357979908f5df35031_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeNewXPosition\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:computeNewXPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::computeNewXPosition (double  {\i xi}, double  {\i vx}, double  {\i vy}, double  {\i theta}, double  {\i dt}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBI}
{\bkmkend AAAAAAACBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute x position based on velocity }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xi} \cell }{The current x position \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx} \cell }{The current x velocity \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy} \cell }{The current y velocity \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The current orientation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dt} \cell }{The timestep to take \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The new x position \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a464d133b3ff7d997ff2de19ea769e0ef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeNewYPosition\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:computeNewYPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::computeNewYPosition (double  {\i yi}, double  {\i vx}, double  {\i vy}, double  {\i theta}, double  {\i dt}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBJ}
{\bkmkend AAAAAAACBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute y position based on velocity }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i yi} \cell }{The current y position \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx} \cell }{The current x velocity \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy} \cell }{The current y velocity \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The current orientation \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i dt} \cell }{The timestep to take \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The new y position \par
}}}\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a2177c9510ce5cb1a6564e4d39797b4a7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v createTrajectories\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:createTrajectories}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Trajectory} base_local_planner::TrajectoryPlanner::createTrajectories (double  {\i x}, double  {\i y}, double  {\i theta}, double  {\i vx}, double  {\i vy}, double  {\i vtheta}, double  {\i acc_x}, double  {\i acc_y}, double  {\i acc_theta}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBK}
{\bkmkend AAAAAAACBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the trajectories we wish to explore, score them, and return the best option }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The orientation of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx} \cell }{The x velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy} \cell }{The y velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta} \cell }{The theta velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_x} \cell }{The x acceleration limit of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_y} \cell }{The y acceleration limit of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_theta} \cell }{The theta acceleration limit of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a44c8434c9df68efb24eef36fc670ae7c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a44c8434c9df68efb24eef36fc670ae7c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v findBestPath\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:findBestPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Trajectory} base_local_planner::TrajectoryPlanner::findBestPath (const geometry_msgs::PoseStamped &  {\i global_pose}, geometry_msgs::PoseStamped &  {\i global_vel}, geometry_msgs::PoseStamped &  {\i drive_velocities})}}
\par
{\bkmkstart AAAAAAACBL}
{\bkmkend AAAAAAACBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'D2\'B5\'BD\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'C8\'AB\'BE\'D6\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_vel} \cell }{\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5\'D6\'D0\'B5\'C4\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i drive_velocities} \cell }{\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'D1\'A1\'D4\'F1\'B5\'C4\'C2\'B7\'BE\'B6 \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a0fa1222899b6f8d630924f7de5e32a66_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a0fa1222899b6f8d630924f7de5e32a66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::footprintCost (double  {\i x_i}, double  {\i y_i}, double  {\i theta_i}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBM}
{\bkmkend AAAAAAACBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the legality of the robot footprint at a position and orientation using the world model }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x_i} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y_i} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta_i} \cell }{The orientation of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_ab3f9bae95f002f9a800f16feaffd460e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_ab3f9bae95f002f9a800f16feaffd460e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v generateTrajectory\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:generateTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlanner::generateTrajectory (double  {\i x}, double  {\i y}, double  {\i theta}, double  {\i vx}, double  {\i vy}, double  {\i vtheta}, double  {\i vx_samp}, double  {\i vy_samp}, double  {\i vtheta_samp}, double  {\i acc_x}, double  {\i acc_y}, double  {\i acc_theta}, double  {\i impossible_cost}, {\b Trajectory} &  {\i traj}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBN}
{\bkmkend AAAAAAACBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate and score a single trajectory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The orientation of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx} \cell }{The x velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy} \cell }{The y velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta} \cell }{The theta velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx_samp} \cell }{The x velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy_samp} \cell }{The y velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta_samp} \cell }{The theta velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_x} \cell }{The x acceleration limit of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_y} \cell }{The y acceleration limit of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i acc_theta} \cell }{The theta acceleration limit of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i impossible_cost} \cell }{The cost value of a cell in the local map grid that is considered impassable \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i traj} \cell }{Will be set to the generated trajectory with its associated score\cell }
{\row }
}
create and score a trajectory given the current pose of the robot and selected velocities \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a78ea0a479b32f589f518c55a78dcb755_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a78ea0a479b32f589f518c55a78dcb755_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getCellCosts\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:getCellCosts}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::getCellCosts (int  {\i cx}, int  {\i cy}, float &  {\i path_cost}, float &  {\i goal_cost}, float &  {\i occ_cost}, float &  {\i total_cost})}}
\par
{\bkmkstart AAAAAAACBO}
{\bkmkend AAAAAAACBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Compute the components and total cost for a map grid cell }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cx} \cell }{The x coordinate of the cell in the map grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cy} \cell }{The y coordinate of the cell in the map grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i path_cost} \cell }{Will be set to the path distance component of the cost function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_cost} \cell }{Will be set to the goal distance component of the cost function \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i occ_cost} \cell }{Will be set to the costmap value of the cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i total_cost} \cell }{Will be set to the value of the overall cost function, taking into account the scaling parameters \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the cell is traversible and therefore a legal location for the robot to move to \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a23f9726d0f43f94e8c5b3a50556dd7b7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a23f9726d0f43f94e8c5b3a50556dd7b7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getFootprint\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:getFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< geometry_msgs::Point > base_local_planner::TrajectoryPlanner::getFootprint () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBP}
{\bkmkend AAAAAAACBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getFootprintPolygon\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:getFootprintPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
geometry_msgs::Polygon base_local_planner::TrajectoryPlanner::getFootprintPolygon () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBQ}
{\bkmkend AAAAAAACBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return the footprint specification of the robot. }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a3349ee9e66e3943b48a8c75189e1e0cc_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLocalGoal\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:getLocalGoal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlanner::getLocalGoal (double &  {\i x}, double &  {\i y})}}
\par
{\bkmkstart AAAAAAACBR}
{\bkmkend AAAAAAACBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getMaxSpeedToStopInTime\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:getMaxSpeedToStopInTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlanner::getMaxSpeedToStopInTime (double  {\i time}, double &  {\i vx}, double &  {\i vy}, double &  {\i vth}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBS}
{\bkmkend AAAAAAACBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v headingDiff\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:headingDiff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::headingDiff (int  {\i cell_x}, int  {\i cell_y}, double  {\i x}, double  {\i y}, double  {\i heading}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBT}
{\bkmkend AAAAAAACBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a36016a332040ca88776ebf7f48b632b4_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a36016a332040ca88776ebf7f48b632b4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v lineCost\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:lineCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::lineCost (int  {\i x0}, int  {\i x1}, int  {\i y0}, int  {\i y1}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBU}
{\bkmkend AAAAAAACBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_abd8710866ba7bd693c63919e93c87813_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_abd8710866ba7bd693c63919e93c87813_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pointCost\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:pointCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::pointCost (int  {\i x}, int  {\i y}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACBV}
{\bkmkend AAAAAAACBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_ab1d5ed02ab5ede53f48fad6d426c27e9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_ab1d5ed02ab5ede53f48fad6d426c27e9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigure\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:reconfigure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlanner::reconfigure (BaseLocalPlannerConfig &  {\i cfg})}}
\par
{\bkmkstart AAAAAAACBW}
{\bkmkend AAAAAAACBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reconfigures the trajectory planner }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a30b83584ef7b95a641db52efc67bc59c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a30b83584ef7b95a641db52efc67bc59c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v scoreTrajectory\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::scoreTrajectory (double  {\i x}, double  {\i y}, double  {\i theta}, double  {\i vx}, double  {\i vy}, double  {\i vtheta}, double  {\i vx_samp}, double  {\i vy_samp}, double  {\i vtheta_samp})}}
\par
{\bkmkstart AAAAAAACBX}
{\bkmkend AAAAAAACBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generate and score a single trajectory }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i theta} \cell }{The orientation of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx} \cell }{The x velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy} \cell }{The y velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta} \cell }{The theta velocity of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx_samp} \cell }{The x velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy_samp} \cell }{The y velocity used to seed the trajectory \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta_samp} \cell }{The theta velocity used to seed the trajectory \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The score (as double) \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a8ff397f04fbb25760ab68e2ac65a99b0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_a8ff397f04fbb25760ab68e2ac65a99b0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setFootprint\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:setFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlanner::setFootprint (std::vector< geometry_msgs::Point >  {\i footprint}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACBY}
{\bkmkend AAAAAAACBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set the footprint specification of the robot. }}\par
}
{\xe \v updatePlan\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:updatePlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlanner::updatePlan (const std::vector< geometry_msgs::PoseStamped > &  {\i new_plan}, bool  {\i compute_dists} = {\f2 false})}}
\par
{\bkmkstart AAAAAAACBZ}
{\bkmkend AAAAAAACBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_plan} \cell }{\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'D0\'C2\'C2\'B7\'BE\'B6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i compute_dists} \cell }{\'CA\'C7\'B7\'F1\'BC\'C6\'CB\'E3\'C2\'B7\'BE\'B6\'B5\'C4\'B3\'A4\'B6\'C8 \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_ad8c384954625a91934bad8354f5dc24d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_ad8c384954625a91934bad8354f5dc24d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'D3\'D1\'D4\'AA\'BC\'B0\'CF\'E0\'B9\'D8\'BA\'AF\'CA\'FD\'CE\'C4\'B5\'B5\par
\pard\plain 
{\xe \v TrajectoryPlannerTest\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:TrajectoryPlannerTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b TrajectoryPlannerTest}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAACCA}
{\bkmkend AAAAAAACCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v acc_lim_theta_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:acc_lim_theta_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::acc_lim_theta_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCB}
{\bkmkend AAAAAAACCB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The acceleration limits of the robot }}\par
}
{\xe \v acc_lim_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:acc_lim_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::acc_lim_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCC}
{\bkmkend AAAAAAACCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v acc_lim_y_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:acc_lim_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::acc_lim_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCD}
{\bkmkend AAAAAAACCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v angular_sim_granularity_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:angular_sim_granularity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::angular_sim_granularity_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCE}
{\bkmkend AAAAAAACCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance between angular simulation points }}\par
}
{\xe \v backup_vel_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:backup_vel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::backup_vel_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCF}
{\bkmkend AAAAAAACCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The velocity to use while backing up }}\par
}
{\xe \v circumscribed_radius_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:circumscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::circumscribed_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCG}
{\bkmkend AAAAAAACCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v configuration_mutex_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:configuration_mutex_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::mutex base_local_planner::TrajectoryPlanner::configuration_mutex_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCH}
{\bkmkend AAAAAAACCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b costmap_2d::Costmap2D}& base_local_planner::TrajectoryPlanner::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCI}
{\bkmkend AAAAAAACCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides access to cost map information }}\par
}
{\xe \v dwa_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:dwa_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::dwa_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCJ}
{\bkmkend AAAAAAACCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should we use the dynamic window approach? }}\par
}
{\xe \v escape_reset_dist_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:escape_reset_dist_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::escape_reset_dist_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCK}
{\bkmkend AAAAAAACCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v escape_reset_theta_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:escape_reset_theta_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::escape_reset_theta_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCL}
{\bkmkend AAAAAAACCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance the robot must travel before it can leave escape mode }}\par
}
{\xe \v escape_theta_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:escape_theta_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::escape_theta_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCM}
{\bkmkend AAAAAAACCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to calculate the distance the robot has traveled before reseting escape booleans }}\par
}
{\xe \v escape_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:escape_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::escape_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCN}
{\bkmkend AAAAAAACCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v escape_y_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:escape_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::escape_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCO}
{\bkmkend AAAAAAACCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v escaping_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:escaping_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::escaping_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCP}
{\bkmkend AAAAAAACCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Boolean to keep track of whether we're in escape mode }}\par
}
{\xe \v final_goal_position_valid_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:final_goal_position_valid_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::final_goal_position_valid_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCQ}
{\bkmkend AAAAAAACCQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
True if final_goal_x_ and final_goal_y_ have valid data. Only false if an empty path is sent. }}\par
}
{\xe \v final_goal_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:final_goal_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::final_goal_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCR}
{\bkmkend AAAAAAACCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v final_goal_y_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:final_goal_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::final_goal_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCS}
{\bkmkend AAAAAAACCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The end position of the plan. }}\par
}
{\xe \v footprint_helper_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:footprint_helper_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::FootprintHelper} base_local_planner::TrajectoryPlanner::footprint_helper_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCT}
{\bkmkend AAAAAAACCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_spec_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:footprint_spec_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> base_local_planner::TrajectoryPlanner::footprint_spec_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCU}
{\bkmkend AAAAAAACCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The footprint specification of the robot }}\par
}
{\xe \v global_plan_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:global_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped> base_local_planner::TrajectoryPlanner::global_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCV}
{\bkmkend AAAAAAACCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The global path for the robot to follow }}\par
}
{\xe \v goal_distance_bias_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:goal_distance_bias_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::goal_distance_bias_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCW}
{\bkmkend AAAAAAACCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_map_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:goal_map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapGrid} base_local_planner::TrajectoryPlanner::goal_map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCX}
{\bkmkend AAAAAAACCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local map grid where we propagate goal distance }}\par
}
{\xe \v goal_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:goal_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::goal_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCY}
{\bkmkend AAAAAAACCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal_y_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:goal_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::goal_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACCZ}
{\bkmkend AAAAAAACCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for the local goal the robot is pursuing }}\par
}
{\xe \v heading_lookahead_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:heading_lookahead_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::heading_lookahead_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDA}
{\bkmkend AAAAAAACDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How far the robot should look ahead of itself when differentiating between different rotational velocities }}\par
}
{\xe \v heading_scoring_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:heading_scoring_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::heading_scoring_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDB}
{\bkmkend AAAAAAACDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Should we score based on the rollout approach or the heading approach }}\par
}
{\xe \v heading_scoring_timestep_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:heading_scoring_timestep_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::heading_scoring_timestep_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDC}
{\bkmkend AAAAAAACDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How far to look ahead in time when we score a heading }}\par
}
{\xe \v holonomic_robot_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:holonomic_robot_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::holonomic_robot_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDD}
{\bkmkend AAAAAAACDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is the robot holonomic or not? }}\par
}
{\xe \v inscribed_radius_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:inscribed_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::inscribed_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDE}
{\bkmkend AAAAAAACDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_th_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:max_vel_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::max_vel_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDF}
{\bkmkend AAAAAAACDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:max_vel_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::max_vel_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDG}
{\bkmkend AAAAAAACDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v meter_scoring_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:meter_scoring_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::meter_scoring_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDH}
{\bkmkend AAAAAAACDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_in_place_vel_th_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:min_in_place_vel_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::min_in_place_vel_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDI}
{\bkmkend AAAAAAACDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Velocity limits for the controller }}\par
}
{\xe \v min_vel_th_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:min_vel_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::min_vel_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDJ}
{\bkmkend AAAAAAACDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_vel_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:min_vel_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::min_vel_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDK}
{\bkmkend AAAAAAACDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v occdist_scale_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:occdist_scale_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::occdist_scale_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDL}
{\bkmkend AAAAAAACDL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Scaling factors for the controller's cost function }}\par
}
{\xe \v oscillation_reset_dist_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:oscillation_reset_dist_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::oscillation_reset_dist_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDM}
{\bkmkend AAAAAAACDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance the robot must travel before it can explore rotational velocities that were unsuccessful in the past }}\par
}
{\xe \v path_distance_bias_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:path_distance_bias_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::path_distance_bias_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDN}
{\bkmkend AAAAAAACDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v path_map_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:path_map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapGrid} base_local_planner::TrajectoryPlanner::path_map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDO}
{\bkmkend AAAAAAACDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The local map grid where we propagate path distance }}\par
}
{\xe \v prev_x_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:prev_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::prev_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDP}
{\bkmkend AAAAAAACDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v prev_y_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:prev_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::prev_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDQ}
{\bkmkend AAAAAAACDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used to calculate the distance the robot has traveled before reseting oscillation booleans }}\par
}
{\xe \v rotating_left\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:rotating_left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::rotating_left{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDR}
{\bkmkend AAAAAAACDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotating_right\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:rotating_right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::rotating_right{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDS}
{\bkmkend AAAAAAACDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep track of the direction of rotation for the robot }}\par
}
{\xe \v sim_granularity_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:sim_granularity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::sim_granularity_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDT}
{\bkmkend AAAAAAACDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The distance between simulation points }}\par
}
{\xe \v sim_period_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:sim_period_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::sim_period_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDU}
{\bkmkend AAAAAAACDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of seconds to use to compute max/min vels for dwa }}\par
}
{\xe \v sim_time_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:sim_time_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::sim_time_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDV}
{\bkmkend AAAAAAACDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of seconds each trajectory is "rolled-out" }}\par
}
{\xe \v simple_attractor_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:simple_attractor_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::simple_attractor_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDW}
{\bkmkend AAAAAAACDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enables simple attraction to a goal point }}\par
}
{\xe \v stop_time_buffer_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:stop_time_buffer_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlanner::stop_time_buffer_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDX}
{\bkmkend AAAAAAACDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
How long before hitting something we're going to enforce that the robot stop }}\par
}
{\xe \v strafe_left\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:strafe_left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::strafe_left{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDY}
{\bkmkend AAAAAAACDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep track of strafe direction for the robot }}\par
}
{\xe \v strafe_right\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:strafe_right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::strafe_right{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACDZ}
{\bkmkend AAAAAAACDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stuck_left\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:stuck_left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::stuck_left{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEA}
{\bkmkend AAAAAAACEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stuck_left_strafe\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:stuck_left_strafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::stuck_left_strafe{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEB}
{\bkmkend AAAAAAACEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stuck_right\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:stuck_right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::stuck_right{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEC}
{\bkmkend AAAAAAACEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep the robot from oscillating during rotation }}\par
}
{\xe \v stuck_right_strafe\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:stuck_right_strafe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlanner::stuck_right_strafe{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACED}
{\bkmkend AAAAAAACED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Booleans to keep the robot from oscillating during strafing }}\par
}
{\xe \v traj_one\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:traj_one}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Trajectory} base_local_planner::TrajectoryPlanner::traj_one{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEE}
{\bkmkend AAAAAAACEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v traj_two\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:traj_two}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Trajectory} base_local_planner::TrajectoryPlanner::traj_two{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEF}
{\bkmkend AAAAAAACEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Used for scoring trajectories }}\par
}
{\xe \v vtheta_samples_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:vtheta_samples_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::TrajectoryPlanner::vtheta_samples_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEG}
{\bkmkend AAAAAAACEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of samples we'll take in the theta dimension of the control space }}\par
}
{\xe \v vx_samples_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:vx_samples_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int base_local_planner::TrajectoryPlanner::vx_samples_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEH}
{\bkmkend AAAAAAACEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The number of samples we'll take in the x dimenstion of the control space }}\par
}
{\xe \v world_model_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:world_model_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WorldModel}& base_local_planner::TrajectoryPlanner::world_model_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEI}
{\bkmkend AAAAAAACEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The world model that the controller uses for collision detection }}\par
}
{\xe \v y_vels_\:base_local_planner::TrajectoryPlanner}
{\xe \v base_local_planner::TrajectoryPlanner\:y_vels_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> base_local_planner::TrajectoryPlanner::y_vels_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEJ}
{\bkmkend AAAAAAACEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Y velocities to explore }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b trajectory_planner.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b trajectory_planner.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectoryPlannerROS\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS}
{\bkmkstart AAAAAAACEK}
{\bkmkend AAAAAAACEK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for the trajectory controller that queries the param server to construct a controller }}\par
{
{\f2 #include <trajectory_planner_ros.h>}}\par
\'C0\'E0 base_local_planner::TrajectoryPlannerROS \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::TrajectoryPlannerROS \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlannerROS} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'AC\'C8\'CF\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlannerROS} (std::string name, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'ECros\'B7\'E2\'D7\'B0\'C0\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initialize} (std::string name, tf2_ros::Buffer *tf, {\b costmap_2d::Costmap2DROS} *costmap_ros)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'ECros\'B7\'E2\'D7\'B0\'C0\'E0 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TrajectoryPlannerROS} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b computeVelocityCommands} (geometry_msgs::Twist &cmd_vel)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'B1\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CB\'D7\'F8\'B1\'EA\'A3\'AC\'B3\'AF\'CF\'F2\'BA\'CD\'CB\'D9\'B6\'C8\'A3\'AC\'BC\'C6\'CB\'E3\'CF\'C2\'B8\'F6\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setPlan} (const std::vector< geometry_msgs::PoseStamped > &orig_global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'C2\'B7\'BE\'B6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isGoalReached} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'CA\'C7\'B7\'F1\'D2\'D1\'BE\'AD\'B5\'BD\'B4\'EF\'C1\'CB\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b checkTrajectory} (double vx_samp, double vy_samp, double vtheta_samp, bool update_map=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'C6\'CB\'E3\'B9\'EC\'BC\'A3\'B2\'A2\'C7\'D2\'CE\'AA\'C6\'E4\'B4\'F2\'B7\'D6 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} (double vx_samp, double vy_samp, double vtheta_samp, bool update_map=true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B2\'FA\'C9\'FA\'BA\'CD\'B4\'F2\'B7\'D6\'B5\'A5\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isInitialized} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlanner} * {\b getPlanner} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'C4\'DA\'B2\'BF\'B5\'C4TrajectoryPlanner\'B6\'D4\'CF\'F3\'A3\'AC\'D6\'BB\'D3\'D0\'D4\'DAinitialize()\'BA\'F3\'B2\'C5\'D3\'D0\'D0\'A7 }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (BaseLocalPlannerConfig &config, uint32_t level)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'C3\'D3\'DA\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'CE\'CA\'FD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotateToGoal} (const geometry_msgs::PoseStamped &global_pose, const geometry_msgs::PoseStamped &robot_vel, double goal_th, geometry_msgs::Twist &cmd_vel)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'BB\'B5\'A9\'B5\'BD\'C1\'CB\'C4\'BF\'B1\'EA\'B5\'E3\'CE\'BB\'D6\'C3\'C9\'CF\'A3\'AC\'BF\'AA\'CA\'BC\'D0\'FD\'D7\'AA\'B6\'D4\'C6\'EB }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b stopWithAccLimits} (const geometry_msgs::PoseStamped &global_pose, const geometry_msgs::PoseStamped &robot_vel, geometry_msgs::Twist &cmd_vel)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F9\'D3\'DA\'BC\'D3\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'CD\'A3\'D6\'B9 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b loadYVels} (ros::NodeHandle node)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sign} (double x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WorldModel} * {\b world_model_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlanner} * {\b tc_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'EC\'BC\'A3\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'A3\'ACtc\'CA\'C7 trajectory controller\'B5\'C4\'CB\'F5\'D0\'B4 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2DROS} * {\b costmap_ros_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::Costmap2D} * {\b costmap_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGridVisualizer} {\b map_viz_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b tf_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b global_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_sensor_range_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
nav_msgs::Odometry {\b base_odom_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b robot_base_frame_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b rot_stopped_velocity_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b trans_stopped_velocity_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b xy_goal_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b yaw_goal_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_in_place_vel_th_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::PoseStamped > {\b global_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prune_plan_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::recursive_mutex {\b odom_lock_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_vel_th_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b min_vel_th_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b acc_lim_theta_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sim_period_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b rotating_to_goal_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b reached_goal_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b latch_xy_goal_tolerance_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b xy_tolerance_latch_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b g_plan_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b l_plan_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< BaseLocalPlannerConfig > * {\b dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner::BaseLocalPlannerConfig {\b default_config_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setup_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b initialized_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::OdometryHelperRos} {\b odom_helper_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b footprint_spec_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for the trajectory controller that queries the param server to construct a controller \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TrajectoryPlannerROS\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:TrajectoryPlannerROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryPlannerROS::TrajectoryPlannerROS ()}}
\par
{\bkmkstart AAAAAAACEL}
{\bkmkend AAAAAAACEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'C4\'AC\'C8\'CF\'B9\'B9\'D4\'EC\'BA\'AF\'CA\'FD }}\par
}
{\xe \v TrajectoryPlannerROS\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:TrajectoryPlannerROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryPlannerROS::TrajectoryPlannerROS (std::string  {\i name}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros})}}
\par
{\bkmkstart AAAAAAACEM}
{\bkmkend AAAAAAACEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'ECros\'B7\'E2\'D7\'B0\'C0\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{transform listener\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a0ea81ba7bfd31aaa999477ae8f9e0d0f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~TrajectoryPlannerROS\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:~TrajectoryPlannerROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryPlannerROS::~TrajectoryPlannerROS ()}}
\par
{\bkmkstart AAAAAAACEN}
{\bkmkend AAAAAAACEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'E2\'D7\'B0\'C0\'E0\'B5\'C4\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkTrajectory\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:checkTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::checkTrajectory (double  {\i vx_samp}, double  {\i vy_samp}, double  {\i vtheta_samp}, bool  {\i update_map} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACEO}
{\bkmkend AAAAAAACEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'C6\'CB\'E3\'B9\'EC\'BC\'A3\'B2\'A2\'C7\'D2\'CE\'AA\'C6\'E4\'B4\'F2\'B7\'D6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx_samp} \cell }{\'D3\'C3\'D3\'DA\'CD\'C6\'CB\'E3\'B3\'F6\'C2\'B7\'BE\'B6\'B5\'C4x\'B7\'BD\'CF\'F2\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy_samp} \cell }{\'D3\'C3\'D3\'DA\'CD\'C6\'CB\'E3\'B3\'F6\'C2\'B7\'BE\'B6\'B5\'C4y\'B7\'BD\'CF\'F2\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta_samp} \cell }{\'D3\'C3\'D3\'DA\'CD\'C6\'CB\'E3\'B3\'F6\'C2\'B7\'BE\'B6\'B5\'C4\'BD\'C7\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i update_map} \cell }{\'CA\'C7\'B7\'F1\'B8\'FC\'D0\'C2\'B5\'D8\'CD\'BC when computing the legality of the trajectory, this is useful to set to false if you're going to be doing a lot of trajectory checking over a short period of time \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True if the trajectory is legal, false otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a9155bebb3d073ae4b19b8d0da87478a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v computeVelocityCommands\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:computeVelocityCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::computeVelocityCommands (geometry_msgs::Twist &  {\i cmd_vel}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEP}
{\bkmkend AAAAAAACEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'B1\'C7\'B0\'BB\'FA\'C6\'F7\'C8\'CB\'D7\'F8\'B1\'EA\'A3\'AC\'B3\'AF\'CF\'F2\'BA\'CD\'CB\'D9\'B6\'C8\'A3\'AC\'BC\'C6\'CB\'E3\'CF\'C2\'B8\'F6\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'B4\'E6\'B4\'A2\'D5\'DF\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True\'D2\'E2\'CE\'B6\'D7\'C5\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'B9\'EC\'BC\'A3 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_adb2d96332da31a154db84930754409af_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getPlanner\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:getPlanner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrajectoryPlanner} * base_local_planner::TrajectoryPlannerROS::getPlanner () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACER}
{\bkmkend AAAAAAACER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'C4\'DA\'B2\'BF\'B5\'C4TrajectoryPlanner\'B6\'D4\'CF\'F3\'A3\'AC\'D6\'BB\'D3\'D0\'D4\'DAinitialize()\'BA\'F3\'B2\'C5\'D3\'D0\'D0\'A7 }}\par
}
{\xe \v initialize\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:initialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlannerROS::initialize (std::string  {\i name}, tf2_ros::Buffer *  {\i tf}, {\b costmap_2d::Costmap2DROS} *  {\i costmap_ros}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACES}
{\bkmkend AAAAAAACES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'B9\'D4\'ECros\'B7\'E2\'D7\'B0\'C0\'E0 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'C3\'FB\'D7\'D6 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tf} \cell }{transform listener\'B5\'C4\'D6\'B8\'D5\'EB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i costmap} \cell }{\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC \cell }
{\row }
}
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACET \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a9a758c9bd9cb0202ed06c07c5aa49c03_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a9a758c9bd9cb0202ed06c07c5aa49c03_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isGoalReached\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:isGoalReached}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::isGoalReached (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACEU}
{\bkmkend AAAAAAACEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BC\'EC\'B2\'E9\'CA\'C7\'B7\'F1\'D2\'D1\'BE\'AD\'B5\'BD\'B4\'EF\'C1\'CB\'C4\'BF\'B1\'EA\'B5\'E3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D2\'D1\'BE\'AD\'B5\'BD\'B4\'EF \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACEV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a5196b75a728ab7c37d6bdd99faa7b541_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isInitialized\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:isInitialized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::isInitialized (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACEW}
{\bkmkend AAAAAAACEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a99bc029d01fb414521862b83f81aa5c9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loadYVels\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:loadYVels}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > base_local_planner::TrajectoryPlannerROS::loadYVels (ros::NodeHandle  {\i node}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEX}
{\bkmkend AAAAAAACEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a1a94734b46ffd4a4b0cc58ac894e9414_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlannerROS::reconfigureCB (BaseLocalPlannerConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEY}
{\bkmkend AAAAAAACEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D3\'C3\'D3\'DA\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'CE\'CA\'FD\'B5\'C4\'BB\'D8\'B5\'F7\'BA\'AF\'CA\'FD }}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a9fa1e0775ebaf2cc0d46d65011b68630_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a9fa1e0775ebaf2cc0d46d65011b68630_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v rotateToGoal\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:rotateToGoal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::rotateToGoal (const geometry_msgs::PoseStamped &  {\i global_pose}, const geometry_msgs::PoseStamped &  {\i robot_vel}, double  {\i goal_th}, geometry_msgs::Twist &  {\i cmd_vel}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACEZ}
{\bkmkend AAAAAAACEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D2\'BB\'B5\'A9\'B5\'BD\'C1\'CB\'C4\'BF\'B1\'EA\'B5\'E3\'CE\'BB\'D6\'C3\'C9\'CF\'A3\'AC\'BF\'AA\'CA\'BC\'D0\'FD\'D7\'AA\'B6\'D4\'C6\'EB }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'D4\'DA\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i robot_vel} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i goal_th} \cell }{\'C6\'DA\'CD\'FB\'B5\'C4th \'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'CB\'D9\'B6\'C8\'C3\'FC\'C1\'EE\'B5\'C4\'D4\'D8\'CC\'E5 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'B5\'C4\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a668b3cdefa51616c2fdf44b5ae2299b6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_a668b3cdefa51616c2fdf44b5ae2299b6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v scoreTrajectory\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::scoreTrajectory (double  {\i vx_samp}, double  {\i vy_samp}, double  {\i vtheta_samp}, bool  {\i update_map} = {\f2 true})}}
\par
{\bkmkstart AAAAAAACFA}
{\bkmkend AAAAAAACFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B2\'FA\'C9\'FA\'BA\'CD\'B4\'F2\'B7\'D6\'B5\'A5\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vx_samp} \cell }{\'D3\'C3\'D3\'DA\'CD\'C6\'CB\'E3\'B3\'F6\'C2\'B7\'BE\'B6\'B5\'C4x\'B7\'BD\'CF\'F2\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vy_samp} \cell }{\'D3\'C3\'D3\'DA\'CD\'C6\'CB\'E3\'B3\'F6\'C2\'B7\'BE\'B6\'B5\'C4y\'B7\'BD\'CF\'F2\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i vtheta_samp} \cell }{\'D3\'C3\'D3\'DA\'CD\'C6\'CB\'E3\'B3\'F6\'C2\'B7\'BE\'B6\'B5\'C4\'BD\'C7\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i update_map} \cell }{\'CA\'C7\'B7\'F1\'B8\'FC\'D0\'C2\'B5\'D8\'CD\'BC when computing the legality of the trajectory, this is useful to set to false if you're going to be doing a lot of trajectory checking over a short period of time \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
score of trajectory (double) \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_af883fc515db5a2234cd6b6d366ca31a5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setPlan\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:setPlan}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::setPlan (const std::vector< geometry_msgs::PoseStamped > &  {\i orig_global_plan}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACFB}
{\bkmkend AAAAAAACFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D2\'AA\'B8\'FA\'CB\'E6\'B5\'C4\'C2\'B7\'BE\'B6 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i orig_global_plan} \cell }{\'B8\'FC\'D0\'C2\'B5\'C4\'C2\'B7\'BE\'B6 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B1\'ED\'CA\'BE\'B8\'FC\'D0\'C2\'B3\'C9\'B9\'A6 \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b nav_core::BaseLocalPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACFC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_af3a0c8be5746b1e1d8657f6b867ea934_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sign\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::sign (double  {\i x}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFD}
{\bkmkend AAAAAAACFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_ada7a715a0c6fb57fa5254b817519362b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stopWithAccLimits\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:stopWithAccLimits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::stopWithAccLimits (const geometry_msgs::PoseStamped &  {\i global_pose}, const geometry_msgs::PoseStamped &  {\i robot_vel}, geometry_msgs::Twist &  {\i cmd_vel}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFE}
{\bkmkend AAAAAAACFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'F9\'D3\'DA\'BC\'D3\'CB\'D9\'B6\'C8\'CF\'DE\'D6\'C6\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'CD\'A3\'D6\'B9 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i global_pose} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'D4\'DA\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5\'CF\'C2\'B5\'C4\'CE\'BB\'D7\'CB \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i robot_vel} \cell }{\'BB\'FA\'C6\'F7\'C8\'CB\'CB\'D9\'B6\'C8 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cmd_vel} \cell }{\'CB\'D9\'B6\'C8\'C3\'FC\'C1\'EE\'B5\'C4\'D4\'D8\'CC\'E5 \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
True \'B4\'FA\'B1\'ED\'D5\'D2\'B5\'BD\'D3\'D0\'D0\'A7\'B5\'C4\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_ab82e06f9bf7a71996678689b83d5d1e3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_r_o_s_ab82e06f9bf7a71996678689b83d5d1e3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v acc_lim_theta_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:acc_lim_theta_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::acc_lim_theta_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFF}
{\bkmkend AAAAAAACFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v acc_lim_x_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:acc_lim_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::acc_lim_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFG}
{\bkmkend AAAAAAACFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v acc_lim_y_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:acc_lim_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::acc_lim_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFH}
{\bkmkend AAAAAAACFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v base_odom_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:base_odom_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
nav_msgs::Odometry base_local_planner::TrajectoryPlannerROS::base_odom_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFI}
{\bkmkend AAAAAAACFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:costmap_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2D}* base_local_planner::TrajectoryPlannerROS::costmap_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFJ}
{\bkmkend AAAAAAACFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v costmap_ros_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:costmap_ros_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::Costmap2DROS}* base_local_planner::TrajectoryPlannerROS::costmap_ros_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFK}
{\bkmkend AAAAAAACFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v default_config_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:default_config_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::BaseLocalPlannerConfig base_local_planner::TrajectoryPlannerROS::default_config_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFL}
{\bkmkend AAAAAAACFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dsrv_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<BaseLocalPlannerConfig>* base_local_planner::TrajectoryPlannerROS::dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFM}
{\bkmkend AAAAAAACFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v footprint_spec_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:footprint_spec_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::Point> base_local_planner::TrajectoryPlannerROS::footprint_spec_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFN}
{\bkmkend AAAAAAACFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_plan_pub_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:g_plan_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher base_local_planner::TrajectoryPlannerROS::g_plan_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFO}
{\bkmkend AAAAAAACFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_frame_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:global_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::TrajectoryPlannerROS::global_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFP}
{\bkmkend AAAAAAACFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v global_plan_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:global_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<geometry_msgs::PoseStamped> base_local_planner::TrajectoryPlannerROS::global_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFQ}
{\bkmkend AAAAAAACFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v initialized_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:initialized_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::initialized_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFR}
{\bkmkend AAAAAAACFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v l_plan_pub_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:l_plan_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher base_local_planner::TrajectoryPlannerROS::l_plan_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFS}
{\bkmkend AAAAAAACFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v latch_xy_goal_tolerance_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:latch_xy_goal_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::latch_xy_goal_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFT}
{\bkmkend AAAAAAACFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_viz_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:map_viz_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapGridVisualizer} base_local_planner::TrajectoryPlannerROS::map_viz_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFU}
{\bkmkend AAAAAAACFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_sensor_range_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:max_sensor_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::max_sensor_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFV}
{\bkmkend AAAAAAACFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_vel_th_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:max_vel_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::max_vel_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFW}
{\bkmkend AAAAAAACFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_in_place_vel_th_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:min_in_place_vel_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::min_in_place_vel_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFX}
{\bkmkend AAAAAAACFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v min_vel_th_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:min_vel_th_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::min_vel_th_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFY}
{\bkmkend AAAAAAACFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_helper_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:odom_helper_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b base_local_planner::OdometryHelperRos} base_local_planner::TrajectoryPlannerROS::odom_helper_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACFZ}
{\bkmkend AAAAAAACFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v odom_lock_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:odom_lock_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::recursive_mutex base_local_planner::TrajectoryPlannerROS::odom_lock_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGA}
{\bkmkend AAAAAAACGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v prune_plan_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:prune_plan_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::prune_plan_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGB}
{\bkmkend AAAAAAACGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reached_goal_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:reached_goal_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::reached_goal_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGC}
{\bkmkend AAAAAAACGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v robot_base_frame_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:robot_base_frame_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string base_local_planner::TrajectoryPlannerROS::robot_base_frame_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGD}
{\bkmkend AAAAAAACGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rot_stopped_velocity_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:rot_stopped_velocity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::rot_stopped_velocity_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGE}
{\bkmkend AAAAAAACGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v rotating_to_goal_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:rotating_to_goal_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::rotating_to_goal_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGF}
{\bkmkend AAAAAAACGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setup_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:setup_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::setup_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGG}
{\bkmkend AAAAAAACGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sim_period_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:sim_period_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::sim_period_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGH}
{\bkmkend AAAAAAACGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tc_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:tc_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrajectoryPlanner}* base_local_planner::TrajectoryPlannerROS::tc_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGI}
{\bkmkend AAAAAAACGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B9\'EC\'BC\'A3\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'A3\'ACtc\'CA\'C7 trajectory controller\'B5\'C4\'CB\'F5\'D0\'B4 }}\par
}
{\xe \v tf_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* base_local_planner::TrajectoryPlannerROS::tf_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGJ}
{\bkmkend AAAAAAACGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v trans_stopped_velocity_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:trans_stopped_velocity_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::trans_stopped_velocity_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGK}
{\bkmkend AAAAAAACGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v world_model_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:world_model_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WorldModel}* base_local_planner::TrajectoryPlannerROS::world_model_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGL}
{\bkmkend AAAAAAACGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xy_goal_tolerance_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:xy_goal_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::xy_goal_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGM}
{\bkmkend AAAAAAACGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xy_tolerance_latch_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:xy_tolerance_latch_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TrajectoryPlannerROS::xy_tolerance_latch_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGN}
{\bkmkend AAAAAAACGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yaw_goal_tolerance_\:base_local_planner::TrajectoryPlannerROS}
{\xe \v base_local_planner::TrajectoryPlannerROS\:yaw_goal_tolerance_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TrajectoryPlannerROS::yaw_goal_tolerance_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACGO}
{\bkmkend AAAAAAACGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b trajectory_planner_ros.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b trajectory_planner_ros.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectoryPlannerTest\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest}
{\bkmkstart AAAAAAACGP}
{\bkmkend AAAAAAACGP}
\'C0\'E0 base_local_planner::TrajectoryPlannerTest \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::TrajectoryPlannerTest \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlannerTest} ({\b MapGrid} *g, {\b WavefrontMapAccessor} *wave, const {\b costmap_2d::Costmap2D} &map, std::vector< geometry_msgs::Point > footprint_spec)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b correctFootprint} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b footprintObstacles} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkGoalDistance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b checkPathDistance} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b TestBody} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} * {\b map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WavefrontMapAccessor} * {\b wa}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CostmapModel} {\b cm}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectoryPlanner} {\b tc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TrajectoryPlannerTest\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:TrajectoryPlannerTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectoryPlannerTest::TrajectoryPlannerTest ({\b MapGrid} *  {\i g}, {\b WavefrontMapAccessor} *  {\i wave}, const {\b costmap_2d::Costmap2D} &  {\i map}, std::vector< geometry_msgs::Point >  {\i footprint_spec})}}
\par
{\bkmkstart AAAAAAACGQ}
{\bkmkend AAAAAAACGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v checkGoalDistance\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:checkGoalDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlannerTest::checkGoalDistance ()}}
\par
{\bkmkstart AAAAAAACGR}
{\bkmkend AAAAAAACGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_a58ec327a9cf5589741ccf6bd31ca933d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_a58ec327a9cf5589741ccf6bd31ca933d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v checkPathDistance\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:checkPathDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlannerTest::checkPathDistance ()}}
\par
{\bkmkstart AAAAAAACGS}
{\bkmkend AAAAAAACGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_a53eaee5e09664c9c8882bf23eb45be82_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_a53eaee5e09664c9c8882bf23eb45be82_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v correctFootprint\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:correctFootprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlannerTest::correctFootprint ()}}
\par
{\bkmkstart AAAAAAACGT}
{\bkmkend AAAAAAACGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_a43249763a2358cc3abf0c673662ed823_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintObstacles\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:footprintObstacles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::TrajectoryPlannerTest::footprintObstacles ()}}
\par
{\bkmkstart AAAAAAACGU}
{\bkmkend AAAAAAACGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_aed6310ad3775b62007fa12ea9a3df4da_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_planner_test_aed6310ad3775b62007fa12ea9a3df4da_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TestBody\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:TestBody}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void base_local_planner::TrajectoryPlannerTest::TestBody (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACGV}
{\bkmkend AAAAAAACGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v cm\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:cm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CostmapModel} base_local_planner::TrajectoryPlannerTest::cm}}
\par
{\bkmkstart AAAAAAACGW}
{\bkmkend AAAAAAACGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapGrid}* base_local_planner::TrajectoryPlannerTest::map_}}
\par
{\bkmkstart AAAAAAACGX}
{\bkmkend AAAAAAACGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tc\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:tc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TrajectoryPlanner} base_local_planner::TrajectoryPlannerTest::tc}}
\par
{\bkmkstart AAAAAAACGY}
{\bkmkend AAAAAAACGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wa\:base_local_planner::TrajectoryPlannerTest}
{\xe \v base_local_planner::TrajectoryPlannerTest\:wa}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WavefrontMapAccessor}* base_local_planner::TrajectoryPlannerTest::wa}}
\par
{\bkmkstart AAAAAAACGZ}
{\bkmkend AAAAAAACGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/test/{\b utest.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectorySampleGenerator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectorySampleGenerator}
{\xe \v base_local_planner::TrajectorySampleGenerator}
{\bkmkstart AAAAAAACHA}
{\bkmkend AAAAAAACHA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for navigation trajectory generators }}\par
{
{\f2 #include <trajectory_sample_generator.h>}}\par
\'C0\'E0 base_local_planner::TrajectorySampleGenerator \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_sample_generator__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b hasMoreTrajectories} ()=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b nextTrajectory} ({\b Trajectory} &traj)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TrajectorySampleGenerator} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BD\'D3\'BF\'DA\'B5\'C4\'D0\'E9\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectorySampleGenerator} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for navigation trajectory generators \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~TrajectorySampleGenerator\:base_local_planner::TrajectorySampleGenerator}
{\xe \v base_local_planner::TrajectorySampleGenerator\:~TrajectorySampleGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::TrajectorySampleGenerator::~TrajectorySampleGenerator (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHB}
{\bkmkend AAAAAAACHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BD\'D3\'BF\'DA\'B5\'C4\'D0\'E9\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD }}\par
}
{\xe \v TrajectorySampleGenerator\:base_local_planner::TrajectorySampleGenerator}
{\xe \v base_local_planner::TrajectorySampleGenerator\:TrajectorySampleGenerator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectorySampleGenerator::TrajectorySampleGenerator (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHC}
{\bkmkend AAAAAAACHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v hasMoreTrajectories\:base_local_planner::TrajectorySampleGenerator}
{\xe \v base_local_planner::TrajectorySampleGenerator\:hasMoreTrajectories}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool base_local_planner::TrajectorySampleGenerator::hasMoreTrajectories (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABZH}
{\bkmkend AAAAAAABZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'E2\'B8\'F6\'B2\'FA\'C9\'FA\'C6\'F7\'CA\'C7\'B7\'F1\'BF\'C9\'D2\'D4\'C9\'FA\'B3\'C9\'B6\'E0\'B8\'F6\'C2\'B7\'BE\'B6 \par
}{
\'D4\'DA {\b base_local_planner::SimpleTrajectoryGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZG \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_sample_generator_a053d4cfcef3b7c84bc86eb4c87211e3b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v nextTrajectory\:base_local_planner::TrajectorySampleGenerator}
{\xe \v base_local_planner::TrajectorySampleGenerator\:nextTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool base_local_planner::TrajectorySampleGenerator::nextTrajectory ({\b Trajectory} &  {\i traj}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABZL}
{\bkmkend AAAAAAABZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D5\'E2\'B8\'F6\'B2\'FA\'C9\'FA\'C6\'F7\'CA\'C7\'B7\'F1\'BF\'C9\'D2\'D4\'C9\'FA\'B2\'FA\'B6\'E0\'B8\'F6\'C2\'B7\'BE\'B6 \par
}{
\'D4\'DA {\b base_local_planner::SimpleTrajectoryGenerator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABZK \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_sample_generator_a810dd5771cf6cd1645fabf5c9bc25d94_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b trajectory_sample_generator.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TrajectorySearch\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TrajectorySearch}
{\xe \v base_local_planner::TrajectorySearch}
{\bkmkstart AAAAAAACHD}
{\bkmkend AAAAAAACHD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F7\'CE\'AA\'D2\'BB\'B8\'F6\'B4\'BF\'D0\'E9\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D1\'B0\'D5\'D2\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'A3\'BF\'E9\'BD\'D3\'BF\'DA }}\par
{
{\f2 #include <trajectory_search.h>}}\par
\'C0\'E0 base_local_planner::TrajectorySearch \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_trajectory_search__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual bool {\b findBestTrajectory} ({\b Trajectory} &traj, std::vector< {\b Trajectory} > *all_explored)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~TrajectorySearch} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TrajectorySearch} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F7\'CE\'AA\'D2\'BB\'B8\'F6\'B4\'BF\'D0\'E9\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D1\'B0\'D5\'D2\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'A3\'BF\'E9\'BD\'D3\'BF\'DA \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~TrajectorySearch\:base_local_planner::TrajectorySearch}
{\xe \v base_local_planner::TrajectorySearch\:~TrajectorySearch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::TrajectorySearch::~TrajectorySearch (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHE}
{\bkmkend AAAAAAACHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TrajectorySearch\:base_local_planner::TrajectorySearch}
{\xe \v base_local_planner::TrajectorySearch\:TrajectorySearch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TrajectorySearch::TrajectorySearch (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACHF}
{\bkmkend AAAAAAACHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v findBestTrajectory\:base_local_planner::TrajectorySearch}
{\xe \v base_local_planner::TrajectorySearch\:findBestTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual bool base_local_planner::TrajectorySearch::findBestTrajectory ({\b Trajectory} &  {\i traj}, std::vector< {\b Trajectory} > *  {\i all_explored}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABYV}
{\bkmkend AAAAAAABYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D4\'DA\'B8\'F8\'B6\'A8\'B5\'C4\'BF\'D5\'BC\'E4\'C0\'EF\'CB\'D1\'D1\'B0\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'A3\'AC\'D4\'DA\'C2\'FA\'D7\'E3\'D2\'BB\'D0\'A9\'CF\'DE\'D6\'C6\'C7\'E9\'BF\'F6\'CF\'C2\'A3\'AC\'B7\'B5\'BB\'D8\'D7\'EE\'D3\'C5\'B5\'C4\'D2\'BB\'B8\'F6 {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i traj} \cell }{\'B4\'E6\'B4\'A2\'BC\'C6\'CB\'E3\'BD\'E1\'B9\'FB\'B5\'C4\'C8\'DD\'C6\'F7 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i all_explored} \cell }{\'B4\'AB\'B5\'DDnull\'BB\'F2\'D5\'DF\'CB\'D1\'BC\'AF\'C1\'CB\'CB\'F9\'D2\'D4\'C2\'B7\'BE\'B6\'B5\'C4\'C8\'DD\'C6\'F7\'A3\'AC\'D3\'C3\'C0\'B4debug(\'D3\'D0\'D2\'BB\'B6\'A8\'B3\'CD\'B7\'A3) \cell }
{\row }
}
}{
\'D4\'DA {\b base_local_planner::SimpleScoredSamplingPlanner} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABYU \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b trajectory_search.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::TwirlingCostFunction\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::TwirlingCostFunction}
{\xe \v base_local_planner::TwirlingCostFunction}
{\bkmkstart AAAAAAACHG}
{\bkmkend AAAAAAACHG}
\par
{
{\f2 #include <twirling_cost_function.h>}}\par
\'C0\'E0 base_local_planner::TwirlingCostFunction \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_twirling_cost_function__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::TwirlingCostFunction \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_twirling_cost_function__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TwirlingCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~TwirlingCostFunction} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b scoreTrajectory} ({\b Trajectory} &traj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b prepare} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class provides a cost based on how much a robot "twirls" on its way to the goal. With differential-drive robots, there isn't a choice, but with holonomic or near-holonomic robots, sometimes a robot spins more than you'd like on its way to a goal. This class provides a way to assign a penalty purely to rotational velocities. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v TwirlingCostFunction\:base_local_planner::TwirlingCostFunction}
{\xe \v base_local_planner::TwirlingCostFunction\:TwirlingCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TwirlingCostFunction::TwirlingCostFunction (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHH}
{\bkmkend AAAAAAACHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~TwirlingCostFunction\:base_local_planner::TwirlingCostFunction}
{\xe \v base_local_planner::TwirlingCostFunction\:~TwirlingCostFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::TwirlingCostFunction::~TwirlingCostFunction (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHI}
{\bkmkend AAAAAAACHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v prepare\:base_local_planner::TwirlingCostFunction}
{\xe \v base_local_planner::TwirlingCostFunction\:prepare}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::TwirlingCostFunction::prepare (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAU}
{\bkmkend AAAAAAACAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'FC\'D0\'C2\'B3\'A3\'D3\'C3\'B5\'C4\'B1\'E4\'C1\'BF \'B1\'CF\'BE\'B9\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD\'A3\'AC\'D7\'D3\'C0\'E0\'D6\'D0\'B1\'D8\'D0\'EB\'D6\'D8\'D0\'B4\'B8\'C3\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTR \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v scoreTrajectory\:base_local_planner::TwirlingCostFunction}
{\xe \v base_local_planner::TwirlingCostFunction\:scoreTrajectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::TwirlingCostFunction::scoreTrajectory ({\b Trajectory} &  {\i traj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACAV}
{\bkmkend AAAAAAACAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C6\'C0\'B7\'D6\'A3\'AC\'D2\'B2\'CA\'C7\'B4\'BF\'D0\'E9\'BA\'AF\'CA\'FD \par
}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::TrajectoryCostFunction} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b twirling_cost_function.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b twirling_cost_function.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::VelocityIterator\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator}
{\bkmkstart AAAAAAACHJ}
{\bkmkend AAAAAAACHJ}
\par
{
{\f2 #include <velocity_iterator.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VelocityIterator} (double min, double max, int num_samples)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getVelocity} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VelocityIterator} & {\b operator++} (int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isFinished} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b samples_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b current_index}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
VelocityIterator\'D3\'C3\'D3\'DA\'BB\'F1\'B5\'C3\'CF\'E0\'CD\'AC\'B4\'F3\'D0\'A1\'B5\'C4\'D7\'EE\'B4\'F3\'BA\'CD\'D7\'EE\'D0\'A1\'D6\'B5, inluding zero if it is not included (and range goes from negative to positive \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v VelocityIterator\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:VelocityIterator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::VelocityIterator::VelocityIterator (double  {\i min}, double  {\i max}, int  {\i num_samples}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHK}
{\bkmkend AAAAAAACHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v getVelocity\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:getVelocity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VelocityIterator::getVelocity (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHL}
{\bkmkend AAAAAAACHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_velocity_iterator_aa89af2f5352eda024084506787e45a01_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isFinished\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:isFinished}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::VelocityIterator::isFinished (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHM}
{\bkmkend AAAAAAACHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_velocity_iterator_a26feadcdf741e954dd8551028a4ed204_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator++\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:operator++}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VelocityIterator} & base_local_planner::VelocityIterator::operator++ (int ){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHN}
{\bkmkend AAAAAAACHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reset\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VelocityIterator::reset (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHO}
{\bkmkend AAAAAAACHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_velocity_iterator_a305df916173f8e725ae5cd81e75d2306_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v current_index\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:current_index}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int base_local_planner::VelocityIterator::current_index{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHP}
{\bkmkend AAAAAAACHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v samples_\:base_local_planner::VelocityIterator}
{\xe \v base_local_planner::VelocityIterator\:samples_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> base_local_planner::VelocityIterator::samples_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHQ}
{\bkmkend AAAAAAACHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b velocity_iterator.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid::VoxelGrid\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid}
{\bkmkstart AAAAAAADWE}
{\bkmkend AAAAAAADWE}
\par
{
{\f2 #include <voxel_grid.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClearVoxel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ClearVoxelInMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GridOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MarkVoxel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ZOffset}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VoxelGrid} (unsigned int size_x, unsigned int size_y, unsigned int size_z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for a voxel grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~VoxelGrid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resize} (unsigned int size_x, unsigned int size_y, unsigned int size_z)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resizes a voxel grid to the desired size }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t * {\b getData} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b markVoxel} (unsigned int x, unsigned int y, unsigned int z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b markVoxelInMap} (unsigned int x, unsigned int y, unsigned int z, unsigned int marked_threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearVoxel} (unsigned int x, unsigned int y, unsigned int z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearVoxelColumn} (unsigned int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearVoxelInMap} (unsigned int x, unsigned int y, unsigned int z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b bitsBelowThreshold} (unsigned int {\b n}, unsigned int bit_threshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b markVoxelLine} (double x0, double y0, double z0, double x1, double y1, double z1, unsigned int max_length=UINT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearVoxelLine} (double x0, double y0, double z0, double x1, double y1, double z1, unsigned int max_length=UINT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearVoxelLineInMap} (double x0, double y0, double z0, double x1, double y1, double z1, unsigned char *map_2d, unsigned int unknown_threshold, unsigned int mark_threshold, unsigned char free_cost=0, unsigned char unknown_cost=255, unsigned int max_length=UINT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VoxelStatus} {\b getVoxel} (unsigned int x, unsigned int y, unsigned int z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VoxelStatus} {\b getVoxelColumn} (unsigned int x, unsigned int y, unsigned int unknown_threshold=0, unsigned int marked_threshold=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printVoxelGrid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printColumnGrid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sizeX} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sizeY} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sizeZ} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ActionType > void {\b raytraceLine} (ActionType at, double x0, double y0, double z0, double x1, double y1, double z1, unsigned int max_length=UINT_MAX)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BE\'B2\'CC\'AC Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b numBits} (unsigned int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b VoxelStatus} {\b getVoxel} (unsigned int x, unsigned int y, unsigned int z, unsigned int size_x, unsigned int size_y, unsigned int size_z, const uint32_t *data)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class ActionType , class OffA , class OffB , class OffC > void {\b bresenham3D} (ActionType at, OffA off_a, OffB off_b, OffC off_c, unsigned int abs_da, unsigned int abs_db, unsigned int abs_dc, int error_b, int error_c, int offset_a, int offset_b, int offset_c, unsigned int &offset, unsigned int &z_mask, unsigned int max_length=UINT_MAX)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sign} (int i)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b max} (unsigned int x, unsigned int y)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_z_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t * {\b data_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b costmap}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v VoxelGrid\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:VoxelGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VoxelGrid::VoxelGrid (unsigned int  {\i size_x}, unsigned int  {\i size_y}, unsigned int  {\i size_z})}}
\par
{\bkmkstart AAAAAAADWF}
{\bkmkend AAAAAAADWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for a voxel grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The x size of the grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The y size of the grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_z} \cell }{The z size of the grid, only sizes <= 16 are supported \cell }
{\row }
}
}}
{\xe \v ~VoxelGrid\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:~VoxelGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
VoxelGrid::~VoxelGrid ()}}
\par
{\bkmkstart AAAAAAADWG}
{\bkmkend AAAAAAADWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v bitsBelowThreshold\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:bitsBelowThreshold}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool voxel_grid::VoxelGrid::bitsBelowThreshold (unsigned int  {\i n}, unsigned int  {\i bit_threshold}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWH}
{\bkmkend AAAAAAADWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a2063758dd2b12bbb08c90257fa4a3cd2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v bresenham3D\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:bresenham3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ActionType , class OffA , class OffB , class OffC > void voxel_grid::VoxelGrid::bresenham3D (ActionType  {\i at}, OffA  {\i off_a}, OffB  {\i off_b}, OffC  {\i off_c}, unsigned int  {\i abs_da}, unsigned int  {\i abs_db}, unsigned int  {\i abs_dc}, int  {\i error_b}, int  {\i error_c}, int  {\i offset_a}, int  {\i offset_b}, int  {\i offset_c}, unsigned int &  {\i offset}, unsigned int &  {\i z_mask}, unsigned int  {\i max_length} = {\f2 UINT_MAX}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADWI}
{\bkmkend AAAAAAADWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a6162764691b8e3966d31348e459486db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearVoxel\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:clearVoxel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::clearVoxel (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i z}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWJ}
{\bkmkend AAAAAAADWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearVoxelColumn\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:clearVoxelColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::clearVoxelColumn (unsigned int  {\i index}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWK}
{\bkmkend AAAAAAADWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a74857af17abfe3158048a169ee87252a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearVoxelInMap\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:clearVoxelInMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::clearVoxelInMap (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i z}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWL}
{\bkmkend AAAAAAADWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a744c735aea9d22e68c43c07baa88d9fa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearVoxelLine\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:clearVoxelLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::clearVoxelLine (double  {\i x0}, double  {\i y0}, double  {\i z0}, double  {\i x1}, double  {\i y1}, double  {\i z1}, unsigned int  {\i max_length} = {\f2 UINT_MAX})}}
\par
{\bkmkstart AAAAAAADWM}
{\bkmkend AAAAAAADWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_af64ffc7bcf9f4c2ca4c8c7473f15d51e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_af64ffc7bcf9f4c2ca4c8c7473f15d51e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v clearVoxelLineInMap\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:clearVoxelLineInMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::clearVoxelLineInMap (double  {\i x0}, double  {\i y0}, double  {\i z0}, double  {\i x1}, double  {\i y1}, double  {\i z1}, unsigned char *  {\i map_2d}, unsigned int  {\i unknown_threshold}, unsigned int  {\i mark_threshold}, unsigned char  {\i free_cost} = {\f2 0}, unsigned char  {\i unknown_cost} = {\f2 255}, unsigned int  {\i max_length} = {\f2 UINT_MAX})}}
\par
{\bkmkstart AAAAAAADWN}
{\bkmkend AAAAAAADWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a204172dfa4c1d101aab0cac064f24a6f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a204172dfa4c1d101aab0cac064f24a6f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getData\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:getData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t * voxel_grid::VoxelGrid::getData (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWO}
{\bkmkend AAAAAAADWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_ae298c07e3b613c065271c11417f8e951_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getVoxel\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:getVoxel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VoxelStatus} VoxelGrid::getVoxel (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i z})}}
\par
{\bkmkstart AAAAAAADWP}
{\bkmkend AAAAAAADWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a555dd1e57f4041603c8f8085c564b7e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getVoxel\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:getVoxel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b VoxelStatus} voxel_grid::VoxelGrid::getVoxel (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i z}, unsigned int  {\i size_x}, unsigned int  {\i size_y}, unsigned int  {\i size_z}, const uint32_t *  {\i data}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAADWQ}
{\bkmkend AAAAAAADWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a82798a1492156f1c23801e0c486743a3_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a82798a1492156f1c23801e0c486743a3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getVoxelColumn\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:getVoxelColumn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VoxelStatus} VoxelGrid::getVoxelColumn (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i unknown_threshold} = {\f2 0}, unsigned int  {\i marked_threshold} = {\f2 0})}}
\par
{\bkmkstart AAAAAAADWR}
{\bkmkend AAAAAAADWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a1cb19a239dd48a4df82e664f8dd53a36_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a1cb19a239dd48a4df82e664f8dd53a36_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v markVoxel\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:markVoxel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::markVoxel (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i z}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWS}
{\bkmkend AAAAAAADWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_af05c08221c341915183f8b78bb267b89_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v markVoxelInMap\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:markVoxelInMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool voxel_grid::VoxelGrid::markVoxelInMap (unsigned int  {\i x}, unsigned int  {\i y}, unsigned int  {\i z}, unsigned int  {\i marked_threshold}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWT}
{\bkmkend AAAAAAADWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a115003f6d22524e8221e286eae51b784_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a115003f6d22524e8221e286eae51b784_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v markVoxelLine\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:markVoxelLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::markVoxelLine (double  {\i x0}, double  {\i y0}, double  {\i z0}, double  {\i x1}, double  {\i y1}, double  {\i z1}, unsigned int  {\i max_length} = {\f2 UINT_MAX})}}
\par
{\bkmkstart AAAAAAADWU}
{\bkmkend AAAAAAADWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a77c35197ba21a2c5b6ce3c9ea5ba5877_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a77c35197ba21a2c5b6ce3c9ea5ba5877_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v max\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:max}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int voxel_grid::VoxelGrid::max (unsigned int  {\i x}, unsigned int  {\i y}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADWV}
{\bkmkend AAAAAAADWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a4a7315df7b9fd6cf64b9055742fa693f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v numBits\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:numBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static unsigned int voxel_grid::VoxelGrid::numBits (unsigned int  {\i n}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAADWW}
{\bkmkend AAAAAAADWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_aa2bd3d5ac9d1b1aaea15728978b203db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printColumnGrid\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:printColumnGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::printColumnGrid ()}}
\par
{\bkmkstart AAAAAAADWX}
{\bkmkend AAAAAAADWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_af784f39681d85eb758b04d5d6db4700a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_af784f39681d85eb758b04d5d6db4700a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printVoxelGrid\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:printVoxelGrid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::printVoxelGrid ()}}
\par
{\bkmkstart AAAAAAADWY}
{\bkmkend AAAAAAADWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a23f965c26a19c8eeddaedab7640999a0_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a23f965c26a19c8eeddaedab7640999a0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v raytraceLine\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:raytraceLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class ActionType > void voxel_grid::VoxelGrid::raytraceLine (ActionType  {\i at}, double  {\i x0}, double  {\i y0}, double  {\i z0}, double  {\i x1}, double  {\i y1}, double  {\i z1}, unsigned int  {\i max_length} = {\f2 UINT_MAX}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADWZ}
{\bkmkend AAAAAAADWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_abde2d6af5b3bd1c027171c1553308cc2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_abde2d6af5b3bd1c027171c1553308cc2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::reset ()}}
\par
{\bkmkstart AAAAAAADXA}
{\bkmkend AAAAAAADXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_aab30ed5d435c878574d0769186d196ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resize\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void VoxelGrid::resize (unsigned int  {\i size_x}, unsigned int  {\i size_y}, unsigned int  {\i size_z})}}
\par
{\bkmkstart AAAAAAADXB}
{\bkmkend AAAAAAADXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resizes a voxel grid to the desired size }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The x size of the grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The y size of the grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_z} \cell }{The z size of the grid, only sizes <= 16 are supported \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a5b03e57131d3ae12440c701cb1216688_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a5b03e57131d3ae12440c701cb1216688_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sign\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int voxel_grid::VoxelGrid::sign (int  {\i i}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXC}
{\bkmkend AAAAAAADXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_ad9c87a014630da9252f62cef62319cea_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sizeX\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:sizeX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int VoxelGrid::sizeX ()}}
\par
{\bkmkstart AAAAAAADXD}
{\bkmkend AAAAAAADXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a443198a401b95b15c75c3f33c7064646_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sizeY\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:sizeY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int VoxelGrid::sizeY ()}}
\par
{\bkmkstart AAAAAAADXE}
{\bkmkend AAAAAAADXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a53c39103a03b74959a128b6df7343aaa_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sizeZ\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:sizeZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int VoxelGrid::sizeZ ()}}
\par
{\bkmkstart AAAAAAADXF}
{\bkmkend AAAAAAADXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classvoxel__grid_1_1_voxel_grid_a1c624a3440de0db222caf0f675ff614d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v costmap\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:costmap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* voxel_grid::VoxelGrid::costmap{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXG}
{\bkmkend AAAAAAADXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v data_\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:data_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t* voxel_grid::VoxelGrid::data_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXH}
{\bkmkend AAAAAAADXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_x_\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:size_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int voxel_grid::VoxelGrid::size_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXI}
{\bkmkend AAAAAAADXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_y_\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:size_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int voxel_grid::VoxelGrid::size_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXJ}
{\bkmkend AAAAAAADXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_z_\:voxel_grid::VoxelGrid}
{\xe \v voxel_grid::VoxelGrid\:size_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int voxel_grid::VoxelGrid::size_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADXK}
{\bkmkend AAAAAAADXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/src/{\b voxel_grid.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VoxelGrid\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v VoxelGrid}
{\xe \v VoxelGrid}
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 3D grid structure that stores points as an integer array. X and Y index the array and Z selects which bit of the integer is used giving a limit of 16 vertical cells. }}\par
{
{\f2 #include <voxel_grid.h>}}\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 3D grid structure that stores points as an integer array. X and Y index the array and Z selects which bit of the integer is used giving a limit of 16 vertical cells. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::VoxelGridModel\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel}
{\bkmkstart AAAAAAACHR}
{\bkmkend AAAAAAACHR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using a 3D voxel grid. }}\par
{
{\f2 #include <voxel_grid_model.h>}}\par
\'C0\'E0 base_local_planner::VoxelGridModel \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::VoxelGridModel \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VoxelGridModel} (double size_x, double size_y, double size_z, double xy_resolution, double z_resolution, double origin_x, double origin_y, double origin_z, double max_z, double obstacle_range)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b VoxelGridModel} }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~VoxelGridModel} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor for the world model }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the voxel grid lie inside a convex footprint that is rasterized into the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateWorld} (const std::vector< geometry_msgs::Point > &footprint, const std::vector< {\b costmap_2d::Observation} > &observations, const std::vector< {\b PlanarLaserScan} > &laser_scans)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The costmap already keeps track of world observations, so for this world model this method does nothing }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getPoints} (sensor_msgs::PointCloud2 &cloud)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function copying the Voxel points into a point cloud }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, double inscribed_radius=0.0, double circumscribed_radius=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius, double extra)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b lineCost} (int x0, int x1, int y0, int y1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rasterizes a line in the costmap grid and checks for collisions }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pointCost} (int x, int y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the cost of a point in the costmap }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b removePointsInScanBoundry} (const {\b PlanarLaserScan} &laser_scan, double raytrace_range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b worldToMap3D} (double wx, double wy, double wz, unsigned int &mx, unsigned int &my, unsigned int &mz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b worldToMap2D} (double wx, double wy, unsigned int &mx, unsigned int &my)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapToWorld3D} (unsigned int mx, unsigned int my, unsigned int mz, double &wx, double &wy, double &wz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapToWorld2D} (unsigned int mx, unsigned int my, double &wx, double &wy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dist} (double x0, double y0, double z0, double x1, double y1, double z1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b insert} (const geometry_msgs::Point32 &pt)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b voxel_grid::VoxelGrid} {\b obstacle_grid_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b xy_resolution_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_resolution_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_x_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_y_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_z_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b max_z_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height cutoff for adding points as obstacles }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sq_obstacle_range_}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The square distance at which we no longer add obstacles to the grid }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using a 3D voxel grid. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v VoxelGridModel\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:VoxelGridModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::VoxelGridModel::VoxelGridModel (double  {\i size_x}, double  {\i size_y}, double  {\i size_z}, double  {\i xy_resolution}, double  {\i z_resolution}, double  {\i origin_x}, double  {\i origin_y}, double  {\i origin_z}, double  {\i max_z}, double  {\i obstacle_range})}}
\par
{\bkmkstart AAAAAAACHS}
{\bkmkend AAAAAAACHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Constructor for the {\b VoxelGridModel} }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_x} \cell }{The x size of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_y} \cell }{The y size of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i size_z} \cell }{The z size of the map... up to 32 cells \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i xy_resolution} \cell }{The horizontal resolution of the map in meters/cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i z_resolution} \cell }{The vertical resolution of the map in meters/cell \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin_x} \cell }{The x value of the origin of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin_y} \cell }{The y value of the origin of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i origin_z} \cell }{The z value of the origin of the map \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_z} \cell }{The maximum height for an obstacle to be added to the grid \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i obstacle_range} \cell }{The maximum distance for obstacles to be added to the grid \cell }
{\row }
}
}}
{\xe \v ~VoxelGridModel\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:~VoxelGridModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::VoxelGridModel::~VoxelGridModel (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHT}
{\bkmkend AAAAAAACHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destructor for the world model }}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dist\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::dist (double  {\i x0}, double  {\i y0}, double  {\i z0}, double  {\i x1}, double  {\i y1}, double  {\i z1}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACHU}
{\bkmkend AAAAAAACHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a1c2c7a677f931ae95969ebf5bfcccd3d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHV}
{\bkmkend AAAAAAACHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the voxel grid lie inside a convex footprint that is rasterized into the grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::WorldModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_affcef4b1c4c95dd4209d36bd0d24fc14_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACHW}
{\bkmkend AAAAAAACHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise: -1 if footprint covers at least a lethal obstacle cell, or -2 if footprint covers at least a no-information cell, or -3 if footprint is partially or totally outside of the map \par
}}}{
\'CA\'B5\'CF\'D6\'C1\'CB {\b base_local_planner::WorldModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v footprintCost\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}, double  {\i extra}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHX}
{\bkmkend AAAAAAACHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise \par
}}}}
{\xe \v footprintCost\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (double  {\i x}, double  {\i y}, double  {\i theta}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec}, double  {\i inscribed_radius} = {\f2 0.0}, double  {\i circumscribed_radius} = {\f2 0.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACHY}
{\bkmkend AAAAAAACHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getPoints\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:getPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VoxelGridModel::getPoints (sensor_msgs::PointCloud2 &  {\i cloud})}}
\par
{\bkmkstart AAAAAAACHZ}
{\bkmkend AAAAAAACHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Function copying the Voxel points into a point cloud }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cloud} \cell }{the point cloud to copy data to. It has the usual x,y,z channels \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_ae64342a63e8e7360997aba566b5f0ed1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v insert\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VoxelGridModel::insert (const geometry_msgs::Point32 &  {\i pt}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIA}
{\bkmkend AAAAAAACIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a393524da3d207d7d7d1ac4979fa759ac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a393524da3d207d7d7d1ac4979fa759ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v lineCost\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:lineCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::lineCost (int  {\i x0}, int  {\i x1}, int  {\i y0}, int  {\i y1}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIB}
{\bkmkend AAAAAAACIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Rasterizes a line in the costmap grid and checks for collisions }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x0} \cell }{The x position of the first cell in grid coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y0} \cell }{The y position of the first cell in grid coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x1} \cell }{The x position of the second cell in grid coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y1} \cell }{The y position of the second cell in grid coordinates \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A positive cost for a legal line... negative otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a5d23209def60ddb1e49b2ab5b38b57b1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a5d23209def60ddb1e49b2ab5b38b57b1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapToWorld2D\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:mapToWorld2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VoxelGridModel::mapToWorld2D (unsigned int  {\i mx}, unsigned int  {\i my}, double &  {\i wx}, double &  {\i wy}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIC}
{\bkmkend AAAAAAACIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mapToWorld3D\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:mapToWorld3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VoxelGridModel::mapToWorld3D (unsigned int  {\i mx}, unsigned int  {\i my}, unsigned int  {\i mz}, double &  {\i wx}, double &  {\i wy}, double &  {\i wz}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACID}
{\bkmkend AAAAAAACID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_acef8400483d48cae6e563cfcb79bbc7c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pointCost\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:pointCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::pointCost (int  {\i x}, int  {\i y}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIE}
{\bkmkend AAAAAAACIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks the cost of a point in the costmap }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i x} \cell }{The x position of the point in cell coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i y} \cell }{The y position of the point in cell coordinates \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A positive cost for a legal point... negative otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a4fd267d8b1e15639cde041ce9a57c505_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a4fd267d8b1e15639cde041ce9a57c505_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v removePointsInScanBoundry\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:removePointsInScanBoundry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VoxelGridModel::removePointsInScanBoundry (const {\b PlanarLaserScan} &  {\i laser_scan}, double  {\i raytrace_range}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIF}
{\bkmkend AAAAAAACIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a1ec57951ccb153b2a2a2e997e703e13f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a1ec57951ccb153b2a2a2e997e703e13f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateWorld\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:updateWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::VoxelGridModel::updateWorld (const std::vector< geometry_msgs::Point > &  {\i footprint}, const std::vector< {\b costmap_2d::Observation} > &  {\i observations}, const std::vector< {\b PlanarLaserScan} > &  {\i laser_scans})}}
\par
{\bkmkstart AAAAAAACIG}
{\bkmkend AAAAAAACIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The costmap already keeps track of world observations, so for this world model this method does nothing }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The footprint of the robot in its current location \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i observations} \cell }{The observations from various sensors \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i laser_scan} \cell }{The scans used to clear freespace \cell }
{\row }
}
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a3a5b2c042a813dc06a9fdbfcd0bd6291_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMap2D\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:worldToMap2D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::VoxelGridModel::worldToMap2D (double  {\i wx}, double  {\i wy}, unsigned int &  {\i mx}, unsigned int &  {\i my}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIH}
{\bkmkend AAAAAAACIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a186435fb11fac84f700c65c9d09f1c66_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMap3D\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:worldToMap3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool base_local_planner::VoxelGridModel::worldToMap3D (double  {\i wx}, double  {\i wy}, double  {\i wz}, unsigned int &  {\i mx}, unsigned int &  {\i my}, unsigned int &  {\i mz}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAACII}
{\bkmkend AAAAAAACII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_voxel_grid_model_a3a709a7c0a5b7715cc4ffd3f5b9ce739_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v max_z_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:max_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::max_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIJ}
{\bkmkend AAAAAAACIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The height cutoff for adding points as obstacles }}\par
}
{\xe \v obstacle_grid_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:obstacle_grid_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b voxel_grid::VoxelGrid} base_local_planner::VoxelGridModel::obstacle_grid_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIK}
{\bkmkend AAAAAAACIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_x_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:origin_x_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::origin_x_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIL}
{\bkmkend AAAAAAACIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_y_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:origin_y_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::origin_y_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIM}
{\bkmkend AAAAAAACIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_z_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:origin_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::origin_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIN}
{\bkmkend AAAAAAACIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sq_obstacle_range_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:sq_obstacle_range_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::sq_obstacle_range_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIO}
{\bkmkend AAAAAAACIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The square distance at which we no longer add obstacles to the grid }}\par
}
{\xe \v xy_resolution_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:xy_resolution_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::xy_resolution_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIP}
{\bkmkend AAAAAAACIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_resolution_\:base_local_planner::VoxelGridModel}
{\xe \v base_local_planner::VoxelGridModel\:z_resolution_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::VoxelGridModel::z_resolution_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIQ}
{\bkmkend AAAAAAACIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b voxel_grid_model.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/src/{\b voxel_grid_model.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d::VoxelLayer\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer}
{\bkmkstart AAAAAAADAZ}
{\bkmkend AAAAAAADAZ}
\par
{
{\f2 #include <voxel_layer.h>}}\par
\'C0\'E0 costmap_2d::VoxelLayer \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
costmap_2d::VoxelLayer \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VoxelLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~VoxelLayer} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b onInitialize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b updateBounds} (double robot_x, double robot_y, double robot_yaw, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b updateOrigin} (double new_origin_x, double new_origin_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the origin of the costmap to a new location.... keeping data when it can }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isDiscretized} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b matchSize} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b reset} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b setupDynamicReconfigure} (ros::NodeHandle &nh)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b resetMaps} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the costmap and static_map to be unknown space }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reconfigureCB} (costmap_2d::VoxelPluginConfig &config, uint32_t level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b clearNonLethal} (double wx, double wy, double w_size_x, double w_size_y, bool clear_no_info)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b raytraceFreespace} (const {\b costmap_2d::Observation} &clearing_observation, double *min_x, double *min_y, double *max_x, double *max_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'A5\'B4\'CE\'B5\'C4\'B9\'DB\'B2\'E2\'C0\'B4\'C7\'E5\'B3\'FD\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b worldToMap3DFloat} (double wx, double wy, double wz, double &mx, double &my, double &mz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b worldToMap3D} (double wx, double wy, double wz, unsigned int &mx, unsigned int &my, unsigned int &mz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mapToWorld3D} (unsigned int mx, unsigned int my, unsigned int mz, double &wx, double &wy, double &wz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dist} (double x0, double y0, double z0, double x1, double y1, double z1)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
dynamic_reconfigure::Server< costmap_2d::VoxelPluginConfig > * {\b voxel_dsrv_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b publish_voxel_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b voxel_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b voxel_grid::VoxelGrid} {\b voxel_grid_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b z_resolution_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b origin_z_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b unknown_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b mark_threshold_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b size_z_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ros::Publisher {\b clearing_endpoints_pub_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
sensor_msgs::PointCloud {\b clearing_endpoints_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v VoxelLayer\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:VoxelLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::VoxelLayer::VoxelLayer (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBA}
{\bkmkend AAAAAAADBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ~VoxelLayer\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:~VoxelLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
costmap_2d::VoxelLayer::~VoxelLayer (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAADBB}
{\bkmkend AAAAAAADBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearNonLethal\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:clearNonLethal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::clearNonLethal (double  {\i wx}, double  {\i wy}, double  {\i w_size_x}, double  {\i w_size_y}, bool  {\i clear_no_info}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBC}
{\bkmkend AAAAAAADBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_ae0f13b98d89b26ab2283882cae023e04_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v dist\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:dist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::VoxelLayer::dist (double  {\i x0}, double  {\i y0}, double  {\i z0}, double  {\i x1}, double  {\i y1}, double  {\i z1}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBD}
{\bkmkend AAAAAAADBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_abd5944de6300c41e539f745c71dbf00d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isDiscretized\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:isDiscretized}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::VoxelLayer::isDiscretized (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADBE}
{\bkmkend AAAAAAADBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mapToWorld3D\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:mapToWorld3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::mapToWorld3D (unsigned int  {\i mx}, unsigned int  {\i my}, unsigned int  {\i mz}, double &  {\i wx}, double &  {\i wy}, double &  {\i wz}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBF}
{\bkmkend AAAAAAADBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v matchSize\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:matchSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::matchSize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACSF}
{\bkmkend AAAAAAACSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Implement this to make this layer match the size of the parent costmap. }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::CostmapLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACSC \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a0528c59b3cbe4c1b81748284ae0a3dc5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a0528c59b3cbe4c1b81748284ae0a3dc5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v onInitialize\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:onInitialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::onInitialize (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVG}
{\bkmkend AAAAAAACVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called at the end of {\b initialize()}. Override to implement subclass-specific initialization. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tf_, name_, and layered_costmap_ will all be set already when this is called. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVE \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a7b0d5249f27fd757f206493b491fd37a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v raytraceFreespace\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:raytraceFreespace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::raytraceFreespace (const {\b costmap_2d::Observation} &  {\i clearing_observation}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [private]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZF}
{\bkmkend AAAAAAACZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B5\'A5\'B4\'CE\'B5\'C4\'B9\'DB\'B2\'E2\'C0\'B4\'C7\'E5\'B3\'FD\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4 }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i clearing_observation} \cell }{\'D3\'C3\'D3\'DAraytrace\'B5\'C4\'B9\'DB\'B2\'E2 \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i min_y} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_x} \cell }{\cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i max_y} \cell }{\cell }
{\row }
}
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZE \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a6f7c914d410df715e01253b3584d9f21_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a6f7c914d410df715e01253b3584d9f21_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reconfigureCB\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:reconfigureCB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::reconfigureCB (costmap_2d::VoxelPluginConfig &  {\i config}, uint32_t  {\i level}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBG}
{\bkmkend AAAAAAADBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a2361abd50823db1734c1cc05a70d0c97_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a2361abd50823db1734c1cc05a70d0c97_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::reset (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVJ}
{\bkmkend AAAAAAACVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVH \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_af5f57588c57a8a5c8dff065b5a76a0db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetMaps\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:resetMaps}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::resetMaps (){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNO}
{\bkmkend AAAAAAACNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Resets the costmap and static_map to be unknown space }}\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Costmap2D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNN \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a56c9a252631b5d4af75c1d17eac8e052_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a56c9a252631b5d4af75c1d17eac8e052_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setupDynamicReconfigure\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:setupDynamicReconfigure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::setupDynamicReconfigure (ros::NodeHandle &  {\i nh}){\f2 [protected]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACZI}
{\bkmkend AAAAAAACZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
\'D6\'D8\'D4\'D8 {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACZH \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a7e9b75bd9cee13aa9f893a17d549fbee_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateBounds\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:updateBounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::updateBounds (double  {\i robot_x}, double  {\i robot_y}, double  {\i robot_yaw}, double *  {\i min_x}, double *  {\i min_y}, double *  {\i max_x}, double *  {\i max_y}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACVM}
{\bkmkend AAAAAAACVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is called by the {\b LayeredCostmap} to poll this plugin as to how much of the costmap it needs to update. Each layer can increase the size of this bounds. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
For more details, see "Layered Costmaps for Context-Sensitive Navigation", by Lu et. Al, IROS 2014. \par
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::ObstacleLayer} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACVK \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_ab28185cd71c8e42f72880b779ef08ae2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateOrigin\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:updateOrigin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void costmap_2d::VoxelLayer::updateOrigin (double  {\i new_origin_x}, double  {\i new_origin_y}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACNW}
{\bkmkend AAAAAAACNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move the origin of the costmap to a new location.... keeping data when it can }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_origin_x} \cell }{The x coordinate of the new origin \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i new_origin_y} \cell }{The y coordinate of the new origin \cell }
{\row }
}
}{
\'D6\'D8\'D4\'D8 {\b costmap_2d::Costmap2D} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACNV \\*MERGEFORMAT}{\fldrslt pagenum}}}) .}\par
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a91dc901da59c768aea0b25037bf46fef_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a91dc901da59c768aea0b25037bf46fef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMap3D\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:worldToMap3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::VoxelLayer::worldToMap3D (double  {\i wx}, double  {\i wy}, double  {\i wz}, unsigned int &  {\i mx}, unsigned int &  {\i my}, unsigned int &  {\i mz}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBH}
{\bkmkend AAAAAAADBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_a0c310e849291ea0c2cde7ca7b3a9e1e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v worldToMap3DFloat\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:worldToMap3DFloat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::VoxelLayer::worldToMap3DFloat (double  {\i wx}, double  {\i wy}, double  {\i wz}, double &  {\i mx}, double &  {\i my}, double &  {\i mz}){\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBI}
{\bkmkend AAAAAAADBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classcostmap__2d_1_1_voxel_layer_afe388a3645ce14998d2ae2a98a166ad0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v clearing_endpoints_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:clearing_endpoints_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
sensor_msgs::PointCloud costmap_2d::VoxelLayer::clearing_endpoints_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBJ}
{\bkmkend AAAAAAADBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v clearing_endpoints_pub_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:clearing_endpoints_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher costmap_2d::VoxelLayer::clearing_endpoints_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBK}
{\bkmkend AAAAAAADBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mark_threshold_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:mark_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::VoxelLayer::mark_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBL}
{\bkmkend AAAAAAADBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v origin_z_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:origin_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::VoxelLayer::origin_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBM}
{\bkmkend AAAAAAADBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v publish_voxel_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:publish_voxel_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool costmap_2d::VoxelLayer::publish_voxel_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBN}
{\bkmkend AAAAAAADBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v size_z_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:size_z_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::VoxelLayer::size_z_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBO}
{\bkmkend AAAAAAADBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v unknown_threshold_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:unknown_threshold_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int costmap_2d::VoxelLayer::unknown_threshold_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBP}
{\bkmkend AAAAAAADBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v voxel_dsrv_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:voxel_dsrv_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
dynamic_reconfigure::Server<costmap_2d::VoxelPluginConfig>* costmap_2d::VoxelLayer::voxel_dsrv_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBQ}
{\bkmkend AAAAAAADBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v voxel_grid_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:voxel_grid_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b voxel_grid::VoxelGrid} costmap_2d::VoxelLayer::voxel_grid_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBR}
{\bkmkend AAAAAAADBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v voxel_pub_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:voxel_pub_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ros::Publisher costmap_2d::VoxelLayer::voxel_pub_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBS}
{\bkmkend AAAAAAADBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v z_resolution_\:costmap_2d::VoxelLayer}
{\xe \v costmap_2d::VoxelLayer\:z_resolution_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double costmap_2d::VoxelLayer::z_resolution_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADBT}
{\bkmkend AAAAAAADBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/include/costmap_2d/{\b voxel_layer.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
costmap_2d/plugins/{\b voxel_layer.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::WavefrontMapAccessor\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::WavefrontMapAccessor}
{\xe \v base_local_planner::WavefrontMapAccessor}
{\bkmkstart AAAAAAACIR}
{\bkmkend AAAAAAACIR}
\par
{
{\f2 #include <wavefront_map_accessor.h>}}\par
\'C0\'E0 base_local_planner::WavefrontMapAccessor \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_wavefront_map_accessor__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
base_local_planner::WavefrontMapAccessor \'B5\'C4\'D0\'AD\'D7\'F7\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_wavefront_map_accessor__coll__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WavefrontMapAccessor} ({\b MapGrid} *map, double outer_radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~WavefrontMapAccessor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b synchronize} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MapGrid} * {\b map_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b outer_radius_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B6\'EE\'CD\'E2\'BC\'CC\'B3\'D0\'B5\'C4\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map_grids rely on costmaps to identify obstacles. We need a costmap that we can easily manipulate for unit tests. This class has a grid map where we can set grid cell state, and a synchronize method to make the costmap match. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v WavefrontMapAccessor\:base_local_planner::WavefrontMapAccessor}
{\xe \v base_local_planner::WavefrontMapAccessor\:WavefrontMapAccessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::WavefrontMapAccessor::WavefrontMapAccessor ({\b MapGrid} *  {\i map}, double  {\i outer_radius}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACIS}
{\bkmkend AAAAAAACIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_wavefront_map_accessor_a31116ccd4b8c9fa55916c57bd5e80c6e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~WavefrontMapAccessor\:base_local_planner::WavefrontMapAccessor}
{\xe \v base_local_planner::WavefrontMapAccessor\:~WavefrontMapAccessor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::WavefrontMapAccessor::~WavefrontMapAccessor (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACIT}
{\bkmkend AAAAAAACIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v synchronize\:base_local_planner::WavefrontMapAccessor}
{\xe \v base_local_planner::WavefrontMapAccessor\:synchronize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void base_local_planner::WavefrontMapAccessor::synchronize (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACIU}
{\bkmkend AAAAAAACIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_wavefront_map_accessor_a22a6ea335309603f580cac039bc8871c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_\:base_local_planner::WavefrontMapAccessor}
{\xe \v base_local_planner::WavefrontMapAccessor\:map_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b MapGrid}* base_local_planner::WavefrontMapAccessor::map_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIV}
{\bkmkend AAAAAAACIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v outer_radius_\:base_local_planner::WavefrontMapAccessor}
{\xe \v base_local_planner::WavefrontMapAccessor\:outer_radius_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WavefrontMapAccessor::outer_radius_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAACIW}
{\bkmkend AAAAAAACIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/test/{\b wavefront_map_accessor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner::WorldModel\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner::WorldModel}
{\xe \v base_local_planner::WorldModel}
{\bkmkstart AAAAAAACIX}
{\bkmkend AAAAAAACIX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An interface the trajectory controller uses to interact with the world regardless of the underlying world model. }}\par
{
{\f2 #include <world_model.h>}}\par
\'C0\'E0 base_local_planner::WorldModel \'BC\'CC\'B3\'D0\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_world_model__inherit__graph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius)=0\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, double inscribed_radius=0.0, double circumscribed_radius=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b footprintCost} (const geometry_msgs::Point &position, const std::vector< geometry_msgs::Point > &footprint, double inscribed_radius, double circumscribed_radius, double extra)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~WorldModel} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement a destructor }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WorldModel} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'CF\'EA\'CF\'B8\'C3\'E8\'CA\'F6\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An interface the trajectory controller uses to interact with the world regardless of the underlying world model. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ~WorldModel\:base_local_planner::WorldModel}
{\xe \v base_local_planner::WorldModel\:~WorldModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual base_local_planner::WorldModel::~WorldModel (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAACIY}
{\bkmkend AAAAAAACIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement a destructor }}\par
}
{\xe \v WorldModel\:base_local_planner::WorldModel}
{\xe \v base_local_planner::WorldModel\:WorldModel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
base_local_planner::WorldModel::WorldModel (){\f2 [inline]}, {\f2 [protected]}}}
\par
{\bkmkstart AAAAAAACIZ}
{\bkmkend AAAAAAACIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v footprintCost\:base_local_planner::WorldModel}
{\xe \v base_local_planner::WorldModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Subclass will implement this method to check a footprint at a given position and orientation for legality in the world }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise: -1 if footprint covers at least a lethal obstacle cell, or -2 if footprint covers at least a no-information cell, or -3 if footprint is partially or totally outside of the map \par
}}}{
\'D4\'DA {\b base_local_planner::CostmapModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::PointGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXD \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::VoxelGridModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::CostmapModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABOF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b base_local_planner::PointGrid} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABXE \\*MERGEFORMAT}{\fldrslt pagenum}}}) , \'D2\'D4\'BC\'B0 {\b base_local_planner::VoxelGridModel} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAACHW \\*MERGEFORMAT}{\fldrslt pagenum}}}) \'C4\'DA\'B1\'BB\'CA\'B5\'CF\'D6.}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_world_model_a36d4c808bc441e2b87b0ac038099993a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::WorldModel}
{\xe \v base_local_planner::WorldModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (const geometry_msgs::Point &  {\i position}, const std::vector< geometry_msgs::Point > &  {\i footprint}, double  {\i inscribed_radius}, double  {\i circumscribed_radius}, double  {\i extra}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJA}
{\bkmkend AAAAAAACJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Checks if any obstacles in the costmap lie inside a convex footprint that is rasterized into the grid }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B2\'CE\'CA\'FD\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i position} \cell }{The position of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i footprint} \cell }{The specification of the footprint of the robot in world coordinates \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i inscribed_radius} \cell }{The radius of the inscribed circle of the robot \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i circumscribed_radius} \cell }{The radius of the circumscribed circle of the robot \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'B7\'B5\'BB\'D8\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Positive if all the points lie outside the footprint, negative otherwise \par
}}}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_world_model_a358fe0d75fefe46dda134ee6e3305f71_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v footprintCost\:base_local_planner::WorldModel}
{\xe \v base_local_planner::WorldModel\:footprintCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double base_local_planner::WorldModel::footprintCost (double  {\i x}, double  {\i y}, double  {\i theta}, const std::vector< geometry_msgs::Point > &  {\i footprint_spec}, double  {\i inscribed_radius} = {\f2 0.0}, double  {\i circumscribed_radius} = {\f2 0.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAACJB}
{\bkmkend AAAAAAACJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "classbase__local__planner_1_1_world_model_ac7e8dc9c77a2dd2fa77f5a27d812fd43_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
base_local_planner/include/base_local_planner/{\b world_model.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid::VoxelGrid::ZOffset\'C0\'E0 \'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid::VoxelGrid::ZOffset}
{\xe \v voxel_grid::VoxelGrid::ZOffset}
{\bkmkstart AAAAAAADYH}
{\bkmkend AAAAAAADYH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public \'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ZOffset} (unsigned int &z_mask)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b operator()} (int offset_val)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private \'CA\'F4\'D0\'D4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int & {\b z_mask_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B9\'B9\'D4\'EC\'BC\'B0\'CE\'F6\'B9\'B9\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v ZOffset\:voxel_grid::VoxelGrid::ZOffset}
{\xe \v voxel_grid::VoxelGrid::ZOffset\:ZOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
voxel_grid::VoxelGrid::ZOffset::ZOffset (unsigned int &  {\i z_mask}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADYI}
{\bkmkend AAAAAAADYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B3\'C9\'D4\'B1\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v operator()\:voxel_grid::VoxelGrid::ZOffset}
{\xe \v voxel_grid::VoxelGrid::ZOffset\:operator()}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxel_grid::VoxelGrid::ZOffset::operator() (int  {\i offset_val}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAADYJ}
{\bkmkend AAAAAAADYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'B3\'C9\'D4\'B1\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v z_mask_\:voxel_grid::VoxelGrid::ZOffset}
{\xe \v voxel_grid::VoxelGrid::ZOffset\:z_mask_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int& voxel_grid::VoxelGrid::ZOffset::z_mask_{\f2 [private]}}}
\par
{\bkmkstart AAAAAAADYK}
{\bkmkend AAAAAAADYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\'B8\'C3\'C0\'E0\'B5\'C4\'CE\'C4\'B5\'B5\'D3\'C9\'D2\'D4\'CF\'C2\'CE\'C4\'BC\'FE\'C9\'FA\'B3\'C9:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
voxel_grid/include/voxel_grid/{\b voxel_grid.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CE\'C4\'BC\'FE\'CB\'B5\'C3\'F7{\tc \v \'CE\'C4\'BC\'FE\'CB\'B5\'C3\'F7}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/map/map.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/map/map.h}
{\xe \v amcl/include/amcl/map/map.h}
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b map_cell_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b map_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_WIFI_MAX_LEVELS}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_WXGX}(map,  i)\~ (map->origin_x + ((i) - map->size_x / 2) * map->scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_WYGY}(map,  j)\~ (map->origin_y + ((j) - map->size_y / 2) * map->scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_GXWX}(map,  x)\~ (floor((x - map->origin_x) / map->scale + 0.5) + map->size_x / 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_GYWY}(map,  y)\~ (floor((y - map->origin_y) / map->scale + 0.5) + map->size_y / 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_VALID}(map,  i,  j)\~ ((i >= 0) && (i < map->size_x) && (j >= 0) && (j < map->size_y))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_INDEX}(map,  i,  j)\~ ((i) + (j) * map->size_x)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_t} * {\b map_alloc} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_free} ({\b map_t} *map)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_cell_t} * {\b map_get_cell} ({\b map_t} *map, double ox, double oy, double oa)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b map_load_occ} ({\b map_t} *map, const char *filename, double scale, int negate)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_update_cspace} ({\b map_t} *map, double max_occ_dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b map_calc_range} ({\b map_t} *map, double ox, double oy, double oa, double max_range)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_draw_occ} ({\b map_t} *map, struct _rtk_fig_t *fig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_draw_cspace} ({\b map_t} *map, struct _rtk_fig_t *fig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_draw_wifi} ({\b map_t} *map, struct _rtk_fig_t *fig, int index)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MAP_GXWX\:map.h}
{\xe \v map.h\:MAP_GXWX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_GXWX( map,  x)\~ (floor((x - map->origin_x) / map->scale + 0.5) + map->size_x / 2)}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_GYWY\:map.h}
{\xe \v map.h\:MAP_GYWY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_GYWY( map,  y)\~ (floor((y - map->origin_y) / map->scale + 0.5) + map->size_y / 2)}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_INDEX\:map.h}
{\xe \v map.h\:MAP_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_INDEX( map,  i,  j)\~ ((i) + (j) * map->size_x)}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_VALID\:map.h}
{\xe \v map.h\:MAP_VALID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_VALID( map,  i,  j)\~ ((i >= 0) && (i < map->size_x) && (j >= 0) && (j < map->size_y))}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_WIFI_MAX_LEVELS\:map.h}
{\xe \v map.h\:MAP_WIFI_MAX_LEVELS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_WIFI_MAX_LEVELS\~ 8}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_WXGX\:map.h}
{\xe \v map.h\:MAP_WXGX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_WXGX( map,  i)\~ (map->origin_x + ((i) - map->size_x / 2) * map->scale)}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_WYGY\:map.h}
{\xe \v map.h\:MAP_WYGY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_WYGY( map,  j)\~ (map->origin_y + ((j) - map->size_y / 2) * map->scale)}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_alloc\:map.h}
{\xe \v map.h\:map_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_t} * map_alloc (void )}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h_a69abcca9449dcd0b4a74db33827e5a6c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v map_calc_range\:map.h}
{\xe \v map.h\:map_calc_range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_calc_range ({\b map_t} *  {\i map}, double  {\i ox}, double  {\i oy}, double  {\i oa}, double  {\i max_range})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h_aafef11c4d8efd07a4cb20bad5fc4bc83_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v map_draw_cspace\:map.h}
{\xe \v map.h\:map_draw_cspace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_draw_cspace ({\b map_t} *  {\i map}, struct _rtk_fig_t *  {\i fig})}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_draw_occ\:map.h}
{\xe \v map.h\:map_draw_occ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_draw_occ ({\b map_t} *  {\i map}, struct _rtk_fig_t *  {\i fig})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_draw_wifi\:map.h}
{\xe \v map.h\:map_draw_wifi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_draw_wifi ({\b map_t} *  {\i map}, struct _rtk_fig_t *  {\i fig}, int  {\i index})}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_free\:map.h}
{\xe \v map.h\:map_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_free ({\b map_t} *  {\i map})}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h_ae24d01dffc5a376977089830b93c9254_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v map_get_cell\:map.h}
{\xe \v map.h\:map_get_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_cell_t} * map_get_cell ({\b map_t} *  {\i map}, double  {\i ox}, double  {\i oy}, double  {\i oa})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_load_occ\:map.h}
{\xe \v map.h\:map_load_occ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int map_load_occ ({\b map_t} *  {\i map}, const char *  {\i filename}, double  {\i scale}, int  {\i negate})}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v map_update_cspace\:map.h}
{\xe \v map.h\:map_update_cspace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_update_cspace ({\b map_t} *  {\i map}, double  {\i max_occ_dist})}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h_a7a2e9876667cad69c3b70881c1aaf1ac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8h_a7a2e9876667cad69c3b70881c1aaf1ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/map/map.h}
{\xe \v amcl/include/amcl/map/map.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey   &  Kasper Stoy}\par
4 {\cf20  *                      gerkey@usc.edu    kaspers@robotics.usc.edu}\par
5 {\cf20  *}\par
6 {\cf20  *  This library is free software; you can redistribute it and/or}\par
7 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
8 {\cf20  *  License as published by the Free Software Foundation; either}\par
9 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
10 {\cf20  *}\par
11 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
12 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
13 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
14 {\cf20  *  Lesser General Public License for more details.}\par
15 {\cf20  *}\par
16 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
17 {\cf20  *  License along with this library; if not, write to the Free Software}\par
18 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
19 {\cf20  *}\par
20 {\cf20  */}\par
21 {\cf20 /**************************************************************************}\par
22 {\cf20  * Desc: Global map (grid-based)}\par
23 {\cf20  * Author: Andrew Howard}\par
24 {\cf20  * Date: 6 Feb 2003}\par
25 {\cf20  * CVS: $Id: map.h 1713 2003-08-23 04:03:43Z inspectorg $}\par
26 {\cf20  **************************************************************************/}\par
27 \par
28 {\cf21 #ifndef MAP_H}\par
29 {\cf21 #define MAP_H}\par
30 \par
31 {\cf21 #include <stdint.h>}\par
32 \par
33 {\cf21 #ifdef __cplusplus}\par
34 {\cf17 extern} {\cf22 "C"} \{\par
35 {\cf21 #endif}\par
36 \par
37 {\cf20 // Forward declarations}\par
38 {\cf17 struct }_rtk_fig_t;\par
39 \par
40   \par
41 {\cf20 // Limits}\par
42 {\cf21 #define MAP_WIFI_MAX_LEVELS 8}\par
43 \par
44   \par
45 {\cf20 // Description for a single map cell.}\par
46 {\cf17 typedef} {\cf17 struct}\par
47 \{\par
48   {\cf20 // Occupancy state (-1 = free, 0 = unknown, +1 = occ)}\par
49   {\cf18 int} occ_state;\par
50 \par
51   {\cf20 // Distance to the nearest occupied cell}\par
52   {\cf18 double} occ_dist;\par
53 \par
54   {\cf20 // Wifi levels}\par
55   {\cf20 //int wifi_levels[MAP_WIFI_MAX_LEVELS];}\par
56 \par
57 \} map_cell_t;\par
58 \par
59 \par
60 {\cf20 // Description for a map}\par
61 {\cf17 typedef} {\cf17 struct}\par
62 \{\par
63   {\cf20 // Map origin; the map is a viewport onto a conceptual larger map.}\par
64   {\cf18 double} origin_x, origin_y;\par
65   \par
66   {\cf20 // Map scale (m/cell)}\par
67   {\cf18 double} scale;\par
68 \par
69   {\cf20 // Map dimensions (number of cells)}\par
70   {\cf18 int} size_x, size_y;\par
71   \par
72   {\cf20 // The map data, stored as a grid}\par
73   map_cell_t *cells;\par
74 \par
75   {\cf20 // Max distance at which we care about obstacles, for constructing}\par
76   {\cf20 // likelihood field}\par
77   {\cf18 double} max_occ_dist;\par
78   \par
79 \} map_t;\par
80 \par
81 \par
82 \par
83 {\cf20 /**************************************************************************}\par
84 {\cf20  * Basic map functions}\par
85 {\cf20  **************************************************************************/}\par
86 \par
87 {\cf20 // Create a new (empty) map}\par
88 map_t *map_alloc({\cf18 void});\par
89 \par
90 {\cf20 // Destroy a map}\par
91 {\cf18 void} map_free(map_t *map);\par
92 \par
93 {\cf20 // Get the cell at the given point}\par
94 map_cell_t *map_get_cell(map_t *map, {\cf18 double} ox, {\cf18 double} oy, {\cf18 double} oa);\par
95 \par
96 {\cf20 // Load an occupancy map}\par
97 {\cf18 int} map_load_occ(map_t *map, {\cf17 const} {\cf18 char} *filename, {\cf18 double} scale, {\cf18 int} negate);\par
98 \par
99 {\cf20 // Load a wifi signal strength map}\par
100 {\cf20 //int map_load_wifi(map_t *map, const char *filename, int index);}\par
101 \par
102 {\cf20 // Update the cspace distances}\par
103 {\cf18 void} map_update_cspace(map_t *map, {\cf18 double} max_occ_dist);\par
104 \par
105 \par
106 {\cf20 /**************************************************************************}\par
107 {\cf20  * Range functions}\par
108 {\cf20  **************************************************************************/}\par
109 \par
110 {\cf20 // Extract a single range reading from the map}\par
111 {\cf18 double} map_calc_range(map_t *map, {\cf18 double} ox, {\cf18 double} oy, {\cf18 double} oa, {\cf18 double} max_range);\par
112 \par
113 \par
114 {\cf20 /**************************************************************************}\par
115 {\cf20  * GUI/diagnostic functions}\par
116 {\cf20  **************************************************************************/}\par
117 \par
118 {\cf20 // Draw the occupancy grid}\par
119 {\cf18 void} map_draw_occ(map_t *map, {\cf17 struct} _rtk_fig_t *fig);\par
120 \par
121 {\cf20 // Draw the cspace map}\par
122 {\cf18 void} map_draw_cspace(map_t *map, {\cf17 struct} _rtk_fig_t *fig);\par
123 \par
124 {\cf20 // Draw a wifi map}\par
125 {\cf18 void} map_draw_wifi(map_t *map, {\cf17 struct} _rtk_fig_t *fig, {\cf18 int} index);\par
126 \par
127 \par
128 {\cf20 /**************************************************************************}\par
129 {\cf20  * Map manipulation macros}\par
130 {\cf20  **************************************************************************/}\par
131 \par
132 {\cf20 // Convert from map index to world coords}\par
133 {\cf21 #define MAP_WXGX(map, i) (map->origin_x + ((i) - map->size_x / 2) * map->scale)}\par
134 {\cf21 #define MAP_WYGY(map, j) (map->origin_y + ((j) - map->size_y / 2) * map->scale)}\par
135 \par
136 {\cf20 // Convert from world coords to map coords}\par
137 {\cf21 #define MAP_GXWX(map, x) (floor((x - map->origin_x) / map->scale + 0.5) + map->size_x / 2)}\par
138 {\cf21 #define MAP_GYWY(map, y) (floor((y - map->origin_y) / map->scale + 0.5) + map->size_y / 2)}\par
139 \par
140 {\cf20 // Test to see if the given map coords lie within the absolute map bounds.}\par
141 {\cf21 #define MAP_VALID(map, i, j) ((i >= 0) && (i < map->size_x) && (j >= 0) && (j < map->size_y))}\par
142 \par
143 {\cf20 // Compute the cell index for the given map coords.}\par
144 {\cf21 #define MAP_INDEX(map, i, j) ((i) + (j) * map->size_x)}\par
145 \par
146 {\cf21 #ifdef __cplusplus}\par
147 \}\par
148 {\cf21 #endif}\par
149 \par
150 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/pf/eig3.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/eig3.h}
{\xe \v amcl/include/amcl/pf/eig3.h}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eigen_decomposition} (double A[3][3], double V[3][3], double d[3])\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v eigen_decomposition\:eig3.h}
{\xe \v eig3.h\:eigen_decomposition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void eigen_decomposition (double  {\i A}[3][3], double  {\i V}[3][3], double  {\i d}[3])}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8h_aa8be76822846425ea1d0aa20462fe4cc_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
eig3.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/eig3.h}
{\xe \v amcl/include/amcl/pf/eig3.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf20 /* Eigen-decomposition for symmetric 3x3 real matrices.}\par
3 {\cf20    Public domain, copied from the public domain Java library JAMA. */}\par
4 \par
5 {\cf21 #ifndef _eig_h}\par
6 \par
7 {\cf20 /* Symmetric matrix A => eigenvectors in columns of V, corresponding}\par
8 {\cf20    eigenvalues in d. */}\par
9 {\cf18 void} eigen_decomposition({\cf18 double} A[3][3], {\cf18 double} V[3][3], {\cf18 double} d[3]);\par
10 \par
11 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/pf/pf.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf.h}
{\xe \v amcl/include/amcl/pf/pf.h}
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "pf_vector.h"}\par
{\f2 #include "pf_kdtree.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_sample_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_cluster_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _pf_sample_set_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _pf_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b pf_vector_t}(* {\b pf_init_model_fn_t}) (void *init_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef void(* {\b pf_action_model_fn_t}) (void *action_data, struct {\b _pf_sample_set_t} *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef double(* {\b pf_sensor_model_fn_t}) (void *sensor_data, struct {\b _pf_sample_set_t} *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _pf_sample_set_t} {\b pf_sample_set_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _pf_t} {\b pf_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_t} * {\b pf_alloc} (int min_samples, int max_samples, double alpha_slow, double alpha_fast, {\b pf_init_model_fn_t} random_pose_fn, void *random_pose_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_free} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_init} ({\b pf_t} *pf, {\b pf_vector_t} mean, {\b pf_matrix_t} cov)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_init_model} ({\b pf_t} *pf, {\b pf_init_model_fn_t} init_fn, void *init_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_update_action} ({\b pf_t} *pf, {\b pf_action_model_fn_t} action_fn, void *action_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_update_sensor} ({\b pf_t} *pf, {\b pf_sensor_model_fn_t} sensor_fn, void *sensor_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_update_resample} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_set_selective_resampling} ({\b pf_t} *pf, int selective_resampling)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_get_cep_stats} ({\b pf_t} *pf, {\b pf_vector_t} *mean, double *var)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_get_cluster_stats} ({\b pf_t} *pf, int cluster, double *weight, {\b pf_vector_t} *mean, {\b pf_matrix_t} *cov)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_cluster_stats} ({\b pf_t} *pf, {\b pf_sample_set_t} *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_draw_samples} ({\b pf_t} *pf, struct _rtk_fig_t *fig, int max_samples)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_draw_hist} ({\b pf_t} *pf, struct _rtk_fig_t *fig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_draw_cep_stats} ({\b pf_t} *pf, struct _rtk_fig_t *fig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_draw_cluster_stats} ({\b pf_t} *pf, struct _rtk_fig_t *fig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_update_converged} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_init_converged} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_copy_set} ({\b pf_sample_set_t} *set_a, {\b pf_sample_set_t} *set_b)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_action_model_fn_t\:pf.h}
{\xe \v pf.h\:pf_action_model_fn_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef void(* pf_action_model_fn_t) (void *action_data, struct {\b _pf_sample_set_t} *set)}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_init_model_fn_t\:pf.h}
{\xe \v pf.h\:pf_init_model_fn_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b pf_vector_t}(* pf_init_model_fn_t) (void *init_data)}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_sample_set_t\:pf.h}
{\xe \v pf.h\:pf_sample_set_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _pf_sample_set_t} {\b pf_sample_set_t}}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_sensor_model_fn_t\:pf.h}
{\xe \v pf.h\:pf_sensor_model_fn_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef double(* pf_sensor_model_fn_t) (void *sensor_data, struct {\b _pf_sample_set_t} *set)}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_t\:pf.h}
{\xe \v pf.h\:pf_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _pf_t} {\b pf_t}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_alloc\:pf.h}
{\xe \v pf.h\:pf_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_t} * pf_alloc (int  {\i min_samples}, int  {\i max_samples}, double  {\i alpha_slow}, double  {\i alpha_fast}, {\b pf_init_model_fn_t}  {\i random_pose_fn}, void *  {\i random_pose_data})}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_ab59ea6182aba307dd9faa7926219885e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_ab59ea6182aba307dd9faa7926219885e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_cluster_stats\:pf.h}
{\xe \v pf.h\:pf_cluster_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_cluster_stats ({\b pf_t} *  {\i pf}, {\b pf_sample_set_t} *  {\i set})}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_af2ae5d54790e0aca689b71a16fe4c7cb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_af2ae5d54790e0aca689b71a16fe4c7cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_copy_set\:pf.h}
{\xe \v pf.h\:pf_copy_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_copy_set ({\b pf_sample_set_t} *  {\i set_a}, {\b pf_sample_set_t} *  {\i set_b})}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_draw_cep_stats\:pf.h}
{\xe \v pf.h\:pf_draw_cep_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_draw_cep_stats ({\b pf_t} *  {\i pf}, struct _rtk_fig_t *  {\i fig})}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_draw_cluster_stats\:pf.h}
{\xe \v pf.h\:pf_draw_cluster_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_draw_cluster_stats ({\b pf_t} *  {\i pf}, struct _rtk_fig_t *  {\i fig})}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_draw_hist\:pf.h}
{\xe \v pf.h\:pf_draw_hist}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_draw_hist ({\b pf_t} *  {\i pf}, struct _rtk_fig_t *  {\i fig})}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_draw_samples\:pf.h}
{\xe \v pf.h\:pf_draw_samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_draw_samples ({\b pf_t} *  {\i pf}, struct _rtk_fig_t *  {\i fig}, int  {\i max_samples})}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_free\:pf.h}
{\xe \v pf.h\:pf_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_free ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a340271a4464113cbe3c4448d514b23c7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a340271a4464113cbe3c4448d514b23c7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_get_cep_stats\:pf.h}
{\xe \v pf.h\:pf_get_cep_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_get_cep_stats ({\b pf_t} *  {\i pf}, {\b pf_vector_t} *  {\i mean}, double *  {\i var})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_get_cluster_stats\:pf.h}
{\xe \v pf.h\:pf_get_cluster_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_get_cluster_stats ({\b pf_t} *  {\i pf}, int  {\i cluster}, double *  {\i weight}, {\b pf_vector_t} *  {\i mean}, {\b pf_matrix_t} *  {\i cov})}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a818930949b3b6d5afd4d216bb69e6e78_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_init\:pf.h}
{\xe \v pf.h\:pf_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_init ({\b pf_t} *  {\i pf}, {\b pf_vector_t}  {\i mean}, {\b pf_matrix_t}  {\i cov})}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_aa158e637ec3c10493f2729f063146944_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_aa158e637ec3c10493f2729f063146944_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_init_converged\:pf.h}
{\xe \v pf.h\:pf_init_converged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_init_converged ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a8093be5fa7501f1a8e903c43b5705be0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_init_model\:pf.h}
{\xe \v pf.h\:pf_init_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_init_model ({\b pf_t} *  {\i pf}, {\b pf_init_model_fn_t}  {\i init_fn}, void *  {\i init_data})}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_ae2b239fe8546df136beca661cede73e2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_ae2b239fe8546df136beca661cede73e2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_set_selective_resampling\:pf.h}
{\xe \v pf.h\:pf_set_selective_resampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_set_selective_resampling ({\b pf_t} *  {\i pf}, int  {\i selective_resampling})}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_adbdbc82024445c0a81904c3abb8c2dce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_update_action\:pf.h}
{\xe \v pf.h\:pf_update_action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_update_action ({\b pf_t} *  {\i pf}, {\b pf_action_model_fn_t}  {\i action_fn}, void *  {\i action_data})}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_update_converged\:pf.h}
{\xe \v pf.h\:pf_update_converged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_update_converged ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a6caa24ec973890583e691fc8616e10e0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_update_resample\:pf.h}
{\xe \v pf.h\:pf_update_resample}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_update_resample ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a3e18db8990238fb9edc912009f64e3db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a3e18db8990238fb9edc912009f64e3db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_update_sensor\:pf.h}
{\xe \v pf.h\:pf_update_sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_update_sensor ({\b pf_t} *  {\i pf}, {\b pf_sensor_model_fn_t}  {\i sensor_fn}, void *  {\i sensor_data})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8h_a477f66612c4752dd8f1ab73cab84a1fd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf.h}
{\xe \v amcl/include/amcl/pf/pf.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey   &  Kasper Stoy}\par
4 {\cf20  *                      gerkey@usc.edu    kaspers@robotics.usc.edu}\par
5 {\cf20  *}\par
6 {\cf20  *  This library is free software; you can redistribute it and/or}\par
7 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
8 {\cf20  *  License as published by the Free Software Foundation; either}\par
9 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
10 {\cf20  *}\par
11 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
12 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
13 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
14 {\cf20  *  Lesser General Public License for more details.}\par
15 {\cf20  *}\par
16 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
17 {\cf20  *  License along with this library; if not, write to the Free Software}\par
18 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
19 {\cf20  *}\par
20 {\cf20  */}\par
21 {\cf20 /**************************************************************************}\par
22 {\cf20  * Desc: Simple particle filter for localization.}\par
23 {\cf20  * Author: Andrew Howard}\par
24 {\cf20  * Date: 10 Dec 2002}\par
25 {\cf20  * CVS: $Id: pf.h 3293 2005-11-19 08:37:45Z gerkey $}\par
26 {\cf20  *************************************************************************/}\par
27 \par
28 {\cf21 #ifndef PF_H}\par
29 {\cf21 #define PF_H}\par
30 \par
31 {\cf21 #include "pf_vector.h"}\par
32 {\cf21 #include "pf_kdtree.h"}\par
33 \par
34 {\cf21 #ifdef __cplusplus}\par
35 {\cf17 extern} {\cf22 "C"} \{\par
36 {\cf21 #endif}\par
37 \par
38 {\cf20 // Forward declarations}\par
39 {\cf17 struct }_pf_t;\par
40 {\cf17 struct }_rtk_fig_t;\par
41 {\cf17 struct }_pf_sample_set_t;\par
42 \par
43 {\cf20 // Function prototype for the initialization model; generates a sample pose from}\par
44 {\cf20 // an appropriate distribution.}\par
45 {\cf20 // pf_init_model_fn_t\'CA\'C7\'BA\'AF\'CA\'FD\'D6\'B8\'D5\'EB\'A3\'AC(void *init_data)\'CA\'C7\'BA\'AF\'CA\'FD\'B5\'C4\'D0\'CE\'B2\'CE}\par
46 {\cf20 // void *\'B1\'ED\'CA\'BE\'CE\'DE\'C0\'E0\'D0\'CD\'D6\'B8\'D5\'EB\'A3\'AC\'BF\'C9\'D2\'D4\'D6\'B8\'CF\'F2\'C8\'CE\'D2\'E2\'C0\'E0\'D0\'CD\'B5\'C4\'B1\'E4\'C1\'BF; pf_vector_t\'B7\'B5\'BB\'D8\'C0\'E0\'D0\'CD\'A1\'A3}\par
47 {\cf17 typedef} pf_vector_t (*pf_init_model_fn_t) ({\cf18 void} *init_data);\par
48 \par
49 {\cf20 // Function prototype for the action model; generates a sample pose from}\par
50 {\cf20 // an appropriate distribution}\par
51 {\cf20 // pf_action_model_fn_t\'CD\'AC\'D1\'F9\'CA\'C7\'BA\'AF\'CA\'FD\'D6\'B8\'D5\'EB\'A3\'AC\'D6\'B8\'CF\'F2\'B4\'F8\'C1\'BD\'B8\'F6\'B2\'CE\'CA\'FD\'B5\'C4\'BA\'AF\'CA\'FD\'A3\'AC\'CE\'DE\'B7\'B5\'BB\'D8\'C0\'E0\'D0\'CD}\par
52 {\cf17 typedef} void (*pf_action_model_fn_t) ({\cf18 void} *action_data,\par
53                                       {\cf17 struct }_pf_sample_set_t* set);\par
54 \par
55 {\cf20 // Function prototype for the sensor model; determines the probability}\par
56 {\cf20 // for the given set of sample poses.}\par
57 {\cf17 typedef} double (*pf_sensor_model_fn_t) ({\cf18 void} *sensor_data,\par
58                                         {\cf17 struct }_pf_sample_set_t* set);\par
59 \par
60 \par
61 {\cf20 // \'B5\'A5\'B8\'F6\'C1\'A3\'D7\'D3\'B4\'FA\'B1\'ED\'CE\'BB\'D7\'CB\'BA\'CD\'CF\'E0\'B9\'D8\'B5\'C4\'C8\'A8\'D6\'D8}\par
62 {\cf17 typedef} {\cf17 struct}\par
63 \{\par
64   {\cf20 // Pose represented by this sample}\par
65   pf_vector_t pose;\par
66 \par
67   {\cf20 // Weight for this pose}\par
68   {\cf18 double} weight;\par
69 \par
70 \} pf_sample_t;\par
71 \par
72 \par
73 {\cf20 // \'D2\'BB\'B8\'F6\'CE\'BB\'D7\'CB\'B5\'C4\'C1\'A3\'D7\'D3\'C8\'BA}\par
74 {\cf17 typedef} {\cf17 struct}\par
75 \{\par
76   {\cf20 // Number of samples}\par
77   {\cf18 int} count;\par
78 \par
79   {\cf20 // Total weight of samples in this cluster}\par
80   {\cf18 double} weight;\par
81 \par
82   {\cf20 // Cluster statistics}\par
83   pf_vector_t mean;\par
84   pf_matrix_t cov;\par
85 \par
86   {\cf20 // Workspace}\par
87   {\cf18 double} m[4], c[2][2];\par
88 \par
89 \} pf_cluster_t;\par
90 \par
91 \par
92 {\cf20 //  \'C1\'A3\'D7\'D3\'BC\'AF\'BA\'CF\'A3\'AC\'B6\'E0\'B8\'F6\'CE\'BB\'D7\'CB\'C1\'A3\'D7\'D3\'C8\'BA}\par
93 {\cf17 typedef} {\cf17 struct }_pf_sample_set_t\par
94 \{\par
95   {\cf20 // The samples}\par
96   {\cf18 int} sample_count;\par
97   pf_sample_t *samples;\par
98 \par
99   {\cf20 // A kdtree encoding the histogram}\par
100   pf_kdtree_t *kdtree;\par
101 \par
102   {\cf20 // Clusters}\par
103   {\cf18 int} cluster_count, cluster_max_count;\par
104   pf_cluster_t *clusters;\par
105 \par
106   {\cf20 // Filter statistics}\par
107   pf_vector_t mean;\par
108   pf_matrix_t cov;\par
109   {\cf18 int} converged;\par
110   {\cf18 double} n_effective;\par
111 \} pf_sample_set_t;\par
112 \par
113 \par
114 {\cf20 // \'B4\'FA\'B1\'ED\'D5\'FB\'B8\'F6\'C1\'A3\'D7\'D3\'C2\'CB\'B2\'A8\'C6\'F7\'B5\'C4\'BD\'E1\'B9\'B9\'CC\'E5}\par
115 {\cf17 typedef} {\cf17 struct }_pf_t\par
116 \{\par
117   {\cf20 // This min and max number of samples}\par
118   {\cf18 int} min_samples, max_samples;\par
119 \par
120   {\cf20 // Population size parameters}\par
121   {\cf18 double} pop_err, pop_z;\par
122 \par
123   {\cf20 // Resample limit cache}\par
124   {\cf18 int} *limit_cache;\par
125 \par
126   {\cf20 // The sample sets.  We keep two sets and use [current_set]}\par
127   {\cf20 // to identify the active set.}\par
128   {\cf18 int} current_set;\par
129   pf_sample_set_t sets[2];\par
130 \par
131   {\cf20 // Running averages, slow and fast, of likelihood}\par
132   {\cf18 double} w_slow, w_fast;\par
133 \par
134   {\cf20 // Decay rates for running averages}\par
135   {\cf18 double} alpha_slow, alpha_fast;\par
136 \par
137   {\cf20 // Function used to draw random pose samples}\par
138   pf_init_model_fn_t random_pose_fn;\par
139   {\cf18 void} *random_pose_data;\par
140 \par
141   {\cf18 double} dist_threshold; {\cf20 //distance threshold in each axis over which the pf is considered to not be converged}\par
142   {\cf18 int} converged;\par
143 \par
144   {\cf20 // boolean parameter to enamble/diable selective resampling}\par
145   {\cf18 int} selective_resampling;\par
146 \} pf_t;\par
147 \par
148 \par
149 {\cf20 // Create a new filter}\par
150 pf_t *pf_alloc({\cf18 int} min_samples, {\cf18 int} max_samples,\par
151                {\cf18 double} alpha_slow, {\cf18 double} alpha_fast,\par
152                pf_init_model_fn_t random_pose_fn, {\cf18 void} *random_pose_data);\par
153 \par
154 {\cf20 // Free an existing filter}\par
155 {\cf18 void} pf_free(pf_t *pf);\par
156 \par
157 {\cf20 // Initialize the filter using a guassian}\par
158 {\cf18 void} pf_init(pf_t *pf, pf_vector_t mean, pf_matrix_t cov);\par
159 \par
160 {\cf20 // Initialize the filter using some model}\par
161 {\cf18 void} pf_init_model(pf_t *pf, pf_init_model_fn_t init_fn, {\cf18 void} *init_data);\par
162 \par
163 {\cf20 // Update the filter with some new action}\par
164 {\cf18 void} pf_update_action(pf_t *pf, pf_action_model_fn_t action_fn, {\cf18 void} *action_data);\par
165 \par
166 {\cf20 // Update the filter with some new sensor observation}\par
167 {\cf18 void} pf_update_sensor(pf_t *pf, pf_sensor_model_fn_t sensor_fn, {\cf18 void} *sensor_data);\par
168 \par
169 {\cf20 // Resample the distribution}\par
170 {\cf18 void} pf_update_resample(pf_t *pf);\par
171 \par
172 {\cf20 // set selective resampling parameter}\par
173 {\cf18 void} pf_set_selective_resampling(pf_t *pf, {\cf18 int} selective_resampling);\par
174 \par
175 {\cf20 // Compute the CEP statistics (mean and variance).}\par
176 {\cf18 void} pf_get_cep_stats(pf_t *pf, pf_vector_t *mean, {\cf18 double} *var);\par
177 \par
178 {\cf20 // Compute the statistics for a particular cluster.  Returns 0 if}\par
179 {\cf20 // there is no such cluster.}\par
180 {\cf18 int} pf_get_cluster_stats(pf_t *pf, {\cf18 int} cluster, {\cf18 double} *weight,\par
181                          pf_vector_t *mean, pf_matrix_t *cov);\par
182 \par
183 {\cf20 // Re-compute the cluster statistics for a sample set}\par
184 {\cf18 void} pf_cluster_stats(pf_t *pf, pf_sample_set_t *set);\par
185 \par
186 \par
187 {\cf20 // Display the sample set}\par
188 {\cf18 void} pf_draw_samples(pf_t *pf, {\cf17 struct} _rtk_fig_t *fig, {\cf18 int} max_samples);\par
189 \par
190 {\cf20 // Draw the histogram (kdtree)}\par
191 {\cf18 void} pf_draw_hist(pf_t *pf, {\cf17 struct} _rtk_fig_t *fig);\par
192 \par
193 {\cf20 // Draw the CEP statistics}\par
194 {\cf18 void} pf_draw_cep_stats(pf_t *pf, {\cf17 struct} _rtk_fig_t *fig);\par
195 \par
196 {\cf20 // Draw the cluster statistics}\par
197 {\cf18 void} pf_draw_cluster_stats(pf_t *pf, {\cf17 struct} _rtk_fig_t *fig);\par
198 \par
199 {\cf20 //calculate if the particle filter has converged -}\par
200 {\cf20 //and sets the converged flag in the current set and the pf}\par
201 {\cf18 int} pf_update_converged(pf_t *pf);\par
202 \par
203 {\cf20 //sets the current set and pf converged values to zero}\par
204 {\cf18 void} pf_init_converged(pf_t *pf);\par
205 \par
206 {\cf18 void} pf_copy_set(pf_sample_set_t* set_a, pf_sample_set_t* set_b);\par
207 \par
208 {\cf21 #ifdef __cplusplus}\par
209 \}\par
210 {\cf21 #endif}\par
211 \par
212 \par
213 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/pf/pf_kdtree.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf_kdtree.h}
{\xe \v amcl/include/amcl/pf/pf_kdtree.h}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_kdtree_node}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_kdtree_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b pf_kdtree_node} {\b pf_kdtree_node_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_kdtree_t} * {\b pf_kdtree_alloc} (int max_size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_free} ({\b pf_kdtree_t} *self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_clear} ({\b pf_kdtree_t} *self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_insert} ({\b pf_kdtree_t} *self, {\b pf_vector_t} pose, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_cluster} ({\b pf_kdtree_t} *self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pf_kdtree_get_prob} ({\b pf_kdtree_t} *self, {\b pf_vector_t} pose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_kdtree_get_cluster} ({\b pf_kdtree_t} *self, {\b pf_vector_t} pose)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_kdtree_node_t\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_node_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b pf_kdtree_node} {\b pf_kdtree_node_t}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_kdtree_alloc\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_t} * pf_kdtree_alloc (int  {\i max_size})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_ad5e3895479fc829100d1a627ae34e2ec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_clear\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_clear ({\b pf_kdtree_t} *  {\i self})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_afc558bc7d59167c6d5ebcd23b06c5129_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_cluster\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_cluster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_cluster ({\b pf_kdtree_t} *  {\i self})}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a8757b78853ad243c2b823b8560c1027a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a8757b78853ad243c2b823b8560c1027a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_free\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_free ({\b pf_kdtree_t} *  {\i self})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_ac1f471ee15033bbe30a96abe56f1e072_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_get_cluster\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_get_cluster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_get_cluster ({\b pf_kdtree_t} *  {\i self}, {\b pf_vector_t}  {\i pose})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a84700cffabc8cd46af8145cb215fbc56_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a84700cffabc8cd46af8145cb215fbc56_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_get_prob\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_get_prob}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_kdtree_get_prob ({\b pf_kdtree_t} *  {\i self}, {\b pf_vector_t}  {\i pose})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a0f854496ce2d903ba3cc0efd7577afce_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_insert\:pf_kdtree.h}
{\xe \v pf_kdtree.h\:pf_kdtree_insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_insert ({\b pf_kdtree_t} *  {\i self}, {\b pf_vector_t}  {\i pose}, double  {\i value})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a25bb0665463cacfc166b50be94079940_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8h_a25bb0665463cacfc166b50be94079940_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_kdtree.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf_kdtree.h}
{\xe \v amcl/include/amcl/pf/pf_kdtree.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey   &  Kasper Stoy}\par
4 {\cf20  *                      gerkey@usc.edu    kaspers@robotics.usc.edu}\par
5 {\cf20  *}\par
6 {\cf20  *  This library is free software; you can redistribute it and/or}\par
7 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
8 {\cf20  *  License as published by the Free Software Foundation; either}\par
9 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
10 {\cf20  *}\par
11 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
12 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
13 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
14 {\cf20  *  Lesser General Public License for more details.}\par
15 {\cf20  *}\par
16 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
17 {\cf20  *  License along with this library; if not, write to the Free Software}\par
18 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
19 {\cf20  *}\par
20 {\cf20  */}\par
21 {\cf20 /**************************************************************************}\par
22 {\cf20  * Desc: KD tree functions}\par
23 {\cf20  * Author: Andrew Howard}\par
24 {\cf20  * Date: 18 Dec 2002}\par
25 {\cf20  * CVS: $Id: pf_kdtree.h 6532 2008-06-11 02:45:56Z gbiggs $}\par
26 {\cf20  *************************************************************************/}\par
27 \par
28 {\cf21 #ifndef PF_KDTREE_H}\par
29 {\cf21 #define PF_KDTREE_H}\par
30 \par
31 {\cf21 #ifdef INCLUDE_RTKGUI}\par
32 {\cf21 #include "rtk.h"}\par
33 {\cf21 #endif}\par
34 \par
35 \par
36 {\cf20 // Info for a node in the tree}\par
37 {\cf17 typedef} {\cf17 struct }pf_kdtree_node\par
38 \{\par
39   {\cf20 // Depth in the tree}\par
40   {\cf18 int} leaf, depth;\par
41 \par
42   {\cf20 // Pivot dimension and value}\par
43   {\cf18 int} pivot_dim;\par
44   {\cf18 double} pivot_value;\par
45 \par
46   {\cf20 // The key for this node}\par
47   {\cf18 int} key[3];\par
48 \par
49   {\cf20 // The value for this node}\par
50   {\cf18 double} value;\par
51 \par
52   {\cf20 // The cluster label (leaf nodes)}\par
53   {\cf18 int} cluster;\par
54 \par
55   {\cf20 // Child nodes}\par
56   {\cf17 struct }pf_kdtree_node *children[2];\par
57 \par
58 \} pf_kdtree_node_t;\par
59 \par
60 \par
61 {\cf20 // A kd tree}\par
62 {\cf17 typedef} {\cf17 struct}\par
63 \{\par
64   {\cf20 // Cell size}\par
65   {\cf18 double} size[3];\par
66 \par
67   {\cf20 // The root node of the tree}\par
68   pf_kdtree_node_t *root;\par
69 \par
70   {\cf20 // The number of nodes in the tree}\par
71   {\cf18 int} node_count, node_max_count;\par
72   pf_kdtree_node_t *nodes;\par
73 \par
74   {\cf20 // The number of leaf nodes in the tree}\par
75   {\cf18 int} leaf_count;\par
76 \par
77 \} pf_kdtree_t;\par
78 \par
79 \par
80 {\cf20 // Create a tree}\par
81 {\cf17 extern} pf_kdtree_t *pf_kdtree_alloc({\cf18 int} max_size);\par
82 \par
83 {\cf20 // Destroy a tree}\par
84 {\cf17 extern} {\cf18 void} pf_kdtree_free(pf_kdtree_t *self);\par
85 \par
86 {\cf20 // Clear all entries from the tree}\par
87 {\cf17 extern} {\cf18 void} pf_kdtree_clear(pf_kdtree_t *self);\par
88 \par
89 {\cf20 // Insert a pose into the tree}\par
90 {\cf17 extern} {\cf18 void} pf_kdtree_insert(pf_kdtree_t *self, pf_vector_t pose, {\cf18 double} value);\par
91 \par
92 {\cf20 // Cluster the leaves in the tree}\par
93 {\cf17 extern} {\cf18 void} pf_kdtree_cluster(pf_kdtree_t *self);\par
94 \par
95 {\cf20 // Determine the probability estimate for the given pose}\par
96 {\cf17 extern} {\cf18 double} pf_kdtree_get_prob(pf_kdtree_t *self, pf_vector_t pose);\par
97 \par
98 {\cf20 // Determine the cluster label for the given pose}\par
99 {\cf17 extern} {\cf18 int} pf_kdtree_get_cluster(pf_kdtree_t *self, pf_vector_t pose);\par
100 \par
101 \par
102 {\cf21 #ifdef INCLUDE_RTKGUI}\par
103 \par
104 {\cf20 // Draw the tree}\par
105 {\cf17 extern} {\cf18 void} pf_kdtree_draw(pf_kdtree_t *self, rtk_fig_t *fig);\par
106 \par
107 {\cf21 #endif}\par
108 \par
109 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/pf/pf_pdf.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf_pdf.h}
{\xe \v amcl/include/amcl/pf/pf_pdf.h}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "pf_vector.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf_pdf.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_pdf_gaussian_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_pdf_gaussian_t} * {\b pf_pdf_gaussian_alloc} ({\b pf_vector_t} x, {\b pf_matrix_t} cx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_pdf_gaussian_free} ({\b pf_pdf_gaussian_t} *pdf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pf_ran_gaussian} (double sigma)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_pdf_gaussian_sample} ({\b pf_pdf_gaussian_t} *pdf)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_pdf_gaussian_alloc\:pf_pdf.h}
{\xe \v pf_pdf.h\:pf_pdf_gaussian_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_pdf_gaussian_t} * pf_pdf_gaussian_alloc ({\b pf_vector_t}  {\i x}, {\b pf_matrix_t}  {\i cx})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_a12898e7b473af8d3441c66baf203c7e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_a12898e7b473af8d3441c66baf203c7e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_pdf_gaussian_free\:pf_pdf.h}
{\xe \v pf_pdf.h\:pf_pdf_gaussian_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_pdf_gaussian_free ({\b pf_pdf_gaussian_t} *  {\i pdf})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_a6a02cc46438e272cbb9d5f80ef4581e9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_pdf_gaussian_sample\:pf_pdf.h}
{\xe \v pf_pdf.h\:pf_pdf_gaussian_sample}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_pdf_gaussian_sample ({\b pf_pdf_gaussian_t} *  {\i pdf})}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_ae5c36efbbf482e91fe7ec9fa31747770_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_ae5c36efbbf482e91fe7ec9fa31747770_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_ran_gaussian\:pf_pdf.h}
{\xe \v pf_pdf.h\:pf_ran_gaussian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_ran_gaussian (double  {\i sigma})}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_abdfc0a4cb6ab83434b698504774ef885_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8h_abdfc0a4cb6ab83434b698504774ef885_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_pdf.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf_pdf.h}
{\xe \v amcl/include/amcl/pf/pf_pdf.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey   &  Kasper Stoy}\par
4 {\cf20  *                      gerkey@usc.edu    kaspers@robotics.usc.edu}\par
5 {\cf20  *}\par
6 {\cf20  *  This library is free software; you can redistribute it and/or}\par
7 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
8 {\cf20  *  License as published by the Free Software Foundation; either}\par
9 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
10 {\cf20  *}\par
11 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
12 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
13 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
14 {\cf20  *  Lesser General Public License for more details.}\par
15 {\cf20  *}\par
16 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
17 {\cf20  *  License along with this library; if not, write to the Free Software}\par
18 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
19 {\cf20  *}\par
20 {\cf20  */}\par
21 {\cf20 /**************************************************************************}\par
22 {\cf20  * Desc: Useful pdf functions}\par
23 {\cf20  * Author: Andrew Howard}\par
24 {\cf20  * Date: 10 Dec 2002}\par
25 {\cf20  * CVS: $Id: pf_pdf.h 6345 2008-04-17 01:36:39Z gerkey $}\par
26 {\cf20  *************************************************************************/}\par
27 \par
28 {\cf21 #ifndef PF_PDF_H}\par
29 {\cf21 #define PF_PDF_H}\par
30 \par
31 {\cf21 #include "pf_vector.h"}\par
32 \par
33 {\cf20 //#include <gsl/gsl_rng.h>}\par
34 {\cf20 //#include <gsl/gsl_randist.h>}\par
35 \par
36 {\cf21 #ifdef __cplusplus}\par
37 {\cf17 extern} {\cf22 "C"} \{\par
38 {\cf21 #endif}\par
39 \par
40 {\cf20 /**************************************************************************}\par
41 {\cf20  * Gaussian}\par
42 {\cf20  *************************************************************************/}\par
43 \par
44 {\cf20 // Gaussian PDF info}\par
45 {\cf17 typedef} {\cf17 struct}\par
46 \{\par
47   {\cf20 // Mean, covariance and inverse covariance}\par
48   pf_vector_t x;\par
49   pf_matrix_t cx;\par
50   {\cf20 //pf_matrix_t cxi;}\par
51   {\cf18 double} cxdet;\par
52 \par
53   {\cf20 // Decomposed covariance matrix (rotation * diagonal)}\par
54   pf_matrix_t cr;\par
55   pf_vector_t cd;\par
56 \par
57   {\cf20 // A random number generator}\par
58   {\cf20 //gsl_rng *rng;}\par
59 \par
60 \} pf_pdf_gaussian_t;\par
61 \par
62 \par
63 {\cf20 // Create a gaussian pdf}\par
64 pf_pdf_gaussian_t *pf_pdf_gaussian_alloc(pf_vector_t x, pf_matrix_t cx);\par
65 \par
66 {\cf20 // Destroy the pdf}\par
67 {\cf18 void} pf_pdf_gaussian_free(pf_pdf_gaussian_t *pdf);\par
68 \par
69 {\cf20 // Compute the value of the pdf at some point [z].}\par
70 {\cf20 //double pf_pdf_gaussian_value(pf_pdf_gaussian_t *pdf, pf_vector_t z);}\par
71 \par
72 {\cf20 // Draw randomly from a zero-mean Gaussian distribution, with standard}\par
73 {\cf20 // deviation sigma.}\par
74 {\cf20 // We use the polar form of the Box-Muller transformation, explained here:}\par
75 {\cf20 //   http://www.taygeta.com/random/gaussian.html}\par
76 {\cf18 double} pf_ran_gaussian({\cf18 double} sigma);\par
77 \par
78 {\cf20 // Generate a sample from the pdf.}\par
79 pf_vector_t pf_pdf_gaussian_sample(pf_pdf_gaussian_t *pdf);\par
80 \par
81 {\cf21 #ifdef __cplusplus}\par
82 \}\par
83 {\cf21 #endif}\par
84 \par
85 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/pf/pf_vector.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf_vector.h}
{\xe \v amcl/include/amcl/pf/pf_vector.h}
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf_vector.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_vector_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b pf_matrix_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_zero} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_vector_finite} ({\b pf_vector_t} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_vector_fprintf} ({\b pf_vector_t} s, FILE *file, const char *fmt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_add} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_sub} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_coord_add} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_coord_sub} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b pf_matrix_zero} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_matrix_finite} ({\b pf_matrix_t} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_matrix_fprintf} ({\b pf_matrix_t} s, FILE *file, const char *fmt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_matrix_unitary} ({\b pf_matrix_t} *r, {\b pf_matrix_t} *d, {\b pf_matrix_t} a)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_matrix_finite\:pf_vector.h}
{\xe \v pf_vector.h\:pf_matrix_finite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_matrix_finite ({\b pf_matrix_t}  {\i a})}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_matrix_fprintf\:pf_vector.h}
{\xe \v pf_vector.h\:pf_matrix_fprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_matrix_fprintf ({\b pf_matrix_t}  {\i s}, FILE *  {\i file}, const char *  {\i fmt})}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_matrix_unitary\:pf_vector.h}
{\xe \v pf_vector.h\:pf_matrix_unitary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_matrix_unitary ({\b pf_matrix_t} *  {\i r}, {\b pf_matrix_t} *  {\i d}, {\b pf_matrix_t}  {\i a})}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h_ad944a39674d5646c0b5c9924ae70dbab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h_ad944a39674d5646c0b5c9924ae70dbab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_matrix_zero\:pf_vector.h}
{\xe \v pf_vector.h\:pf_matrix_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} pf_matrix_zero ()}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h_a01593a3f7444c9a71fd6d4576725d47a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_vector_add\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_add ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_coord_add\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_coord_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_coord_add ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h_afe6b50abf661ef62686a25eccfb406e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_vector_coord_sub\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_coord_sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_coord_sub ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_finite\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_finite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_vector_finite ({\b pf_vector_t}  {\i a})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_fprintf\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_fprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_vector_fprintf ({\b pf_vector_t}  {\i s}, FILE *  {\i file}, const char *  {\i fmt})}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_sub\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_sub ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h_a247856e0c7581f87362cb7b044e812ef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_vector_zero\:pf_vector.h}
{\xe \v pf_vector.h\:pf_vector_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_zero ()}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8h_ad2d4a1744eaacdc7b4525a019a3bbcff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pf_vector.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/pf/pf_vector.h}
{\xe \v amcl/include/amcl/pf/pf_vector.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey   &  Kasper Stoy}\par
4 {\cf20  *                      gerkey@usc.edu    kaspers@robotics.usc.edu}\par
5 {\cf20  *}\par
6 {\cf20  *  This library is free software; you can redistribute it and/or}\par
7 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
8 {\cf20  *  License as published by the Free Software Foundation; either}\par
9 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
10 {\cf20  *}\par
11 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
12 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
13 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
14 {\cf20  *  Lesser General Public License for more details.}\par
15 {\cf20  *}\par
16 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
17 {\cf20  *  License along with this library; if not, write to the Free Software}\par
18 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
19 {\cf20  *}\par
20 {\cf20  */}\par
21 {\cf20 /**************************************************************************}\par
22 {\cf20  * Desc: Vector functions}\par
23 {\cf20  * Author: Andrew Howard}\par
24 {\cf20  * Date: 10 Dec 2002}\par
25 {\cf20  * CVS: $Id: pf_vector.h 6345 2008-04-17 01:36:39Z gerkey $}\par
26 {\cf20  *************************************************************************/}\par
27 \par
28 {\cf21 #ifndef PF_VECTOR_H}\par
29 {\cf21 #define PF_VECTOR_H}\par
30 \par
31 {\cf21 #ifdef __cplusplus}\par
32 {\cf17 extern} {\cf22 "C"} \{\par
33 {\cf21 #endif}\par
34 \par
35 {\cf21 #include <stdio.h>}\par
36   \par
37 {\cf20 // The basic vector}\par
38 {\cf17 typedef} {\cf17 struct}\par
39 \{\par
40   {\cf18 double} v[3];\par
41 \} pf_vector_t;\par
42 \par
43 \par
44 {\cf20 // The basic matrix}\par
45 {\cf17 typedef} {\cf17 struct}\par
46 \{\par
47   {\cf18 double} m[3][3];\par
48 \} pf_matrix_t;\par
49 \par
50 \par
51 {\cf20 // Return a zero vector}\par
52 pf_vector_t pf_vector_zero();\par
53 \par
54 {\cf20 // Check for NAN or INF in any component}\par
55 {\cf18 int} pf_vector_finite(pf_vector_t a);\par
56 \par
57 {\cf20 // Print a vector}\par
58 {\cf18 void} pf_vector_fprintf(pf_vector_t s, FILE *file, {\cf17 const} {\cf18 char} *fmt);\par
59 \par
60 {\cf20 // Simple vector addition}\par
61 pf_vector_t pf_vector_add(pf_vector_t a, pf_vector_t b);\par
62 \par
63 {\cf20 // Simple vector subtraction}\par
64 pf_vector_t pf_vector_sub(pf_vector_t a, pf_vector_t b);\par
65 \par
66 {\cf20 // Transform from local to global coords (a + b)}\par
67 pf_vector_t pf_vector_coord_add(pf_vector_t a, pf_vector_t b);\par
68 \par
69 {\cf20 // Transform from global to local coords (a - b)}\par
70 pf_vector_t pf_vector_coord_sub(pf_vector_t a, pf_vector_t b);\par
71 \par
72 \par
73 {\cf20 // Return a zero matrix}\par
74 pf_matrix_t pf_matrix_zero();\par
75 \par
76 {\cf20 // Check for NAN or INF in any component}\par
77 {\cf18 int} pf_matrix_finite(pf_matrix_t a);\par
78 \par
79 {\cf20 // Print a matrix}\par
80 {\cf18 void} pf_matrix_fprintf(pf_matrix_t s, FILE *file, {\cf17 const} {\cf18 char} *fmt);\par
81 \par
82 {\cf20 // Compute the matrix inverse.  Will also return the determinant,}\par
83 {\cf20 // which should be checked for underflow (indicated singular matrix).}\par
84 {\cf20 //pf_matrix_t pf_matrix_inverse(pf_matrix_t a, double *det);}\par
85 \par
86 {\cf20 // Decompose a covariance matrix [a] into a rotation matrix [r] and a}\par
87 {\cf20 // diagonal matrix [d] such that a = r * d * r^T.}\par
88 {\cf18 void} pf_matrix_unitary(pf_matrix_t *r, pf_matrix_t *d, pf_matrix_t a);\par
89 \par
90 {\cf21 #ifdef __cplusplus}\par
91 \}\par
92 {\cf21 #endif}\par
93 \par
94 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/sensors/amcl_laser.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/sensors/amcl_laser.h}
{\xe \v amcl/include/amcl/sensors/amcl_laser.h}
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "amcl_sensor.h"}\par
{\f2 #include "../map/map.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_laser.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__laser_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__laser_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b amcl::AMCLLaserData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b amcl::AMCLLaser}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b amcl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b amcl::laser_model_t} \{ {\b amcl::LASER_MODEL_BEAM}
, {\b amcl::LASER_MODEL_LIKELIHOOD_FIELD}
, {\b amcl::LASER_MODEL_LIKELIHOOD_FIELD_PROB}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl_laser.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/sensors/amcl_laser.h}
{\xe \v amcl/include/amcl/sensors/amcl_laser.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey et al.}\par
4 {\cf20  *}\par
5 {\cf20  *  This library is free software; you can redistribute it and/or}\par
6 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
7 {\cf20  *  License as published by the Free Software Foundation; either}\par
8 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
9 {\cf20  *}\par
10 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
11 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
12 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
13 {\cf20  *  Lesser General Public License for more details.}\par
14 {\cf20  *}\par
15 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
16 {\cf20  *  License along with this library; if not, write to the Free Software}\par
17 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
18 {\cf20  *}\par
19 {\cf20  */}\par
21 {\cf20 //}\par
22 {\cf20 // Desc: LASER sensor model for AMCL}\par
23 {\cf20 // Author: Andrew Howard}\par
24 {\cf20 // Date: 17 Aug 2003}\par
25 {\cf20 // CVS: $Id: amcl_laser.h 6443 2008-05-15 19:46:11Z gerkey $}\par
26 {\cf20 //}\par
28 {\cf20 }\par
29 {\cf21 #ifndef AMCL_LASER_H}\par
30 {\cf21 #define AMCL_LASER_H}\par
31 \par
32 {\cf21 #include "amcl_sensor.h"}\par
33 {\cf21 #include "../map/map.h"}\par
34 \par
35 {\cf17 namespace }amcl\par
36 \{\par
37 \par
38 {\cf17 typedef} {\cf17 enum}\par
39 \{\par
40   LASER_MODEL_BEAM,\par
41   LASER_MODEL_LIKELIHOOD_FIELD,\par
42   LASER_MODEL_LIKELIHOOD_FIELD_PROB\par
43 \} laser_model_t;\par
44 \par
45 {\cf20 // Laser sensor data}\par
46 {\cf17 class }AMCLLaserData : {\cf17 public} AMCLSensorData\par
47 \{\par
48   {\cf17 public}:\par
49     AMCLLaserData () \{ranges=NULL;\};\par
50     {\cf17 virtual} ~AMCLLaserData() \{{\cf17 delete} [] ranges;\};\par
51   {\cf20 // Laser range data (range, bearing tuples)}\par
52   {\cf17 public}: {\cf18 int} range_count;\par
53   {\cf17 public}: {\cf18 double} range_max;\par
54   {\cf17 public}: double (*ranges)[2];\par
55 \};\par
56 \par
57 \par
58 {\cf20 // Laseretric sensor model}\par
59 {\cf17 class }AMCLLaser : {\cf17 public} AMCLSensor\par
60 \{\par
61   {\cf20 // Default constructor}\par
62   {\cf17 public}: AMCLLaser({\cf18 size_t} max_beams, map_t* map);\par
63 \par
64   {\cf17 public}: {\cf17 virtual} ~AMCLLaser(); \par
65 \par
66   {\cf17 public}: {\cf18 void} SetModelBeam({\cf18 double} z_hit,\par
67                             {\cf18 double} z_short,\par
68                             {\cf18 double} z_max,\par
69                             {\cf18 double} z_rand,\par
70                             {\cf18 double} sigma_hit,\par
71                             {\cf18 double} lambda_short,\par
72                             {\cf18 double} chi_outlier);\par
73 \par
74   {\cf17 public}: {\cf18 void} SetModelLikelihoodField({\cf18 double} z_hit,\par
75                                        {\cf18 double} z_rand,\par
76                                        {\cf18 double} sigma_hit,\par
77                                        {\cf18 double} max_occ_dist);\par
78 \par
79   {\cf20 //a more probabilistically correct model - also with the option to do beam skipping}\par
80   {\cf17 public}: {\cf18 void} SetModelLikelihoodFieldProb({\cf18 double} z_hit,\par
81                        {\cf18 double} z_rand,\par
82                        {\cf18 double} sigma_hit,\par
83                        {\cf18 double} max_occ_dist, \par
84                        {\cf18 bool} do_beamskip, \par
85                        {\cf18 double} beam_skip_distance, \par
86                        {\cf18 double} beam_skip_threshold, \par
87                        {\cf18 double} beam_skip_error_threshold);\par
88 \par
89   {\cf20 // Update the filter based on the sensor model.  Returns true if the}\par
90   {\cf20 // filter has been updated.}\par
91   {\cf17 public}: {\cf17 virtual} {\cf18 bool} UpdateSensor(pf_t *pf, AMCLSensorData *data);\par
92 \par
93   {\cf20 // Set the laser's pose after construction}\par
94   {\cf17 public}: {\cf18 void} SetLaserPose(pf_vector_t& laser_pose) \par
95           \{this->laser_pose = laser_pose;\}\par
96 \par
97   {\cf20 // Determine the probability for the given pose}\par
98   {\cf17 private}: {\cf17 static} {\cf18 double} BeamModel(AMCLLaserData *data, \par
99                                    pf_sample_set_t* set);\par
100   {\cf20 // Determine the probability for the given pose}\par
101   {\cf17 private}: {\cf17 static} {\cf18 double} LikelihoodFieldModel(AMCLLaserData *data, \par
102                                               pf_sample_set_t* set);\par
103 \par
104   {\cf20 // Determine the probability for the given pose - more probablistic model }\par
105   {\cf17 private}: {\cf17 static} {\cf18 double} LikelihoodFieldModelProb(AMCLLaserData *data, \par
106                          pf_sample_set_t* set);\par
107 \par
108   {\cf17 private}: {\cf18 void} reallocTempData({\cf18 int} max_samples, {\cf18 int} max_obs);\par
109 \par
110   {\cf17 private}: laser_model_t model_type;\par
111 \par
112   {\cf20 // Current data timestamp}\par
113   {\cf17 private}: {\cf18 double} time;\par
114 \par
115   {\cf20 // The laser map}\par
116   {\cf17 private}: map_t *map;\par
117 \par
118   {\cf20 // Laser offset relative to robot}\par
119   {\cf17 private}: pf_vector_t laser_pose;\par
120   \par
121   {\cf20 // Max beams to consider}\par
122   {\cf17 private}: {\cf18 int} max_beams;\par
123 \par
124   {\cf20 // Beam skipping parameters (used by LikelihoodFieldModelProb model)}\par
125   {\cf17 private}: {\cf18 bool} do_beamskip; \par
126   {\cf17 private}: {\cf18 double} beam_skip_distance; \par
127   {\cf17 private}: {\cf18 double} beam_skip_threshold; \par
128   {\cf20 //threshold for the ratio of invalid beams - at which all beams are integrated to the likelihoods }\par
129   {\cf20 //this would be an error condition }\par
130   {\cf17 private}: {\cf18 double} beam_skip_error_threshold;\par
131 \par
132   {\cf20 //temp data that is kept before observations are integrated to each particle (requried for beam skipping)}\par
133   {\cf17 private}: {\cf18 int} max_samples;\par
134   {\cf17 private}: {\cf18 int} max_obs;\par
135   {\cf17 private}: {\cf18 double} **temp_obs;\par
136 \par
137   {\cf20 // Laser model params}\par
138   {\cf20 //}\par
139   {\cf20 // Mixture params for the components of the model; must sum to 1}\par
140   {\cf17 private}: {\cf18 double} z_hit;\par
141   {\cf17 private}: {\cf18 double} z_short;\par
142   {\cf17 private}: {\cf18 double} z_max;\par
143   {\cf17 private}: {\cf18 double} z_rand;\par
144   {\cf20 //}\par
145   {\cf20 // Stddev of Gaussian model for laser hits.}\par
146   {\cf17 private}: {\cf18 double} sigma_hit;\par
147   {\cf20 // Decay rate of exponential model for short readings.}\par
148   {\cf17 private}: {\cf18 double} lambda_short;\par
149   {\cf20 // Threshold for outlier rejection (unused)}\par
150   {\cf17 private}: {\cf18 double} chi_outlier;\par
151 \};\par
152 \par
153 \par
154 \}\par
155 \par
156 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/sensors/amcl_odom.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/sensors/amcl_odom.h}
{\xe \v amcl/include/amcl/sensors/amcl_odom.h}
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "amcl_sensor.h"}\par
{\f2 #include "../pf/pf_pdf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_odom.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__odom_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__odom_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b amcl::AMCLOdomData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b amcl::AMCLOdom}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b amcl}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b amcl::odom_model_t} \{ {\b amcl::ODOM_MODEL_DIFF}
, {\b amcl::ODOM_MODEL_OMNI}
, {\b amcl::ODOM_MODEL_DIFF_CORRECTED}
, {\b amcl::ODOM_MODEL_OMNI_CORRECTED}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl_odom.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/sensors/amcl_odom.h}
{\xe \v amcl/include/amcl/sensors/amcl_odom.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey et al.}\par
4 {\cf20  *}\par
5 {\cf20  *  This library is free software; you can redistribute it and/or}\par
6 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
7 {\cf20  *  License as published by the Free Software Foundation; either}\par
8 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
9 {\cf20  *}\par
10 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
11 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
12 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
13 {\cf20  *  Lesser General Public License for more details.}\par
14 {\cf20  *}\par
15 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
16 {\cf20  *  License along with this library; if not, write to the Free Software}\par
17 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
18 {\cf20  *}\par
19 {\cf20  */}\par
21 {\cf20 //}\par
22 {\cf20 // Desc: Odometry sensor model for AMCL}\par
23 {\cf20 // Author: Andrew Howard}\par
24 {\cf20 // Date: 17 Aug 2003}\par
25 {\cf20 // CVS: $Id: amcl_odom.h 4135 2007-08-23 19:58:48Z gerkey $}\par
26 {\cf20 //}\par
28 {\cf20 }\par
29 {\cf21 #ifndef AMCL_ODOM_H}\par
30 {\cf21 #define AMCL_ODOM_H}\par
31 \par
32 {\cf21 #include "amcl_sensor.h"}\par
33 {\cf21 #include "../pf/pf_pdf.h"}\par
34 \par
35 {\cf17 namespace }amcl\par
36 \{\par
37 \par
38 {\cf17 typedef} {\cf17 enum}\par
39 \{\par
40   ODOM_MODEL_DIFF,\par
41   ODOM_MODEL_OMNI,\par
42   ODOM_MODEL_DIFF_CORRECTED,\par
43   ODOM_MODEL_OMNI_CORRECTED\par
44 \} odom_model_t;\par
45 \par
46 {\cf20 // Odometric sensor data}\par
47 {\cf17 class }AMCLOdomData : {\cf17 public} AMCLSensorData\par
48 \{\par
49   {\cf20 // Odometric pose}\par
50   {\cf17 public}: pf_vector_t pose;\par
51 \par
52   {\cf20 // Change in odometric pose}\par
53   {\cf17 public}: pf_vector_t delta;\par
54 \};\par
55 \par
56 \par
57 {\cf20 // Odometric sensor model}\par
58 {\cf17 class }AMCLOdom : {\cf17 public} AMCLSensor\par
59 \{\par
60   {\cf20 // Default constructor}\par
61   {\cf17 public}: AMCLOdom();\par
62 \par
63   {\cf17 public}: {\cf18 void} SetModelDiff({\cf18 double} alpha1, \par
64                             {\cf18 double} alpha2, \par
65                             {\cf18 double} alpha3, \par
66                             {\cf18 double} alpha4);\par
67 \par
68   {\cf17 public}: {\cf18 void} SetModelOmni({\cf18 double} alpha1, \par
69                             {\cf18 double} alpha2, \par
70                             {\cf18 double} alpha3, \par
71                             {\cf18 double} alpha4,\par
72                             {\cf18 double} alpha5);\par
73 \par
74   {\cf17 public}: {\cf18 void} SetModel( odom_model_t type,\par
75                          {\cf18 double} alpha1,\par
76                          {\cf18 double} alpha2,\par
77                          {\cf18 double} alpha3,\par
78                          {\cf18 double} alpha4,\par
79                          {\cf18 double} alpha5 = 0 );\par
80 \par
81   {\cf20 // Update the filter based on the action model.  Returns true if the filter}\par
82   {\cf20 // has been updated.}\par
83   {\cf17 public}: {\cf17 virtual} {\cf18 bool} UpdateAction(pf_t *pf, AMCLSensorData *data);\par
84 \par
85   {\cf20 // Current data timestamp}\par
86   {\cf17 private}: {\cf18 double} time;\par
87   \par
88   {\cf20 // Model type}\par
89   {\cf17 private}: odom_model_t model_type;\par
90 \par
91   {\cf20 // Drift parameters}\par
92   {\cf17 private}: {\cf18 double} alpha1, alpha2, alpha3, alpha4, alpha5;\par
93 \};\par
94 \par
95 \par
96 \}\par
97 \par
98 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/include/amcl/sensors/amcl_sensor.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/sensors/amcl_sensor.h}
{\xe \v amcl/include/amcl/sensors/amcl_sensor.h}
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "../pf/pf.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_sensor.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__sensor_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__sensor_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b amcl::AMCLSensor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b amcl::AMCLSensorData}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b amcl}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl_sensor.h\par \pard\plain 
{\tc\tcl2 \v amcl/include/amcl/sensors/amcl_sensor.h}
{\xe \v amcl/include/amcl/sensors/amcl_sensor.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  *  Player - One Hell of a Robot Server}\par
3 {\cf20  *  Copyright (C) 2000  Brian Gerkey et al.}\par
4 {\cf20  *}\par
5 {\cf20  *  This library is free software; you can redistribute it and/or}\par
6 {\cf20  *  modify it under the terms of the GNU Lesser General Public}\par
7 {\cf20  *  License as published by the Free Software Foundation; either}\par
8 {\cf20  *  version 2.1 of the License, or (at your option) any later version.}\par
9 {\cf20  *}\par
10 {\cf20  *  This library is distributed in the hope that it will be useful,}\par
11 {\cf20  *  but WITHOUT ANY WARRANTY; without even the implied warranty of}\par
12 {\cf20  *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU}\par
13 {\cf20  *  Lesser General Public License for more details.}\par
14 {\cf20  *}\par
15 {\cf20  *  You should have received a copy of the GNU Lesser General Public}\par
16 {\cf20  *  License along with this library; if not, write to the Free Software}\par
17 {\cf20  *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}\par
18 {\cf20  */}\par
20 {\cf20 //}\par
21 {\cf20 // Desc: Adaptive Monte-Carlo localization}\par
22 {\cf20 // Author: Andrew Howard}\par
23 {\cf20 // Date: 6 Feb 2003}\par
24 {\cf20 // CVS: $Id: amcl_sensor.h 6443 2008-05-15 19:46:11Z gerkey $}\par
25 {\cf20 //}\par
27 {\cf20 }\par
28 {\cf21 #ifndef AMCL_SENSOR_H}\par
29 {\cf21 #define AMCL_SENSOR_H}\par
30 \par
31 {\cf21 #include "../pf/pf.h"}\par
32 \par
33 {\cf17 namespace }amcl\par
34 \{\par
35 \par
36 {\cf20 // Forward declarations}\par
37 {\cf17 class }AMCLSensorData;\par
38 \par
39 \par
40 {\cf20 // Base class for all AMCL sensors}\par
41 {\cf17 class }AMCLSensor\par
42 \{\par
43   {\cf20 // Default constructor}\par
44   {\cf17 public}: AMCLSensor();\par
45          \par
46   {\cf20 // Default destructor}\par
47   {\cf17 public}: {\cf17 virtual} ~AMCLSensor();\par
48 \par
49   {\cf20 // Update the filter based on the action model.  Returns true if the filter}\par
50   {\cf20 // has been updated.}\par
51   {\cf17 public}: {\cf17 virtual} {\cf18 bool} UpdateAction(pf_t *pf, AMCLSensorData *data);\par
52 \par
53   {\cf20 // Initialize the filter based on the sensor model.  Returns true if the}\par
54   {\cf20 // filter has been initialized.}\par
55   {\cf17 public}: {\cf17 virtual} {\cf18 bool} InitSensor(pf_t *pf, AMCLSensorData *data);\par
56 \par
57   {\cf20 // Update the filter based on the sensor model.  Returns true if the}\par
58   {\cf20 // filter has been updated.}\par
59   {\cf17 public}: {\cf17 virtual} {\cf18 bool} UpdateSensor(pf_t *pf, AMCLSensorData *data);\par
60 \par
61   {\cf20 // Flag is true if this is the action sensor}\par
62   {\cf17 public}: {\cf18 bool} is_action;\par
63 \par
64   {\cf20 // Action pose (action sensors only)}\par
65   {\cf17 public}: pf_vector_t pose;\par
66 \par
67   {\cf20 // AMCL Base}\par
68   {\cf20 //protected: AdaptiveMCL & AMCL;}\par
69 \par
70 {\cf21 #ifdef INCLUDE_RTKGUI}\par
71   {\cf20 // Setup the GUI}\par
72   {\cf17 public}: {\cf17 virtual} {\cf18 void} SetupGUI(rtk_canvas_t *canvas, rtk_fig_t *robot_fig);\par
73 \par
74   {\cf20 // Finalize the GUI}\par
75   {\cf17 public}: {\cf17 virtual} {\cf18 void} ShutdownGUI(rtk_canvas_t *canvas, rtk_fig_t *robot_fig);\par
76 \par
77   {\cf20 // Draw sensor data}\par
78   {\cf17 public}: {\cf17 virtual} {\cf18 void} UpdateGUI(rtk_canvas_t *canvas, rtk_fig_t *robot_fig, AMCLSensorData *data);\par
79 {\cf21 #endif}\par
80 \};\par
81 \par
82 \par
83 \par
84 {\cf20 // Base class for all AMCL sensor measurements}\par
85 {\cf17 class }AMCLSensorData\par
86 \{\par
87   {\cf20 // Pointer to sensor that generated the data}\par
88   {\cf17 public}: AMCLSensor *sensor;\par
89           {\cf17 virtual} ~AMCLSensorData() \{\}\par
90 \par
91   {\cf20 // Data timestamp}\par
92   {\cf17 public}: {\cf18 double} time;\par
93 \};\par
94 \par
95 \}\par
96 \par
97 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/map/map.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/map/map.c}
{\xe \v amcl/src/amcl/map/map.c}
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <assert.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "amcl/map/map.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_t} * {\b map_alloc} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_free} ({\b map_t} *map)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b map_cell_t} * {\b map_get_cell} ({\b map_t} *map, double ox, double oy, double oa)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_alloc\:map.c}
{\xe \v map.c\:map_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_t} * map_alloc (void )}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8c_a69abcca9449dcd0b4a74db33827e5a6c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v map_free\:map.c}
{\xe \v map.c\:map_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_free ({\b map_t} *  {\i map})}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map_8c_ae24d01dffc5a376977089830b93c9254_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v map_get_cell\:map.c}
{\xe \v map.c\:map_get_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b map_cell_t} * map_get_cell ({\b map_t} *  {\i map}, double  {\i ox}, double  {\i oy}, double  {\i oa})}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/map/map_cspace.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/map/map_cspace.cpp}
{\xe \v amcl/src/amcl/map/map_cspace.cpp}
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <queue>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "amcl/map/map.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_cspace.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cspace_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CellData}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CachedDistanceMap}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b CellData} &a, const {\b CellData} &b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CachedDistanceMap} * {\b get_distance_map} (double scale, double max_dist)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b enqueue} ({\b map_t} *map, int i, int j, int src_i, int src_j, std::priority_queue< {\b CellData} > &Q, {\b CachedDistanceMap} *cdm, unsigned char *marked)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_update_cspace} ({\b map_t} *map, double max_occ_dist)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v enqueue\:map_cspace.cpp}
{\xe \v map_cspace.cpp\:enqueue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void enqueue ({\b map_t} *  {\i map}, int  {\i i}, int  {\i j}, int  {\i src_i}, int  {\i src_j}, std::priority_queue< {\b CellData} > &  {\i Q}, {\b CachedDistanceMap} *  {\i cdm}, unsigned char *  {\i marked})}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cspace_8cpp_a494ed82d2dc7c22daa80385f65351656_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cspace_8cpp_a494ed82d2dc7c22daa80385f65351656_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v get_distance_map\:map_cspace.cpp}
{\xe \v map_cspace.cpp\:get_distance_map}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CachedDistanceMap} * get_distance_map (double  {\i scale}, double  {\i max_dist})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cspace_8cpp_a862166a1d511336b3211ff838427d582_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v map_update_cspace\:map_cspace.cpp}
{\xe \v map_cspace.cpp\:map_update_cspace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void map_update_cspace ({\b map_t} *  {\i map}, double  {\i max_occ_dist})}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cspace_8cpp_a7a2e9876667cad69c3b70881c1aaf1ac_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cspace_8cpp_a7a2e9876667cad69c3b70881c1aaf1ac_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v operator<\:map_cspace.cpp}
{\xe \v map_cspace.cpp\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool operator< (const {\b CellData} &  {\i a}, const {\b CellData} &  {\i b})}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/map/map_draw.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/map/map_draw.c}
{\xe \v amcl/src/amcl/map/map_draw.c}
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/map/map_range.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/map/map_range.c}
{\xe \v amcl/src/amcl/map/map_range.c}
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <assert.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include "amcl/map/map.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_range.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__range_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b map_calc_range} ({\b map_t} *map, double ox, double oy, double oa, double max_range)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_calc_range\:map_range.c}
{\xe \v map_range.c\:map_calc_range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double map_calc_range ({\b map_t} *  {\i map}, double  {\i ox}, double  {\i oy}, double  {\i oa}, double  {\i max_range})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__range_8c_aafef11c4d8efd07a4cb20bad5fc4bc83_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/map/map_store.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/map/map_store.c}
{\xe \v amcl/src/amcl/map/map_store.c}
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <errno.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "amcl/map/map.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_store.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__store_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b map_load_occ} ({\b map_t} *map, const char *filename, double scale, int negate)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_load_occ\:map_store.c}
{\xe \v map_store.c\:map_load_occ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int map_load_occ ({\b map_t} *  {\i map}, const char *  {\i filename}, double  {\i scale}, int  {\i negate})}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/pf/eig3.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/pf/eig3.c}
{\xe \v amcl/src/amcl/pf/eig3.c}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid eig3.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX}(a,  b)\~ ((a)>(b)?(a):(b))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b hypot2} (double x, double y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b tred2} (double V[{\b n}][{\b n}], double d[{\b n}], double e[{\b n}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b tql2} (double V[{\b n}][{\b n}], double d[{\b n}], double e[{\b n}])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b eigen_decomposition} (double A[{\b n}][{\b n}], double V[{\b n}][{\b n}], double d[{\b n}])\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b n} = 3\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MAX\:eig3.c}
{\xe \v eig3.c\:MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX( a,  b)\~ ((a)>(b)?(a):(b))}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v eigen_decomposition\:eig3.c}
{\xe \v eig3.c\:eigen_decomposition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void eigen_decomposition (double  {\i A}[n][n], double  {\i V}[n][n], double  {\i d}[n])}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8c_a7f1557b7e7c736dd14d99bf31f77df8f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v hypot2\:eig3.c}
{\xe \v eig3.c\:hypot2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double hypot2 (double  {\i x}, double  {\i y}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8c_a15ea76429a93fe852559fae8cba4245b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v tql2\:eig3.c}
{\xe \v eig3.c\:tql2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void tql2 (double  {\i V}[n][n], double  {\i d}[n], double  {\i e}[n]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8c_af0dda992a0b1287f065cdb0d8e31229a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8c_af0dda992a0b1287f065cdb0d8e31229a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v tred2\:eig3.c}
{\xe \v eig3.c\:tred2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void tred2 (double  {\i V}[n][n], double  {\i d}[n], double  {\i e}[n]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "eig3_8c_ae6a616c3110d66d701c2b35aec4de178_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v n\:eig3.c}
{\xe \v eig3.c\:n}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int n = 3{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/pf/pf.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/pf/pf.c}
{\xe \v amcl/src/amcl/pf/pf.c}
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <assert.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "amcl/pf/pf.h"}\par
{\f2 #include "amcl/pf/pf_pdf.h"}\par
{\f2 #include "amcl/pf/pf_kdtree.h"}\par
{\f2 #include "portable_utils.hpp"}\par
{\f2 #include <float.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pf_resample_limit} ({\b pf_t} *pf, int k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_t} * {\b pf_alloc} (int min_samples, int max_samples, double alpha_slow, double alpha_fast, {\b pf_init_model_fn_t} random_pose_fn, void *random_pose_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_free} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_init} ({\b pf_t} *pf, {\b pf_vector_t} mean, {\b pf_matrix_t} cov)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_init_model} ({\b pf_t} *pf, {\b pf_init_model_fn_t} init_fn, void *init_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_init_converged} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_update_converged} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_update_action} ({\b pf_t} *pf, {\b pf_action_model_fn_t} action_fn, void *action_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_update_sensor} ({\b pf_t} *pf, {\b pf_sensor_model_fn_t} sensor_fn, void *sensor_data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b copy_set} ({\b pf_sample_set_t} *set_a, {\b pf_sample_set_t} *set_b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_update_resample} ({\b pf_t} *pf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_cluster_stats} ({\b pf_t} *pf, {\b pf_sample_set_t} *set)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_set_selective_resampling} ({\b pf_t} *pf, int selective_resampling)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_get_cep_stats} ({\b pf_t} *pf, {\b pf_vector_t} *mean, double *var)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_get_cluster_stats} ({\b pf_t} *pf, int clabel, double *weight, {\b pf_vector_t} *mean, {\b pf_matrix_t} *cov)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v copy_set\:pf.c}
{\xe \v pf.c\:copy_set}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void copy_set ({\b pf_sample_set_t} *  {\i set_a}, {\b pf_sample_set_t} *  {\i set_b})}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a693660604e12992236e660b466ce76c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a693660604e12992236e660b466ce76c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_alloc\:pf.c}
{\xe \v pf.c\:pf_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_t} * pf_alloc (int  {\i min_samples}, int  {\i max_samples}, double  {\i alpha_slow}, double  {\i alpha_fast}, {\b pf_init_model_fn_t}  {\i random_pose_fn}, void *  {\i random_pose_data})}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_ab59ea6182aba307dd9faa7926219885e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_ab59ea6182aba307dd9faa7926219885e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_cluster_stats\:pf.c}
{\xe \v pf.c\:pf_cluster_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_cluster_stats ({\b pf_t} *  {\i pf}, {\b pf_sample_set_t} *  {\i set})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_af2ae5d54790e0aca689b71a16fe4c7cb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_af2ae5d54790e0aca689b71a16fe4c7cb_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_free\:pf.c}
{\xe \v pf.c\:pf_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_free ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a340271a4464113cbe3c4448d514b23c7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a340271a4464113cbe3c4448d514b23c7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_get_cep_stats\:pf.c}
{\xe \v pf.c\:pf_get_cep_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_get_cep_stats ({\b pf_t} *  {\i pf}, {\b pf_vector_t} *  {\i mean}, double *  {\i var})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_get_cluster_stats\:pf.c}
{\xe \v pf.c\:pf_get_cluster_stats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_get_cluster_stats ({\b pf_t} *  {\i pf}, int  {\i clabel}, double *  {\i weight}, {\b pf_vector_t} *  {\i mean}, {\b pf_matrix_t} *  {\i cov})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_af6717acdd4070ef6f7385cb06fd32dd4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_init\:pf.c}
{\xe \v pf.c\:pf_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_init ({\b pf_t} *  {\i pf}, {\b pf_vector_t}  {\i mean}, {\b pf_matrix_t}  {\i cov})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_aa158e637ec3c10493f2729f063146944_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_aa158e637ec3c10493f2729f063146944_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_init_converged\:pf.c}
{\xe \v pf.c\:pf_init_converged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_init_converged ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a8093be5fa7501f1a8e903c43b5705be0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_init_model\:pf.c}
{\xe \v pf.c\:pf_init_model}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_init_model ({\b pf_t} *  {\i pf}, {\b pf_init_model_fn_t}  {\i init_fn}, void *  {\i init_data})}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_ae2b239fe8546df136beca661cede73e2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_ae2b239fe8546df136beca661cede73e2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_resample_limit\:pf.c}
{\xe \v pf.c\:pf_resample_limit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_resample_limit ({\b pf_t} *  {\i pf}, int  {\i k}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_aa28e373c884f68244531f1dcbb086b8c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_set_selective_resampling\:pf.c}
{\xe \v pf.c\:pf_set_selective_resampling}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_set_selective_resampling ({\b pf_t} *  {\i pf}, int  {\i selective_resampling})}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_adbdbc82024445c0a81904c3abb8c2dce_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_update_action\:pf.c}
{\xe \v pf.c\:pf_update_action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_update_action ({\b pf_t} *  {\i pf}, {\b pf_action_model_fn_t}  {\i action_fn}, void *  {\i action_data})}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_update_converged\:pf.c}
{\xe \v pf.c\:pf_update_converged}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_update_converged ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a6caa24ec973890583e691fc8616e10e0_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_update_resample\:pf.c}
{\xe \v pf.c\:pf_update_resample}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_update_resample ({\b pf_t} *  {\i pf})}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a3e18db8990238fb9edc912009f64e3db_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a3e18db8990238fb9edc912009f64e3db_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_update_sensor\:pf.c}
{\xe \v pf.c\:pf_update_sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_update_sensor ({\b pf_t} *  {\i pf}, {\b pf_sensor_model_fn_t}  {\i sensor_fn}, void *  {\i sensor_data})}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf_8c_a477f66612c4752dd8f1ab73cab84a1fd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/pf/pf_draw.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/pf/pf_draw.c}
{\xe \v amcl/src/amcl/pf/pf_draw.c}
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/pf/pf_kdtree.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/pf/pf_kdtree.c}
{\xe \v amcl/src/amcl/pf/pf_kdtree.c}
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <assert.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "amcl/pf/pf_vector.h"}\par
{\f2 #include "amcl/pf/pf_kdtree.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf_kdtree.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b pf_kdtree_equal} ({\b pf_kdtree_t} *self, int key_a[], int key_b[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b pf_kdtree_node_t} * {\b pf_kdtree_insert_node} ({\b pf_kdtree_t} *self, {\b pf_kdtree_node_t} *parent, {\b pf_kdtree_node_t} *node, int key[], double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b pf_kdtree_node_t} * {\b pf_kdtree_find_node} ({\b pf_kdtree_t} *self, {\b pf_kdtree_node_t} *node, int key[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b pf_kdtree_cluster_node} ({\b pf_kdtree_t} *self, {\b pf_kdtree_node_t} *node, int depth)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_kdtree_t} * {\b pf_kdtree_alloc} (int max_size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_free} ({\b pf_kdtree_t} *self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_clear} ({\b pf_kdtree_t} *self)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_insert} ({\b pf_kdtree_t} *self, {\b pf_vector_t} pose, double value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pf_kdtree_get_prob} ({\b pf_kdtree_t} *self, {\b pf_vector_t} pose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_kdtree_get_cluster} ({\b pf_kdtree_t} *self, {\b pf_vector_t} pose)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_kdtree_cluster} ({\b pf_kdtree_t} *self)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_kdtree_alloc\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_t} * pf_kdtree_alloc (int  {\i max_size})}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_ad5e3895479fc829100d1a627ae34e2ec_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_clear\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_clear ({\b pf_kdtree_t} *  {\i self})}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_afc558bc7d59167c6d5ebcd23b06c5129_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_cluster\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_cluster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_cluster ({\b pf_kdtree_t} *  {\i self})}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a8757b78853ad243c2b823b8560c1027a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a8757b78853ad243c2b823b8560c1027a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_cluster_node\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_cluster_node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_cluster_node ({\b pf_kdtree_t} *  {\i self}, {\b pf_kdtree_node_t} *  {\i node}, int  {\i depth}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_aafcf7661b12063d66b1827feac1d36ad_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_aafcf7661b12063d66b1827feac1d36ad_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_equal\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_equal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_equal ({\b pf_kdtree_t} *  {\i self}, int  {\i key_a}[], int  {\i key_b}[]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a1472252390e49c0ed32bc5e0c446a62a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_find_node\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_find_node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_node_t} * pf_kdtree_find_node ({\b pf_kdtree_t} *  {\i self}, {\b pf_kdtree_node_t} *  {\i node}, int  {\i key}[]){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a430a4635925d5966adac3eff0802fb34_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a430a4635925d5966adac3eff0802fb34_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_free\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_free ({\b pf_kdtree_t} *  {\i self})}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_ac1f471ee15033bbe30a96abe56f1e072_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_get_cluster\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_get_cluster}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_kdtree_get_cluster ({\b pf_kdtree_t} *  {\i self}, {\b pf_vector_t}  {\i pose})}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a84700cffabc8cd46af8145cb215fbc56_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a84700cffabc8cd46af8145cb215fbc56_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_get_prob\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_get_prob}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_kdtree_get_prob ({\b pf_kdtree_t} *  {\i self}, {\b pf_vector_t}  {\i pose})}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a0f854496ce2d903ba3cc0efd7577afce_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_insert\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_kdtree_insert ({\b pf_kdtree_t} *  {\i self}, {\b pf_vector_t}  {\i pose}, double  {\i value})}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a25bb0665463cacfc166b50be94079940_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_a25bb0665463cacfc166b50be94079940_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_kdtree_insert_node\:pf_kdtree.c}
{\xe \v pf_kdtree.c\:pf_kdtree_insert_node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_kdtree_node_t} * pf_kdtree_insert_node ({\b pf_kdtree_t} *  {\i self}, {\b pf_kdtree_node_t} *  {\i parent}, {\b pf_kdtree_node_t} *  {\i node}, int  {\i key}[], double  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_abafa1da6f9d51b9ac5397071d2801f52_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__kdtree_8c_abafa1da6f9d51b9ac5397071d2801f52_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/pf/pf_pdf.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/pf/pf_pdf.c}
{\xe \v amcl/src/amcl/pf/pf_pdf.c}
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <assert.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "amcl/pf/pf_pdf.h"}\par
{\f2 #include "portable_utils.hpp"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf_pdf.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_pdf_gaussian_t} * {\b pf_pdf_gaussian_alloc} ({\b pf_vector_t} x, {\b pf_matrix_t} cx)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_pdf_gaussian_free} ({\b pf_pdf_gaussian_t} *pdf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_pdf_gaussian_sample} ({\b pf_pdf_gaussian_t} *pdf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b pf_ran_gaussian} (double sigma)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static unsigned int {\b pf_pdf_seed}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_pdf_gaussian_alloc\:pf_pdf.c}
{\xe \v pf_pdf.c\:pf_pdf_gaussian_alloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_pdf_gaussian_t} * pf_pdf_gaussian_alloc ({\b pf_vector_t}  {\i x}, {\b pf_matrix_t}  {\i cx})}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_a12898e7b473af8d3441c66baf203c7e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_a12898e7b473af8d3441c66baf203c7e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_pdf_gaussian_free\:pf_pdf.c}
{\xe \v pf_pdf.c\:pf_pdf_gaussian_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_pdf_gaussian_free ({\b pf_pdf_gaussian_t} *  {\i pdf})}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_a6a02cc46438e272cbb9d5f80ef4581e9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_pdf_gaussian_sample\:pf_pdf.c}
{\xe \v pf_pdf.c\:pf_pdf_gaussian_sample}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_pdf_gaussian_sample ({\b pf_pdf_gaussian_t} *  {\i pdf})}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_ae5c36efbbf482e91fe7ec9fa31747770_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_ae5c36efbbf482e91fe7ec9fa31747770_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_ran_gaussian\:pf_pdf.c}
{\xe \v pf_pdf.c\:pf_ran_gaussian}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double pf_ran_gaussian (double  {\i sigma})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_abdfc0a4cb6ab83434b698504774ef885_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__pdf_8c_abdfc0a4cb6ab83434b698504774ef885_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_pdf_seed\:pf_pdf.c}
{\xe \v pf_pdf.c\:pf_pdf_seed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int pf_pdf_seed{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/pf/pf_vector.c \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/pf/pf_vector.c}
{\xe \v amcl/src/amcl/pf/pf_vector.c}
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include "amcl/pf/pf_vector.h"}\par
{\f2 #include "amcl/pf/eig3.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid pf_vector.c \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_zero} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_vector_finite} ({\b pf_vector_t} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_vector_fprintf} ({\b pf_vector_t} a, FILE *file, const char *fmt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_add} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_sub} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_coord_add} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_vector_t} {\b pf_vector_coord_sub} ({\b pf_vector_t} a, {\b pf_vector_t} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b pf_matrix_t} {\b pf_matrix_zero} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b pf_matrix_finite} ({\b pf_matrix_t} a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_matrix_fprintf} ({\b pf_matrix_t} a, FILE *file, const char *fmt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pf_matrix_unitary} ({\b pf_matrix_t} *r, {\b pf_matrix_t} *d, {\b pf_matrix_t} a)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v pf_matrix_finite\:pf_vector.c}
{\xe \v pf_vector.c\:pf_matrix_finite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_matrix_finite ({\b pf_matrix_t}  {\i a})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_matrix_fprintf\:pf_vector.c}
{\xe \v pf_vector.c\:pf_matrix_fprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_matrix_fprintf ({\b pf_matrix_t}  {\i a}, FILE *  {\i file}, const char *  {\i fmt})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_matrix_unitary\:pf_vector.c}
{\xe \v pf_vector.c\:pf_matrix_unitary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_matrix_unitary ({\b pf_matrix_t} *  {\i r}, {\b pf_matrix_t} *  {\i d}, {\b pf_matrix_t}  {\i a})}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c_ad944a39674d5646c0b5c9924ae70dbab_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c_ad944a39674d5646c0b5c9924ae70dbab_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_matrix_zero\:pf_vector.c}
{\xe \v pf_vector.c\:pf_matrix_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_matrix_t} pf_matrix_zero ()}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c_a01593a3f7444c9a71fd6d4576725d47a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_vector_add\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_add ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_coord_add\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_coord_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_coord_add ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c_afe6b50abf661ef62686a25eccfb406e1_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_vector_coord_sub\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_coord_sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_coord_sub ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_finite\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_finite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int pf_vector_finite ({\b pf_vector_t}  {\i a})}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_fprintf\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_fprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pf_vector_fprintf ({\b pf_vector_t}  {\i a}, FILE *  {\i file}, const char *  {\i fmt})}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pf_vector_sub\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_sub}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_sub ({\b pf_vector_t}  {\i a}, {\b pf_vector_t}  {\i b})}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c_a247856e0c7581f87362cb7b044e812ef_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v pf_vector_zero\:pf_vector.c}
{\xe \v pf_vector.c\:pf_vector_zero}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b pf_vector_t} pf_vector_zero ()}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "pf__vector_8c_ad2d4a1744eaacdc7b4525a019a3bbcff_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/sensors/amcl_laser.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/sensors/amcl_laser.cpp}
{\xe \v amcl/src/amcl/sensors/amcl_laser.cpp}
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sys/types.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <assert.h>}\par
{\f2 #include "amcl/sensors/amcl_laser.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_laser.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__laser_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/sensors/amcl_odom.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/sensors/amcl_odom.cpp}
{\xe \v amcl/src/amcl/sensors/amcl_odom.cpp}
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <sys/types.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "amcl/sensors/amcl_odom.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_odom.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__odom_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b normalize} (double z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b angle_diff} (double a, double b)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v angle_diff\:amcl_odom.cpp}
{\xe \v amcl_odom.cpp\:angle_diff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double angle_diff (double  {\i a}, double  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__odom_8cpp_a4245ab25f5d431e40eafba39bc25ed1c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__odom_8cpp_a4245ab25f5d431e40eafba39bc25ed1c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v normalize\:amcl_odom.cpp}
{\xe \v amcl_odom.cpp\:normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double normalize (double  {\i z}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__odom_8cpp_aa7a3531e33998b7883dec8951cff5ade_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl/sensors/amcl_sensor.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl/sensors/amcl_sensor.cpp}
{\xe \v amcl/src/amcl/sensors/amcl_sensor.cpp}
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "amcl/sensors/amcl_sensor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_sensor.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__sensor_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/amcl_node.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/amcl_node.cpp}
{\xe \v amcl/src/amcl_node.cpp}
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
{\f2 #include <map>}\par
{\f2 #include <cmath>}\par
{\f2 #include <memory>}\par
{\f2 #include <boost/bind.hpp>}\par
{\f2 #include <boost/thread/mutex.hpp>}\par
{\f2 #include <signal.h>}\par
{\f2 #include "amcl/map/map.h"}\par
{\f2 #include "amcl/pf/pf.h"}\par
{\f2 #include "amcl/sensors/amcl_odom.h"}\par
{\f2 #include "amcl/sensors/amcl_laser.h"}\par
{\f2 #include "portable_utils.hpp"}\par
{\f2 #include "ros/assert.h"}\par
{\f2 #include "ros/ros.h"}\par
{\f2 #include "sensor_msgs/LaserScan.h"}\par
{\f2 #include "geometry_msgs/PoseWithCovarianceStamped.h"}\par
{\f2 #include "geometry_msgs/PoseArray.h"}\par
{\f2 #include "geometry_msgs/Pose.h"}\par
{\f2 #include "geometry_msgs/PoseStamped.h"}\par
{\f2 #include "nav_msgs/GetMap.h"}\par
{\f2 #include "nav_msgs/SetMap.h"}\par
{\f2 #include "std_srvs/Empty.h"}\par
{\f2 #include "tf2/LinearMath/Transform.h"}\par
{\f2 #include "tf2/convert.h"}\par
{\f2 #include "tf2/utils.h"}\par
{\f2 #include "tf2_geometry_msgs/tf2_geometry_msgs.h"}\par
{\f2 #include "tf2_ros/buffer.h"}\par
{\f2 #include "tf2_ros/message_filter.h"}\par
{\f2 #include "tf2_ros/transform_broadcaster.h"}\par
{\f2 #include "tf2_ros/transform_listener.h"}\par
{\f2 #include "message_filters/subscriber.h"}\par
{\f2 #include "dynamic_reconfigure/server.h"}\par
{\f2 #include "amcl/AMCLConfig.h"}\par
{\f2 #include <rosbag/bag.h>}\par
{\f2 #include <rosbag/view.h>}\par
{\f2 #include <boost/foreach.hpp>}\par
{\f2 #include <diagnostic_updater/diagnostic_updater.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid amcl_node.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b amcl_hyp_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AmclNode}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NEW_UNIFORM_SAMPLING}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USAGE}\~ "USAGE: amcl"\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b normalize} (double z)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b angle_diff} (double a, double b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b stripSlash} (const std::string &in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sigintHandler} (int sig)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const std::string {\b scan_topic_} = "scan"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boost::shared_ptr< {\b AmclNode} > {\b amcl_node_ptr}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v NEW_UNIFORM_SAMPLING\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:NEW_UNIFORM_SAMPLING}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NEW_UNIFORM_SAMPLING\~ 1}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v USAGE\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:USAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USAGE\~ "USAGE: amcl"}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v angle_diff\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:angle_diff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double angle_diff (double  {\i a}, double  {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp_a4245ab25f5d431e40eafba39bc25ed1c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp_a4245ab25f5d431e40eafba39bc25ed1c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v normalize\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double normalize (double  {\i z}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp_aa7a3531e33998b7883dec8951cff5ade_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sigintHandler\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:sigintHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void sigintHandler (int  {\i sig})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp_a458379afdbad052bb3077d6b425d2fee_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v stripSlash\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:stripSlash}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string stripSlash (const std::string &  {\i in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "amcl__node_8cpp_aaaf96e2284f11ea6e78e1956967aa503_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v amcl_node_ptr\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:amcl_node_ptr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boost::shared_ptr<{\b AmclNode}> amcl_node_ptr}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scan_topic_\:amcl_node.cpp}
{\xe \v amcl_node.cpp\:scan_topic_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string scan_topic_ = "scan"{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/src/include/portable_utils.hpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/src/include/portable_utils.hpp}
{\xe \v amcl/src/include/portable_utils.hpp}
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid portable_utils.hpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "portable__utils_8hpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "portable__utils_8hpp__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static double {\b drand48} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b srand48} (long int seedval)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v drand48\:portable_utils.hpp}
{\xe \v portable_utils.hpp\:drand48}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static double drand48 (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "portable__utils_8hpp_a134edc5d76023c865d406094d70a9764_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v srand48\:portable_utils.hpp}
{\xe \v portable_utils.hpp\:srand48}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void srand48 (long int  {\i seedval}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "portable__utils_8hpp_abface9f370a8b39282c86e1d7d27f332_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
portable_utils.hpp\par \pard\plain 
{\tc\tcl2 \v amcl/src/include/portable_utils.hpp}
{\xe \v amcl/src/include/portable_utils.hpp}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef PORTABLE_UTILS_H}\par
2 {\cf21 #define PORTABLE_UTILS_H}\par
3 \par
4 {\cf21 #include <stdlib.h>}\par
5 \par
6 {\cf21 #ifdef __cplusplus}\par
7 {\cf17 extern} {\cf22 "C"} \{\par
8 {\cf21 #endif}\par
9 \par
10 {\cf21 #ifndef HAVE_DRAND48}\par
11 {\cf20 // Some system (e.g., Windows) doesn't come with drand48(), srand48().}\par
12 {\cf20 // Use rand, and srand for such system.}\par
13 {\cf17 static} {\cf18 double} drand48({\cf18 void})\par
14 \{\par
15     {\cf19 return} (({\cf18 double})rand())/RAND_MAX;\par
16 \}\par
17 \par
18 {\cf17 static} {\cf18 void} srand48({\cf18 long} {\cf18 int} seedval)\par
19 \{\par
20     srand(seedval);\par
21 \}\par
22 {\cf21 #endif}\par
23 \par
24 {\cf21 #ifdef __cplusplus}\par
25 \}\par
26 {\cf21 #endif}\par
27 \par
28 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/test/basic_localization.py \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/test/basic_localization.py}
{\xe \v amcl/test/basic_localization.py}
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b basic_localization.TestBasicLocalization}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b basic_localization}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
amcl/test/set_pose.py \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v amcl/test/set_pose.py}
{\xe \v amcl/test/set_pose.py}
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b set_pose.PoseSetter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b set_pose}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_pose.pose} = list(map(float, rospy.myargv()[1:4]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_pose.t_stamp} = rospy.Time()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_pose.t_publish} = rospy.Time()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_pose.anonymous}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b set_pose.pub} = rospy.Publisher("initialpose", PoseWithCovarianceStamped, PoseSetter(pose, stamp=t_stamp, publish_time=t_publish), queue_size=1)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/costmap_model.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/costmap_model.h}
{\xe \v base_local_planner/include/base_local_planner/costmap_model.h}
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/world_model.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_model.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__model_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__model_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::CostmapModel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using the costmap. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_model.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/costmap_model.h}
{\xe \v base_local_planner/include/base_local_planner/costmap_model.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef TRAJECTORY_ROLLOUT_COSTMAP_MODEL_}\par
38 {\cf21 #define TRAJECTORY_ROLLOUT_COSTMAP_MODEL_}\par
39 \par
40 {\cf21 #include <base_local_planner/world_model.h>}\par
41 {\cf20 // For obstacle data access}\par
42 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
43 \par
44 {\cf17 namespace }base_local_planner \{\par
50   {\cf17 class }CostmapModel : {\cf17 public} WorldModel \{\par
51     {\cf17 public}:\par
57       CostmapModel({\cf17 const} costmap_2d::Costmap2D& costmap);\par
58 \par
62       {\cf17 virtual} ~CostmapModel()\{\}\par
63       {\cf17 using} WorldModel::footprintCost;\par
64 \par
76       {\cf17 virtual} {\cf18 double} footprintCost({\cf17 const} geometry_msgs::Point& position, {\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
77           {\cf18 double} inscribed_radius, {\cf18 double} circumscribed_radius);\par
78 \par
87       {\cf18 double} lineCost({\cf18 int} x0, {\cf18 int} x1, {\cf18 int} y0, {\cf18 int} y1) {\cf17 const};\par
88 \par
95       {\cf18 double} pointCost({\cf18 int} x, {\cf18 int} y) {\cf17 const};\par
96 \par
97     {\cf17 private}:\par
98       {\cf17 const} costmap_2d::Costmap2D& costmap_; \par
99 \par
100   \};\par
101 \};\par
102 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/footprint_helper.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/footprint_helper.h}
{\xe \v base_local_planner/include/base_local_planner/footprint_helper.h}
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <base_local_planner/Position2DInt.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid footprint_helper.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint__helper_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint__helper_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::FootprintHelper}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
footprint_helper.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/footprint_helper.h}
{\xe \v base_local_planner/include/base_local_planner/footprint_helper.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef FOOTPRINT_HELPER_H_}\par
39 {\cf21 #define FOOTPRINT_HELPER_H_}\par
40 \par
41 {\cf21 #include <vector>}\par
42 \par
43 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
44 {\cf21 #include <geometry_msgs/Point.h>}\par
45 {\cf21 #include <Eigen/Core>}\par
46 {\cf21 #include <base_local_planner/Position2DInt.h>}\par
47 \par
48 {\cf17 namespace }base_local_planner \{\par
49 \par
50 {\cf17 class }FootprintHelper \{\par
51 {\cf17 public}:\par
52   FootprintHelper();\par
53   {\cf17 virtual} ~FootprintHelper();\par
54 \par
63   std::vector<base_local_planner::Position2DInt> getFootprintCells(\par
64       Eigen::Vector3f pos,\par
65       std::vector<geometry_msgs::Point> footprint_spec,\par
66       {\cf17 const} costmap_2d::Costmap2D&,\par
67       {\cf18 bool} fill);\par
68 \par
77   {\cf18 void} getLineCells({\cf18 int} x0, {\cf18 int} x1, {\cf18 int} y0, {\cf18 int} y1, std::vector<base_local_planner::Position2DInt>& pts);\par
78 \par
83   {\cf18 void} getFillCells(std::vector<base_local_planner::Position2DInt>& footprint);\par
84 \};\par
85 \par
86 \} {\cf20 /* namespace base_local_planner */}\par
87 {\cf21 #endif }{\cf20 /* FOOTPRINT_HELPER_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/goal_functions.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/goal_functions.h}
{\xe \v base_local_planner/include/base_local_planner/goal_functions.h}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <nav_msgs/Odometry.h>}\par
{\f2 #include <nav_msgs/Path.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <geometry_msgs/Twist.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <string>}\par
{\f2 #include <cmath>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid goal_functions.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "goal__functions_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "goal__functions_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b base_local_planner::getGoalPositionDistance} (const geometry_msgs::PoseStamped &global_pose, double goal_x, double goal_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'BE\'E0\'C0\'EB\'B5\'C4\'C6\'BD\'B7\'BD\'C0\'B4\'BC\'EC\'B2\'E2\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b base_local_planner::getGoalOrientationAngleDifference} (const geometry_msgs::PoseStamped &global_pose, double goal_th)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return angle difference to goal to check if the goal orientation has been achieved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b base_local_planner::publishPlan} (const std::vector< geometry_msgs::PoseStamped > &path, const ros::Publisher &pub)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publish a plan for visualization purposes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b base_local_planner::prunePlan} (const geometry_msgs::PoseStamped &global_pose, std::vector< geometry_msgs::PoseStamped > &plan, std::vector< geometry_msgs::PoseStamped > &global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trim off parts of the global plan that are far enough behind the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::transformGlobalPlan} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const geometry_msgs::PoseStamped &global_robot_pose, const {\b costmap_2d::Costmap2D} &costmap, const std::string &global_frame, std::vector< geometry_msgs::PoseStamped > &transformed_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transforms the global plan of the robot from the planner frame to the frame of the costmap, selects only the (first) part of the plan that is within the costmap area. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::getGoalPose} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const std::string &global_frame, geometry_msgs::PoseStamped &goal_pose)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns last pose in plan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::isGoalReached} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const {\b costmap_2d::Costmap2D} &costmap, const std::string &global_frame, geometry_msgs::PoseStamped &global_pose, const nav_msgs::Odometry &base_odom, double rot_stopped_vel, double trans_stopped_vel, double xy_goal_tolerance, double yaw_goal_tolerance)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if the goal pose has been achieved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::stopped} (const nav_msgs::Odometry &base_odom, const double &rot_stopped_velocity, const double &trans_stopped_velocity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check whether the robot is stopped or not }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
goal_functions.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/goal_functions.h}
{\xe \v base_local_planner/include/base_local_planner/goal_functions.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef BASE_LOCAL_PLANNER_GOAL_FUNCTIONS_H_}\par
38 {\cf21 #define BASE_LOCAL_PLANNER_GOAL_FUNCTIONS_H_}\par
39 \par
40 {\cf21 #include <ros/ros.h>}\par
41 {\cf21 #include <nav_msgs/Odometry.h>}\par
42 {\cf21 #include <nav_msgs/Path.h>}\par
43 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
44 {\cf21 #include <geometry_msgs/Twist.h>}\par
45 {\cf21 #include <geometry_msgs/Point.h>}\par
46 {\cf21 #include <tf2_ros/buffer.h>}\par
47 \par
48 {\cf21 #include <string>}\par
49 {\cf21 #include <cmath>}\par
50 \par
51 {\cf21 #include <angles/angles.h>}\par
52 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
53 \par
54 {\cf17 namespace }base_local_planner \{\par
55 \par
63   {\cf18 double} getGoalPositionDistance({\cf17 const} geometry_msgs::PoseStamped& global_pose, {\cf18 double} goal_x, {\cf18 double} goal_y);\par
64 \par
72   {\cf18 double} getGoalOrientationAngleDifference({\cf17 const} geometry_msgs::PoseStamped& global_pose, {\cf18 double} goal_th);\par
73 \par
80   {\cf18 void} publishPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& path, {\cf17 const} ros::Publisher& pub);\par
81 \par
88   {\cf18 void} prunePlan({\cf17 const} geometry_msgs::PoseStamped& global_pose, std::vector<geometry_msgs::PoseStamped>& plan, std::vector<geometry_msgs::PoseStamped>& global_plan);\par
89 \par
100   {\cf18 bool} transformGlobalPlan({\cf17 const} tf2_ros::Buffer& tf,\par
101       {\cf17 const} std::vector<geometry_msgs::PoseStamped>& global_plan,\par
102       {\cf17 const} geometry_msgs::PoseStamped& global_robot_pose,\par
103       {\cf17 const} costmap_2d::Costmap2D& costmap,\par
104       {\cf17 const} std::string& global_frame,\par
105       std::vector<geometry_msgs::PoseStamped>& transformed_plan);\par
106 \par
115   {\cf18 bool} getGoalPose({\cf17 const} tf2_ros::Buffer& tf,\par
116       {\cf17 const} std::vector<geometry_msgs::PoseStamped>& global_plan,\par
117       {\cf17 const} std::string& global_frame,\par
118       geometry_msgs::PoseStamped &goal_pose);\par
119 \par
133   {\cf18 bool} isGoalReached({\cf17 const} tf2_ros::Buffer& tf,\par
134       {\cf17 const} std::vector<geometry_msgs::PoseStamped>& global_plan,\par
135       {\cf17 const} costmap_2d::Costmap2D& costmap,\par
136       {\cf17 const} std::string& global_frame,\par
137       geometry_msgs::PoseStamped& global_pose,\par
138       {\cf17 const} nav_msgs::Odometry& base_odom,\par
139       {\cf18 double} rot_stopped_vel, {\cf18 double} trans_stopped_vel,\par
140       {\cf18 double} xy_goal_tolerance, {\cf18 double} yaw_goal_tolerance);\par
141 \par
149   {\cf18 bool} stopped({\cf17 const} nav_msgs::Odometry& base_odom,\par
150       {\cf17 const} {\cf18 double}& rot_stopped_velocity,\par
151       {\cf17 const} {\cf18 double}& trans_stopped_velocity);\par
152 \};\par
153 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/latched_stop_rotate_controller.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/latched_stop_rotate_controller.h}
{\xe \v base_local_planner/include/base_local_planner/latched_stop_rotate_controller.h}
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <base_local_planner/local_planner_util.h>}\par
{\f2 #include <base_local_planner/odometry_helper_ros.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid latched_stop_rotate_controller.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "latched__stop__rotate__controller_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "latched__stop__rotate__controller_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::LatchedStopRotateController}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
latched_stop_rotate_controller.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/latched_stop_rotate_controller.h}
{\xe \v base_local_planner/include/base_local_planner/latched_stop_rotate_controller.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * latched_stop_rotate_controller.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: Apr 16, 2012}\par
5 {\cf20  *      Author: tkruse}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef LATCHED_STOP_ROTATE_CONTROLLER_H_}\par
9 {\cf21 #define LATCHED_STOP_ROTATE_CONTROLLER_H_}\par
10 \par
11 {\cf21 #include <string>}\par
12 \par
13 {\cf21 #include <Eigen/Core>}\par
14 \par
15 {\cf21 #include <base_local_planner/local_planner_util.h>}\par
16 {\cf21 #include <base_local_planner/odometry_helper_ros.h>}\par
17 \par
18 {\cf17 namespace }base_local_planner \{\par
19 \par
20 {\cf20 // \'B5\'B1\'BB\'FA\'C6\'F7\'C8\'CB\'C0\'EF\'C4\'BF\'B1\'EA\'B5\'E3\'D7\'E3\'B9\'BB\'BD\'FC\'B5\'C4\'CA\'B1\'BA\'F2\'A3\'ACLatchedStopRotateController\'BF\'D8\'D6\'C6\'C6\'F7\'BB\'E1\'B1\'BB\'B5\'F7\'D3\'C3}\par
21 {\cf17 class }LatchedStopRotateController \{\par
22 {\cf17 public}:\par
23   LatchedStopRotateController({\cf17 const} std::string& name = {\cf22 ""});\par
24   {\cf17 virtual} ~LatchedStopRotateController();\par
25 \par
26   {\cf18 bool} isPositionReached(LocalPlannerUtil* planner_util,\par
27                          {\cf17 const} geometry_msgs::PoseStamped& global_pose);\par
28 \par
29   {\cf18 bool} isGoalReached(LocalPlannerUtil* planner_util,\par
30       OdometryHelperRos& odom_helper,\par
31       {\cf17 const} geometry_msgs::PoseStamped& global_pose);\par
32 \par
33   {\cf18 void} resetLatching() \{\par
34     xy_tolerance_latch_ = {\cf17 false};\par
35   \}\par
36 \par
44   {\cf18 bool} stopWithAccLimits({\cf17 const} geometry_msgs::PoseStamped& global_pose,\par
45       {\cf17 const} geometry_msgs::PoseStamped& robot_vel,\par
46       geometry_msgs::Twist& cmd_vel,\par
47       Eigen::Vector3f acc_lim,\par
48       {\cf18 double} sim_period,\par
49       boost::function<{\cf18 bool} (Eigen::Vector3f pos,\par
50                             Eigen::Vector3f vel,\par
51                             Eigen::Vector3f vel_samples)> obstacle_check);\par
52 \par
61   {\cf18 bool} rotateToGoal({\cf17 const} geometry_msgs::PoseStamped& global_pose,\par
62       {\cf17 const} geometry_msgs::PoseStamped& robot_vel,\par
63       {\cf18 double} goal_th,\par
64       geometry_msgs::Twist& cmd_vel,\par
65       Eigen::Vector3f acc_lim,\par
66       {\cf18 double} sim_period,\par
67       base_local_planner::LocalPlannerLimits& limits,\par
68       boost::function<{\cf18 bool} (Eigen::Vector3f pos,\par
69                             Eigen::Vector3f vel,\par
70                             Eigen::Vector3f vel_samples)> obstacle_check);\par
71 \par
72   {\cf18 bool} computeVelocityCommandsStopRotate(geometry_msgs::Twist& cmd_vel,\par
73       Eigen::Vector3f acc_lim,\par
74       {\cf18 double} sim_period,\par
75       LocalPlannerUtil* planner_util,\par
76       OdometryHelperRos& odom_helper,\par
77       {\cf17 const} geometry_msgs::PoseStamped& global_pose,\par
78       boost::function<{\cf18 bool} (Eigen::Vector3f pos,\par
79                             Eigen::Vector3f vel,\par
80                             Eigen::Vector3f vel_samples)> obstacle_check);\par
81 \par
82 {\cf17 private}:\par
83   {\cf17 inline} {\cf18 double} sign({\cf18 double} x)\{\par
84     {\cf19 return} x < 0.0 ? -1.0 : 1.0;\par
85   \}\par
86 \par
87 \par
88   {\cf20 // latch_xy_goal_tolerance_ \'CA\'C7\'B7\'F1\'D3\'D0latch\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'D0\'E8\'C7\'F3,}\par
89   {\cf20 // xy_tolerance_latch_ \'D7\'B4\'CC\'AC\'B7\'B4\'C0\'A1\'BB\'FA\'C6\'F7\'C8\'CB\'CA\'C7\'B7\'F1\'D2\'D1\'BE\'AD\'B5\'BD\'C1\'CB\'C4\'BF\'B1\'EA\'C7\'F8\'D3\'F2\'A3\'AC\'D6\'BB\'D0\'E8\'D2\'AA\'D0\'FD\'D7\'AA\'BE\'CD\'D0\'D0}\par
90   {\cf18 bool} latch_xy_goal_tolerance_, xy_tolerance_latch_;\par
91   {\cf18 bool} rotating_to_goal_;\par
92 \};\par
93 \par
94 \} {\cf20 /* namespace base_local_planner */}\par
95 {\cf21 #endif }{\cf20 /* LATCHED_STOP_ROTATE_CONTROLLER_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/line_iterator.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/line_iterator.h}
{\xe \v base_local_planner/include/base_local_planner/line_iterator.h}
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdlib.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid line_iterator.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "line__iterator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "line__iterator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::LineIterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
line_iterator.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/line_iterator.h}
{\xe \v base_local_planner/include/base_local_planner/line_iterator.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Copyright (c) 2012, Willow Garage, Inc.}\par
3 {\cf20  * All rights reserved.}\par
4 {\cf20  *}\par
5 {\cf20  * Redistribution and use in source and binary forms, with or without}\par
6 {\cf20  * modification, are permitted provided that the following conditions are met:}\par
7 {\cf20  *}\par
8 {\cf20  *     * Redistributions of source code must retain the above copyright}\par
9 {\cf20  *       notice, this list of conditions and the following disclaimer.}\par
10 {\cf20  *     * Redistributions in binary form must reproduce the above copyright}\par
11 {\cf20  *       notice, this list of conditions and the following disclaimer in the}\par
12 {\cf20  *       documentation and/or other materials provided with the distribution.}\par
13 {\cf20  *     * Neither the name of the Willow Garage, Inc. nor the names of its}\par
14 {\cf20  *       contributors may be used to endorse or promote products derived from}\par
15 {\cf20  *       this software without specific prior written permission.}\par
16 {\cf20  *}\par
17 {\cf20  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"}\par
18 {\cf20  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE}\par
19 {\cf20  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE}\par
20 {\cf20  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE}\par
21 {\cf20  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR}\par
22 {\cf20  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF}\par
23 {\cf20  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS}\par
24 {\cf20  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN}\par
25 {\cf20  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)}\par
26 {\cf20  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
27 {\cf20  * POSSIBILITY OF SUCH DAMAGE.}\par
28 {\cf20  */}\par
29 {\cf21 #ifndef LINE_ITERATOR_H}\par
30 {\cf21 #define LINE_ITERATOR_H}\par
31 \par
32 {\cf21 #include <stdlib.h>}\par
33 \par
34 {\cf17 namespace }base_local_planner\par
35 \{\par
36 \par
38 {\cf17 class }LineIterator\par
39 \{\par
40 {\cf17 public}:\par
41   LineIterator( {\cf18 int} x0, {\cf18 int} y0, {\cf18 int} x1, {\cf18 int} y1 )\par
42     : x0_( x0 )\par
43     , y0_( y0 )\par
44     , x1_( x1 )\par
45     , y1_( y1 )\par
46     , x_( x0 ) {\cf20 // X and Y start of at first endpoint.}\par
47     , y_( y0 )\par
48     , deltax_( abs( x1 - x0 ))\par
49     , deltay_( abs( y1 - y0 ))\par
50     , curpixel_( 0 )\par
51   \{\par
52     {\cf19 if}( x1_ >= x0_ )                 {\cf20 // The x-values are increasing}\par
53     \{\par
54       xinc1_ = 1;\par
55       xinc2_ = 1;\par
56     \}\par
57     {\cf19 else}                          {\cf20 // The x-values are decreasing}\par
58     \{\par
59       xinc1_ = -1;\par
60       xinc2_ = -1;\par
61     \}\par
62 \par
63     {\cf19 if}( y1_ >= y0_)                 {\cf20 // The y-values are increasing}\par
64     \{\par
65       yinc1_ = 1;\par
66       yinc2_ = 1;\par
67     \}\par
68     {\cf19 else}                          {\cf20 // The y-values are decreasing}\par
69     \{\par
70       yinc1_ = -1;\par
71       yinc2_ = -1;\par
72     \}\par
73 \par
74     {\cf19 if}( deltax_ >= deltay_ )         {\cf20 // There is at least one x-value for every y-value}\par
75     \{\par
76       xinc1_ = 0;                  {\cf20 // Don't change the x when numerator >= denominator}\par
77       yinc2_ = 0;                  {\cf20 // Don't change the y for every iteration}\par
78       den_ = deltax_;\par
79       num_ = deltax_ / 2;\par
80       numadd_ = deltay_;\par
81       numpixels_ = deltax_;         {\cf20 // There are more x-values than y-values}\par
82     \}\par
83     {\cf19 else}                          {\cf20 // There is at least one y-value for every x-value}\par
84     \{\par
85       xinc2_ = 0;                  {\cf20 // Don't change the x for every iteration}\par
86       yinc1_ = 0;                  {\cf20 // Don't change the y when numerator >= denominator}\par
87       den_ = deltay_;\par
88       num_ = deltay_ / 2;\par
89       numadd_ = deltax_;\par
90       numpixels_ = deltay_;         {\cf20 // There are more y-values than x-values}\par
91     \}\par
92   \}\par
93     \par
94   {\cf18 bool} isValid(){\cf17  const}\par
95 {\cf17   }\{\par
96     {\cf19 return} curpixel_ <= numpixels_;\par
97   \}\par
98 \par
99   {\cf18 void} advance()\par
100   \{\par
101     num_ += numadd_;              {\cf20 // Increase the numerator by the top of the fraction}\par
102     {\cf19 if}( num_ >= den_ )            {\cf20 // Check if numerator >= denominator}\par
103     \{\par
104       num_ -= den_;               {\cf20 // Calculate the new numerator value}\par
105       x_ += xinc1_;               {\cf20 // Change the x as appropriate}\par
106       y_ += yinc1_;               {\cf20 // Change the y as appropriate}\par
107     \}\par
108     x_ += xinc2_;                 {\cf20 // Change the x as appropriate}\par
109     y_ += yinc2_;                 {\cf20 // Change the y as appropriate}\par
110 \par
111     curpixel_++;\par
112   \}\par
113   \par
114   {\cf18 int} getX(){\cf17  const }\{ {\cf19 return} x_; \}\par
115   {\cf18 int} getY(){\cf17  const }\{ {\cf19 return} y_; \}\par
116 \par
117   {\cf18 int} getX0(){\cf17  const }\{ {\cf19 return} x0_; \}\par
118   {\cf18 int} getY0(){\cf17  const }\{ {\cf19 return} y0_; \}\par
119 \par
120   {\cf18 int} getX1(){\cf17  const }\{ {\cf19 return} x1_; \}\par
121   {\cf18 int} getY1(){\cf17  const }\{ {\cf19 return} y1_; \}\par
122 \par
123 {\cf17 private}:\par
124   {\cf18 int} x0_; \par
125   {\cf18 int} y0_; \par
126   {\cf18 int} x1_; \par
127   {\cf18 int} y1_; \par
128 \par
129   {\cf18 int} x_; \par
130   {\cf18 int} y_; \par
131 \par
132   {\cf18 int} deltax_; \par
133   {\cf18 int} deltay_; \par
134 \par
135   {\cf18 int} curpixel_; \par
136 \par
137   {\cf18 int} xinc1_, xinc2_, yinc1_, yinc2_;\par
138   {\cf18 int} den_, num_, numadd_, numpixels_;\par
139 \};\par
140 \par
141 \} {\cf20 // end namespace base_local_planner}\par
142 \par
143 {\cf21 #endif }{\cf20 // LINE_ITERATOR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/local_planner_limits.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/local_planner_limits.h}
{\xe \v base_local_planner/include/base_local_planner/local_planner_limits.h}
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Eigen/Core>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid local_planner_limits.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "local__planner__limits_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "local__planner__limits_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::LocalPlannerLimits}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
local_planner_limits.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/local_planner_limits.h}
{\xe \v base_local_planner/include/base_local_planner/local_planner_limits.h}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /***********************************************************}\par
2 {\cf20  * Software License Agreement (BSD License)}\par
3 {\cf20  *}\par
4 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
5 {\cf20  *  All rights reserved.}\par
6 {\cf20  *}\par
7 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20  *  modification, are permitted provided that the following conditions}\par
9 {\cf20  *  are met:}\par
10 {\cf20  *}\par
11 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20  *     copyright notice, this list of conditions and the following}\par
15 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20  *     with the distribution.}\par
17 {\cf20  *   * Neither the name of the Willow Garage nor the names of its}\par
18 {\cf20  *     contributors may be used to endorse or promote products derived}\par
19 {\cf20  *     from this software without specific prior written permission.}\par
20 {\cf20  *}\par
21 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20  ***********************************************************/}\par
34 \par
35 \par
36 {\cf21 #ifndef __base_local_planner__LOCALPLANNERLIMITS_H__}\par
37 {\cf21 #define __base_local_planner__LOCALPLANNERLIMITS_H__}\par
38 \par
39 {\cf21 #include <Eigen/Core>}\par
40 \par
41 {\cf17 namespace }base_local_planner\par
42 \{\par
43 {\cf17 class }LocalPlannerLimits\par
44 \{\par
45 {\cf17 public}:\par
46 \par
47   {\cf18 double} max_vel_trans;\par
48   {\cf18 double} min_vel_trans;\par
49   {\cf18 double} max_vel_x;\par
50   {\cf18 double} min_vel_x;\par
51   {\cf18 double} max_vel_y;\par
52   {\cf18 double} min_vel_y;\par
53   {\cf18 double} max_vel_theta;\par
54   {\cf18 double} min_vel_theta;\par
55   {\cf18 double} acc_lim_x;\par
56   {\cf18 double} acc_lim_y;\par
57   {\cf18 double} acc_lim_theta;\par
58   {\cf18 double} acc_lim_trans;\par
59   {\cf18 bool}   prune_plan;\par
60   {\cf18 double} xy_goal_tolerance;\par
61   {\cf18 double} yaw_goal_tolerance;\par
62   {\cf18 double} trans_stopped_vel;\par
63   {\cf18 double} theta_stopped_vel;\par
64   {\cf18 bool}   restore_defaults;\par
65 \par
66   LocalPlannerLimits() \{\}\par
67 \par
68   LocalPlannerLimits(\par
69       {\cf18 double} nmax_vel_trans,\par
70       {\cf18 double} nmin_vel_trans,\par
71       {\cf18 double} nmax_vel_x,\par
72       {\cf18 double} nmin_vel_x,\par
73       {\cf18 double} nmax_vel_y,\par
74       {\cf18 double} nmin_vel_y,\par
75       {\cf18 double} nmax_vel_theta,\par
76       {\cf18 double} nmin_vel_theta,\par
77       {\cf18 double} nacc_lim_x,\par
78       {\cf18 double} nacc_lim_y,\par
79       {\cf18 double} nacc_lim_theta,\par
80       {\cf18 double} nacc_lim_trans,\par
81       {\cf18 double} nxy_goal_tolerance,\par
82       {\cf18 double} nyaw_goal_tolerance,\par
83       {\cf18 bool}   nprune_plan = {\cf17 true},\par
84       {\cf18 double} ntrans_stopped_vel = 0.1,\par
85       {\cf18 double} ntheta_stopped_vel = 0.1):\par
86         max_vel_trans(nmax_vel_trans),\par
87         min_vel_trans(nmin_vel_trans),\par
88         max_vel_x(nmax_vel_x),\par
89         min_vel_x(nmin_vel_x),\par
90         max_vel_y(nmax_vel_y),\par
91         min_vel_y(nmin_vel_y),\par
92         max_vel_theta(nmax_vel_theta),\par
93         min_vel_theta(nmin_vel_theta),\par
94         acc_lim_x(nacc_lim_x),\par
95         acc_lim_y(nacc_lim_y),\par
96         acc_lim_theta(nacc_lim_theta),\par
97         acc_lim_trans(nacc_lim_trans),\par
98         prune_plan(nprune_plan),\par
99         xy_goal_tolerance(nxy_goal_tolerance),\par
100         yaw_goal_tolerance(nyaw_goal_tolerance),\par
101         trans_stopped_vel(ntrans_stopped_vel),\par
102         theta_stopped_vel(ntheta_stopped_vel) \{\}\par
103 \par
104   ~LocalPlannerLimits() \{\}\par
105 \par
110   Eigen::Vector3f getAccLimits() \{\par
111     Eigen::Vector3f acc_limits;\par
112     acc_limits[0] = acc_lim_x;\par
113     acc_limits[1] = acc_lim_y;\par
114     acc_limits[2] = acc_lim_theta;\par
115     {\cf19 return} acc_limits;\par
116   \}\par
117 \par
118 \};\par
119 \par
120 \}\par
121 {\cf21 #endif }{\cf20 // __LOCALPLANNERLIMITS_H__}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/local_planner_util.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/local_planner_util.h}
{\xe \v base_local_planner/include/base_local_planner/local_planner_util.h}
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <nav_core/base_local_planner.h>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <base_local_planner/local_planner_limits.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid local_planner_util.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "local__planner__util_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "local__planner__util_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::LocalPlannerUtil}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Helper class implementing infrastructure code many local planner implementations may need. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
local_planner_util.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/local_planner_util.h}
{\xe \v base_local_planner/include/base_local_planner/local_planner_util.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef ABSTRACT_LOCAL_PLANNER_ODOM_H_}\par
39 {\cf21 #define ABSTRACT_LOCAL_PLANNER_ODOM_H_}\par
40 \par
41 {\cf21 #include <nav_core/base_local_planner.h>}\par
42 \par
43 {\cf21 #include <boost/thread.hpp>}\par
44 \par
45 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
46 {\cf21 #include <tf2_ros/buffer.h>}\par
47 \par
48 {\cf21 #include <base_local_planner/local_planner_limits.h>}\par
49 \par
50 \par
51 {\cf17 namespace }base_local_planner \{\par
52 \par
57 {\cf17 class }LocalPlannerUtil \{\par
58 \par
59 {\cf17 private}:\par
60   {\cf20 // things we get from move_base}\par
61   std::string name_;\par
62   std::string global_frame_;\par
63 \par
64   costmap_2d::Costmap2D* costmap_;\par
65   tf2_ros::Buffer* tf_;\par
66 \par
67 \par
68   std::vector<geometry_msgs::PoseStamped> global_plan_;\par
69 \par
70 \par
71   boost::mutex limits_configuration_mutex_;\par
72   {\cf18 bool} setup_;\par
73   LocalPlannerLimits default_limits_;\par
74   LocalPlannerLimits limits_;\par
75   {\cf18 bool} initialized_;\par
76 \par
77 {\cf17 public}:\par
78 \par
82   {\cf18 void} reconfigureCB(LocalPlannerLimits &config, {\cf18 bool} restore_defaults);\par
83 \par
84   LocalPlannerUtil() : initialized_(false) \{\}\par
85 \par
86   ~LocalPlannerUtil() \{\par
87   \}\par
88 \par
89   {\cf18 void} initialize(tf2_ros::Buffer* tf,\par
90       costmap_2d::Costmap2D* costmap,\par
91       std::string global_frame);\par
92 \par
93   {\cf18 bool} getGoal(geometry_msgs::PoseStamped& goal_pose);\par
94 \par
95   {\cf18 bool} setPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& orig_global_plan);\par
96 \par
97   {\cf18 bool} getLocalPlan({\cf17 const} geometry_msgs::PoseStamped& global_pose, std::vector<geometry_msgs::PoseStamped>& transformed_plan);\par
98 \par
99   costmap_2d::Costmap2D* getCostmap();\par
100 \par
101   LocalPlannerLimits getCurrentLimits();\par
102 \par
103   std::string getGlobalFrame()\{ {\cf19 return} global_frame_; \}\par
104 \};\par
105 \par
106 \par
107 \par
108 \par
109 \};\par
110 \par
111 {\cf21 #endif }{\cf20 /* ABSTRACT_LOCAL_PLANNER_ODOM_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/map_cell.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_cell.h}
{\xe \v base_local_planner/include/base_local_planner/map_cell.h}
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_inc.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_cell.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cell_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cell_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::MapCell}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores path distance and goal distance information used for scoring trajectories }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_cell.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_cell.h}
{\xe \v base_local_planner/include/base_local_planner/map_cell.h}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  * Software License Agreement (BSD License)}\par
3 {\cf20  *}\par
4 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
5 {\cf20  *  All rights reserved.}\par
6 {\cf20  *}\par
7 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20  *  modification, are permitted provided that the following conditions}\par
9 {\cf20  *  are met:}\par
10 {\cf20  *}\par
11 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20  *     copyright notice, this list of conditions and the following}\par
15 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20  *     with the distribution.}\par
17 {\cf20  *   * Neither the name of the Willow Garage nor the names of its}\par
18 {\cf20  *     contributors may be used to endorse or promote products derived}\par
19 {\cf20  *     from this software without specific prior written permission.}\par
20 {\cf20  *}\par
21 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20  *********************************************************************/}\par
34 {\cf21 #ifndef TRAJECTORY_ROLLOUT_MAP_CELL_H_}\par
35 {\cf21 #define TRAJECTORY_ROLLOUT_MAP_CELL_H_}\par
36 \par
37 {\cf21 #include <base_local_planner/trajectory_inc.h>}\par
38 \par
39 {\cf17 namespace }base_local_planner \{\par
44   {\cf17 class }MapCell\{\par
45     {\cf17 public}:\par
49       MapCell();\par
50 \par
55       MapCell({\cf17 const} MapCell& mc);\par
56 \par
57       {\cf18 unsigned} {\cf18 int} cx, cy; \par
58 \par
59       {\cf18 double} target_dist; \par
60 \par
61       {\cf18 bool} target_mark; \par
62 \par
63       {\cf18 bool} within_robot; \par
64   \};\par
65 \};\par
66 \par
67 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/map_grid.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_grid.h}
{\xe \v base_local_planner/include/base_local_planner/map_grid.h}
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <iostream>}\par
{\f2 #include <base_local_planner/trajectory_inc.h>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <base_local_planner/map_cell.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::MapGrid}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A grid of {\b MapCell} cells that is used to propagate path and goal distances for the trajectory controller. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_grid.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_grid.h}
{\xe \v base_local_planner/include/base_local_planner/map_grid.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  * Software License Agreement (BSD License)}\par
3 {\cf20  *}\par
4 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
5 {\cf20  *  All rights reserved.}\par
6 {\cf20  *}\par
7 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20  *  modification, are permitted provided that the following conditions}\par
9 {\cf20  *  are met:}\par
10 {\cf20  *}\par
11 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20  *     copyright notice, this list of conditions and the following}\par
15 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20  *     with the distribution.}\par
17 {\cf20  *   * Neither the name of the Willow Garage nor the names of its}\par
18 {\cf20  *     contributors may be used to endorse or promote products derived}\par
19 {\cf20  *     from this software without specific prior written permission.}\par
20 {\cf20  *}\par
21 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20  *********************************************************************/}\par
34 {\cf21 #ifndef TRAJECTORY_ROLLOUT_MAP_GRID_H_}\par
35 {\cf21 #define TRAJECTORY_ROLLOUT_MAP_GRID_H_}\par
36 \par
37 {\cf21 #include <vector>}\par
38 {\cf21 #include <iostream>}\par
39 {\cf21 #include <base_local_planner/trajectory_inc.h>}\par
40 {\cf21 #include <ros/console.h>}\par
41 {\cf21 #include <ros/ros.h>}\par
42 \par
43 {\cf21 #include <base_local_planner/map_cell.h>}\par
44 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
45 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
46 \par
47 {\cf17 namespace }base_local_planner\{\par
52   {\cf17 class }MapGrid\{\par
53     {\cf17 public}:\par
57       MapGrid();\par
58 \par
64       MapGrid({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y);\par
65 \par
66 \par
73       {\cf17 inline} MapCell& operator() ({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y)\{\par
74         {\cf19 return} map_[size_x_ * y + x];\par
75       \}\par
76 \par
83       {\cf17 inline} MapCell operator() ({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y){\cf17  const }\{\par
84         {\cf19 return} map_[size_x_ * y + x];\par
85       \}\par
86 \par
87       {\cf17 inline} MapCell& getCell({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y)\{\par
88         {\cf19 return} map_[size_x_ * y + x];\par
89       \}\par
90 \par
94       ~MapGrid()\{\}\par
95 \par
100       MapGrid({\cf17 const} MapGrid& mg);\par
101 \par
106       MapGrid& operator= ({\cf17 const} MapGrid& mg);\par
107 \par
111       {\cf18 void} resetPathDist();\par
112 \par
118       {\cf18 void} sizeCheck({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y);\par
119 \par
123       {\cf18 void} commonInit();\par
124 \par
131       {\cf18 size_t} getIndex({\cf18 int} x, {\cf18 int} y);\par
132 \par
136       {\cf17 inline} {\cf18 double} obstacleCosts() \{\par
137         {\cf19 return} map_.size();\par
138       \}\par
139 \par
144       {\cf17 inline} {\cf18 double} unreachableCellCosts() \{\par
145         {\cf19 return} map_.size() + 1;\par
146       \}\par
147 \par
153       {\cf17 inline} {\cf18 bool} updatePathCell(MapCell* current_cell, MapCell* check_cell,\par
154           {\cf17 const} costmap_2d::Costmap2D& costmap);\par
155 \par
163       {\cf17 static} {\cf18 void} adjustPlanResolution({\cf17 const} std::vector<geometry_msgs::PoseStamped>& global_plan_in,\par
164             std::vector<geometry_msgs::PoseStamped>& global_plan_out, {\cf18 double} resolution);\par
165 \par
170       {\cf18 void} computeTargetDistance(std::queue<MapCell*>& dist_queue, {\cf17 const} costmap_2d::Costmap2D& costmap);\par
171 \par
176       {\cf18 void} computeGoalDistance(std::queue<MapCell*>& dist_queue, {\cf17 const} costmap_2d::Costmap2D& costmap);\par
177 \par
181       {\cf18 void} setTargetCells({\cf17 const} costmap_2d::Costmap2D& costmap, {\cf17 const} std::vector<geometry_msgs::PoseStamped>& global_plan);\par
182 \par
186       {\cf18 void} setLocalGoal({\cf17 const} costmap_2d::Costmap2D& costmap,\par
187             {\cf17 const} std::vector<geometry_msgs::PoseStamped>& global_plan);\par
188 \par
189       {\cf18 double} goal_x_, goal_y_; \par
191       {\cf18 unsigned} {\cf18 int} size_x_, size_y_; \par
192 \par
193     {\cf17 private}:\par
194 \par
195       std::vector<MapCell> map_; \par
196 \par
197   \};\par
198 \};\par
199 \par
200 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/map_grid_cost_function.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_grid_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/map_grid_cost_function.h}
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_cost_function.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <base_local_planner/map_grid.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid_cost_function.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__cost__function_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__cost__function_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::MapGridCostFunction}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b base_local_planner::CostAggregationType} \{ {\b base_local_planner::Last}
, {\b base_local_planner::Sum}
, {\b base_local_planner::Product}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_grid_cost_function.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_grid_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/map_grid_cost_function.h}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef MAP_GRID_COST_FUNCTION_H_}\par
39 {\cf21 #define MAP_GRID_COST_FUNCTION_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory_cost_function.h>}\par
42 \par
43 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
44 {\cf21 #include <base_local_planner/map_grid.h>}\par
45 \par
46 {\cf17 namespace }base_local_planner \{\par
47 \par
53 {\cf17 enum} CostAggregationType \{ Last, Sum, Product\};\par
54 \par
73 {\cf17 class }MapGridCostFunction: {\cf17 public} base_local_planner::TrajectoryCostFunction \{\par
74 {\cf17 public}:\par
75   MapGridCostFunction(costmap_2d::Costmap2D* costmap,\par
76       {\cf18 double} xshift = 0.0,\par
77       {\cf18 double} yshift = 0.0,\par
78       {\cf18 bool} is_local_goal_function = {\cf17 false},\par
79       CostAggregationType aggregationType = Last);\par
80 \par
81   ~MapGridCostFunction() \{\}\par
82 \par
86   {\cf18 void} setTargetPoses(std::vector<geometry_msgs::PoseStamped> target_poses);\par
87 \par
88   {\cf18 void} setXShift({\cf18 double} xshift) \{xshift_ = xshift;\}\par
89   {\cf18 void} setYShift({\cf18 double} yshift) \{yshift_ = yshift;\}\par
90 \par
94   {\cf18 void} setStopOnFailure({\cf18 bool} stop_on_failure) \{stop_on_failure_ = stop_on_failure;\}\par
95 \par
99   {\cf18 bool} prepare();\par
100 \par
101   {\cf18 double} scoreTrajectory(Trajectory &traj);\par
102 \par
106   {\cf18 double} obstacleCosts() \{\par
107     {\cf19 return} map_.obstacleCosts();\par
108   \}\par
109 \par
114   {\cf18 double} unreachableCellCosts() \{\par
115     {\cf19 return} map_.unreachableCellCosts();\par
116   \}\par
117 \par
118   {\cf20 // used for easier debugging}\par
119   {\cf18 double} getCellCosts({\cf18 unsigned} {\cf18 int} cx, {\cf18 unsigned} {\cf18 int} cy);\par
120 \par
121 {\cf17 private}:\par
122   std::vector<geometry_msgs::PoseStamped> target_poses_;\par
123   costmap_2d::Costmap2D* costmap_;\par
124 \par
125   base_local_planner::MapGrid map_;\par
126   CostAggregationType aggregationType_;\par
128   {\cf20 // ooints of robots than center, like fron or back}\par
129   {\cf20 // this can help with alignment or keeping specific}\par
130   {\cf20 // wheels on tracks both default to 0}\par
131   {\cf18 double} xshift_;\par
132   {\cf18 double} yshift_;\par
133   {\cf20 // if true, we look for a suitable local goal on path, else we use the full path for costs}\par
134   {\cf18 bool} is_local_goal_function_;\par
135   {\cf18 bool} stop_on_failure_;\par
136 \};\par
137 \par
138 \} {\cf20 /* namespace base_local_planner */}\par
139 {\cf21 #endif }{\cf20 /* MAP_GRID_COST_FUNCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/map_grid_visualizer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_grid_visualizer.h}
{\xe \v base_local_planner/include/base_local_planner/map_grid_visualizer.h}
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <base_local_planner/map_grid.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid_visualizer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__visualizer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__visualizer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::MapGridVisualizer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_grid_visualizer.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/map_grid_visualizer.h}
{\xe \v base_local_planner/include/base_local_planner/map_grid_visualizer.h}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  * Software License Agreement (BSD License)}\par
3 {\cf20  *}\par
4 {\cf20  *  Copyright (c) 2010, Eric Perko}\par
5 {\cf20  *  All rights reserved.}\par
6 {\cf20  *}\par
7 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20  *  modification, are permitted provided that the following conditions}\par
9 {\cf20  *  are met:}\par
10 {\cf20  *}\par
11 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20  *     copyright notice, this list of conditions and the following}\par
15 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20  *     with the distribution.}\par
17 {\cf20  *   * Neither the name of Eric Perko nor the names of its}\par
18 {\cf20  *     contributors may be used to endorse or promote products derived}\par
19 {\cf20  *     from this software without specific prior written permission.}\par
20 {\cf20  *}\par
21 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20  *********************************************************************/}\par
34 {\cf21 #ifndef MAP_GRID_VISUALIZER_H_}\par
35 {\cf21 #define MAP_GRID_VISUALIZER_H_}\par
36 \par
37 {\cf21 #include <ros/ros.h>}\par
38 {\cf21 #include <base_local_planner/map_grid.h>}\par
39 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
40 \par
41 {\cf17 namespace }base_local_planner \{\par
42     {\cf17 class }MapGridVisualizer \{\par
43         {\cf17 public}:\par
47             MapGridVisualizer();\par
48 \par
55             {\cf18 void} initialize({\cf17 const} std::string& name, std::string frame, boost::function<{\cf18 bool} ({\cf18 int} cx, {\cf18 int} cy, {\cf18 float} &path_cost, {\cf18 float} &goal_cost, {\cf18 float} &occ_cost, {\cf18 float} &total_cost)> cost_function);\par
56 \par
60             {\cf18 void} publishCostCloud({\cf17 const} costmap_2d::Costmap2D* costmap_p_);\par
61 \par
62         {\cf17 private}:\par
63             std::string name_; \par
64             boost::function<bool ({\cf18 int} cx, {\cf18 int} cy, {\cf18 float} &path_cost, {\cf18 float} &goal_cost, {\cf18 float} &occ_cost, {\cf18 float} &total_cost)> cost_function_; \par
65             ros::NodeHandle ns_nh_;\par
66             std::string frame_id_;\par
67             ros::Publisher pub_;\par
68     \};\par
69 \};\par
70 \par
71 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/obstacle_cost_function.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/obstacle_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/obstacle_cost_function.h}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_cost_function.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid obstacle_cost_function.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__cost__function_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__cost__function_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::ObstacleCostFunction}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Uses costmap 2d to assign negative costs if robot footprint is in obstacle on any point of the trajectory. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
obstacle_cost_function.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/obstacle_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/obstacle_cost_function.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef OBSTACLE_COST_FUNCTION_H_}\par
39 {\cf21 #define OBSTACLE_COST_FUNCTION_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory_cost_function.h>}\par
42 \par
43 {\cf21 #include <base_local_planner/costmap_model.h>}\par
44 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
45 \par
46 {\cf17 namespace }base_local_planner \{\par
47 \par
53 {\cf17 class }ObstacleCostFunction : {\cf17 public} TrajectoryCostFunction \{\par
54 \par
55 {\cf17 public}:\par
56   ObstacleCostFunction(costmap_2d::Costmap2D* costmap);\par
57   ~ObstacleCostFunction();\par
58 \par
59   {\cf18 bool} prepare();\par
60   {\cf18 double} scoreTrajectory(Trajectory &traj);\par
61 \par
62   {\cf18 void} setSumScores({\cf18 bool} score_sums)\{ sum_scores_=score_sums; \}\par
63 \par
64   {\cf18 void} setParams({\cf18 double} max_trans_vel, {\cf18 double} max_scaling_factor, {\cf18 double} scaling_speed);\par
65   {\cf18 void} setFootprint(std::vector<geometry_msgs::Point> footprint_spec);\par
66 \par
67   {\cf20 // helper functions, made static for easy unit testing}\par
68   {\cf17 static} {\cf18 double} getScalingFactor(Trajectory &traj, {\cf18 double} scaling_speed, {\cf18 double} max_trans_vel, {\cf18 double} max_scaling_factor);\par
69   {\cf17 static} {\cf18 double} footprintCost(\par
70       {\cf17 const} {\cf18 double}& x,\par
71       {\cf17 const} {\cf18 double}& y,\par
72       {\cf17 const} {\cf18 double}& th,\par
73       {\cf18 double} scale,\par
74       std::vector<geometry_msgs::Point> footprint_spec,\par
75       costmap_2d::Costmap2D* costmap,\par
76       base_local_planner::WorldModel* world_model);\par
77 \par
78 {\cf17 private}:\par
79   costmap_2d::Costmap2D* costmap_;\par
80   std::vector<geometry_msgs::Point> footprint_spec_;\par
81   base_local_planner::WorldModel* world_model_;\par
82   {\cf18 double} max_trans_vel_;\par
83   {\cf18 bool} sum_scores_;\par
84   {\cf20 //footprint scaling with velocity;}\par
85   {\cf18 double} max_scaling_factor_, scaling_speed_;\par
86 \};\par
87 \par
88 \} {\cf20 /* namespace base_local_planner */}\par
89 {\cf21 #endif }{\cf20 /* OBSTACLE_COST_FUNCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/odometry_helper_ros.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/odometry_helper_ros.h}
{\xe \v base_local_planner/include/base_local_planner/odometry_helper_ros.h}
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <nav_msgs/Odometry.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid odometry_helper_ros.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "odometry__helper__ros_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "odometry__helper__ros_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::OdometryHelperRos}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHUNKY}\~ 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CHUNKY\:odometry_helper_ros.h}
{\xe \v odometry_helper_ros.h\:CHUNKY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHUNKY\~ 1}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
odometry_helper_ros.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/odometry_helper_ros.h}
{\xe \v base_local_planner/include/base_local_planner/odometry_helper_ros.h}
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef ODOMETRY_HELPER_ROS2_H_}\par
39 {\cf21 #define ODOMETRY_HELPER_ROS2_H_}\par
40 \par
41 {\cf21 #include <nav_msgs/Odometry.h>}\par
42 {\cf21 #include <ros/ros.h>}\par
43 {\cf21 #include <boost/thread.hpp>}\par
44 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
45 \par
46 {\cf17 namespace }base_local_planner \{\par
47 \par
48 {\cf17 class }OdometryHelperRos \{\par
49 {\cf17 public}:\par
50 \par
55   OdometryHelperRos(std::string odom_topic = {\cf22 ""});\par
56   ~OdometryHelperRos() \{\}\par
57 \par
62   {\cf18 void} odomCallback({\cf17 const} nav_msgs::Odometry::ConstPtr& msg);\par
63 \par
64   {\cf18 void} getOdom(nav_msgs::Odometry& base_odom);\par
65 \par
66   {\cf18 void} getRobotVel(geometry_msgs::PoseStamped& robot_vel);\par
67 \par
73   {\cf18 void} setOdomTopic(std::string odom_topic);\par
74 \par
76   std::string getOdomTopic(){\cf17  const }\{ {\cf19 return} odom_topic_; \}\par
77 \par
78 {\cf17 private}:\par
79   {\cf20 //odom topic}\par
80   std::string odom_topic_;\par
81 \par
82   {\cf20 // we listen on odometry on the odom topic}\par
83   ros::Subscriber odom_sub_;\par
84   nav_msgs::Odometry base_odom_;\par
85   boost::mutex odom_mutex_;\par
86   {\cf20 // global tf frame id}\par
87   std::string frame_id_; \par
88 \};\par
89 \par
90 \} {\cf20 /* namespace base_local_planner */}\par
91 {\cf21 #define CHUNKY 1}\par
92 {\cf21 #endif }{\cf20 /* ODOMETRY_HELPER_ROS2_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/oscillation_cost_function.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/oscillation_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/oscillation_cost_function.h}
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_cost_function.h>}\par
{\f2 #include <Eigen/Core>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid oscillation_cost_function.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "oscillation__cost__function_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "oscillation__cost__function_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::OscillationCostFunction}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
oscillation_cost_function.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/oscillation_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/oscillation_cost_function.h}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef OSCILLATION_COST_FUNCTION_H_}\par
39 {\cf21 #define OSCILLATION_COST_FUNCTION_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory_cost_function.h>}\par
42 {\cf21 #include <Eigen/Core>}\par
43 \par
44 {\cf17 namespace }base_local_planner \{\par
45 \par
46 {\cf17 class }OscillationCostFunction: {\cf17 public} base_local_planner::TrajectoryCostFunction \{\par
47 {\cf17 public}:\par
48   OscillationCostFunction();\par
49   {\cf17 virtual} ~OscillationCostFunction();\par
50 \par
51   {\cf18 double} scoreTrajectory(Trajectory &traj);\par
52 \par
53   {\cf18 bool} prepare() \{{\cf19 return} {\cf17 true};\};\par
54 \par
58   {\cf18 void} resetOscillationFlags();\par
59 \par
60 \par
61   {\cf18 void} updateOscillationFlags(Eigen::Vector3f pos, base_local_planner::Trajectory* traj, {\cf18 double} min_vel_trans);\par
62 \par
63   {\cf18 void} setOscillationResetDist({\cf18 double} dist, {\cf18 double} angle);\par
64 \par
65 {\cf17 private}:\par
66 \par
67   {\cf18 void} resetOscillationFlagsIfPossible({\cf17 const} Eigen::Vector3f& pos, {\cf17 const} Eigen::Vector3f& prev);\par
68 \par
75   {\cf18 bool} setOscillationFlags(base_local_planner::Trajectory* t, {\cf18 double} min_vel_trans);\par
76 \par
77   {\cf20 // flags}\par
78   {\cf18 bool} strafe_pos_only_, strafe_neg_only_, strafing_pos_, strafing_neg_;\par
79   {\cf18 bool} rot_pos_only_, rot_neg_only_, rotating_pos_, rotating_neg_;\par
80   {\cf18 bool} forward_pos_only_, forward_neg_only_, forward_pos_, forward_neg_;\par
81 \par
82   {\cf20 // param}\par
83   {\cf18 double} oscillation_reset_dist_, oscillation_reset_angle_;\par
84 \par
85   Eigen::Vector3f prev_stationary_pos_;\par
86 \};\par
87 \par
88 \} {\cf20 /* namespace base_local_planner */}\par
89 {\cf21 #endif }{\cf20 /* OSCILLATION_COST_FUNCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/planar_laser_scan.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/planar_laser_scan.h}
{\xe \v base_local_planner/include/base_local_planner/planar_laser_scan.h}
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <geometry_msgs/Point32.h>}\par
{\f2 #include <sensor_msgs/PointCloud.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid planar_laser_scan.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "planar__laser__scan_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "planar__laser__scan_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::PlanarLaserScan}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores a scan from a planar laser that can be used to clear freespace }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
planar_laser_scan.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/planar_laser_scan.h}
{\xe \v base_local_planner/include/base_local_planner/planar_laser_scan.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef TRAJECTORY_ROLLOUT_PLANAR_LASER_SCAN_H_}\par
38 {\cf21 #define TRAJECTORY_ROLLOUT_PLANAR_LASER_SCAN_H_}\par
39 \par
40 {\cf21 #include <geometry_msgs/Point32.h>}\par
41 {\cf21 #include <sensor_msgs/PointCloud.h>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
48   {\cf17 class }PlanarLaserScan \{\par
49     {\cf17 public}:\par
50       PlanarLaserScan() \{\}\par
51       geometry_msgs::Point32 origin;\par
52       sensor_msgs::PointCloud cloud;\par
53       {\cf18 double} angle_min, angle_max, angle_increment;\par
54   \};\par
55 \};\par
56 \par
57 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/point_grid.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/point_grid.h}
{\xe \v base_local_planner/include/base_local_planner/point_grid.h}
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <cfloat>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <costmap_2d/observation.h>}\par
{\f2 #include <base_local_planner/world_model.h>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid point_grid.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::PointGrid}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6WorldModel\'BD\'D3\'BF\'DA\'B5\'C4\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D7\'D4\'D3\'C9\'BF\'D5\'BC\'E4\'B5\'C4\'C5\'F6\'D7\'B2\'BC\'EC\'B2\'E2\'A3\'AC \'B8\'C3\'C0\'E0\'B4\'E6\'B4\'A2\'CD\'F8\'B8\'F1\'B5\'C4\'B5\'E3\'B2\'A2\'C7\'D2\'BC\'EC\'B2\'E9\'B6\'E0\'B1\'DF\'D0\'CE\'D6\'D0\'B5\'C4\'B5\'E3\'CA\'C7\'B7\'F1\'C5\'F6\'D7\'B2(\'CD\'A8\'B9\'FD\'B0\'D1\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4footprint\'D3\'B3\'C9\'E4\'B5\'BD\'B8\'F8\'B6\'A8\'B5\'C4\'CE\'BB\'D7\'CB\'A3\'AC\'BF\'B4\'D3\'D0\'C3\'BB\'D3\'D0\'BA\'CD\'D5\'CF\'B0\'AD\'CE\'EF\'D6\'D8\'BA\'CF) }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
point_grid.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/point_grid.h}
{\xe \v base_local_planner/include/base_local_planner/point_grid.h}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef POINT_GRID_H_}\par
38 {\cf21 #define POINT_GRID_H_}\par
39 {\cf21 #include <vector>}\par
40 {\cf21 #include <list>}\par
41 {\cf21 #include <cfloat>}\par
42 {\cf21 #include <geometry_msgs/Point.h>}\par
43 {\cf21 #include <costmap_2d/observation.h>}\par
44 {\cf21 #include <base_local_planner/world_model.h>}\par
45 \par
46 {\cf21 #include <sensor_msgs/PointCloud2.h>}\par
47 \par
48 {\cf17 namespace }base_local_planner \{\par
54   {\cf17 class }PointGrid : {\cf17 public} WorldModel \{\par
55     {\cf17 public}:\par
66       PointGrid({\cf18 double} width, {\cf18 double} height, {\cf18 double} resolution, geometry_msgs::Point origin,\par
67           {\cf18 double} max_z, {\cf18 double} obstacle_range, {\cf18 double} min_separation);\par
68 \par
72       {\cf17 virtual} ~PointGrid()\{\}\par
73 \par
80       {\cf18 void} getPointsInRange({\cf17 const} geometry_msgs::Point& lower_left, {\cf17 const} geometry_msgs::Point& upper_right, std::vector< std::list<geometry_msgs::Point32>* >& points);\par
81 \par
90       {\cf17 virtual} {\cf18 double} footprintCost({\cf17 const} geometry_msgs::Point& position, {\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
91           {\cf18 double} inscribed_radius, {\cf18 double} circumscribed_radius);\par
92 \par
93       {\cf17 using} WorldModel::footprintCost;\par
94 \par
101       {\cf18 void} updateWorld({\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
102           {\cf17 const} std::vector<costmap_2d::Observation>& observations, {\cf17 const} std::vector<PlanarLaserScan>& laser_scans);\par
103 \par
111       {\cf17 inline} {\cf18 bool} gridCoords(geometry_msgs::Point pt, {\cf18 unsigned} {\cf18 int}& gx, {\cf18 unsigned} {\cf18 int}& gy){\cf17  const }\{\par
112         {\cf19 if}(pt.x < origin_.x || pt.y < origin_.y)\{\par
113           gx = 0;\par
114           gy = 0;\par
115           {\cf19 return} {\cf17 false};\par
116         \}\par
117         gx = (int) ((pt.x - origin_.x)/resolution_);\par
118         gy = (int) ((pt.y - origin_.y)/resolution_);\par
119 \par
120         {\cf19 if}(gx >= width_ || gy >= height_)\{\par
121           gx = 0;\par
122           gy = 0;\par
123           {\cf19 return} {\cf17 false};\par
124         \}\par
125 \par
126         {\cf19 return} {\cf17 true};\par
127       \}\par
128 \par
136       {\cf17 inline} {\cf18 void} getCellBounds({\cf18 unsigned} {\cf18 int} gx, {\cf18 unsigned} {\cf18 int} gy, geometry_msgs::Point& lower_left, geometry_msgs::Point& upper_right){\cf17  const }\{\par
137         lower_left.x = gx * resolution_ + origin_.x;\par
138         lower_left.y = gy * resolution_ + origin_.y;\par
139 \par
140         upper_right.x = lower_left.x + resolution_;\par
141         upper_right.y = lower_left.y + resolution_;\par
142       \}\par
143 \par
144 \par
151       {\cf17 inline} {\cf18 double} sq_distance({\cf17 const} geometry_msgs::Point32& pt1, {\cf17 const} geometry_msgs::Point32& pt2)\{\par
152         {\cf19 return} (pt1.x - pt2.x) * (pt1.x - pt2.x) + (pt1.y - pt2.y) * (pt1.y - pt2.y);\par
153       \}\par
154 \par
162       {\cf17 inline} {\cf18 bool} gridCoords({\cf17 const} geometry_msgs::Point32& pt, {\cf18 unsigned} {\cf18 int}& gx, {\cf18 unsigned} {\cf18 int}& gy){\cf17  const }\{\par
163         {\cf19 if}(pt.x < origin_.x || pt.y < origin_.y)\{\par
164           gx = 0;\par
165           gy = 0;\par
166           {\cf19 return} {\cf17 false};\par
167         \}\par
168         gx = (int) ((pt.x - origin_.x)/resolution_);\par
169         gy = (int) ((pt.y - origin_.y)/resolution_);\par
170 \par
171         {\cf19 if}(gx >= width_ || gy >= height_)\{\par
172           gx = 0;\par
173           gy = 0;\par
174           {\cf19 return} {\cf17 false};\par
175         \}\par
176 \par
177         {\cf19 return} {\cf17 true};\par
178       \}\par
179 \par
186       {\cf17 inline} {\cf18 unsigned} {\cf18 int} gridIndex({\cf18 unsigned} {\cf18 int} gx, {\cf18 unsigned} {\cf18 int} gy){\cf17  const }\{\par
187         {\cf20 /*}\par
188 {\cf20          * (0, 0) ---------------------- (width, 0)}\par
189 {\cf20          *  |                               |}\par
190 {\cf20          *  |                               |}\par
191 {\cf20          *  |                               |}\par
192 {\cf20          *  |                               |}\par
193 {\cf20          *  |                               |}\par
194 {\cf20          * (0, height) ----------------- (width, height)}\par
195 {\cf20          */}\par
196         {\cf19 return}(gx + gy * width_);\par
197       \}\par
198 \par
206       {\cf17 inline} {\cf18 double} orient({\cf17 const} geometry_msgs::Point& a, {\cf17 const} geometry_msgs::Point& b, {\cf17 const} geometry_msgs::Point32& c)\{\par
207         {\cf18 double} acx = a.x - c.x;\par
208         {\cf18 double} bcx = b.x - c.x;\par
209         {\cf18 double} acy = a.y - c.y;\par
210         {\cf18 double} bcy = b.y - c.y;\par
211         {\cf19 return} acx * bcy - acy * bcx;\par
212       \}\par
213 \par
221       {\cf17 template}<{\cf17 typename} T>\par
222       {\cf17 inline} {\cf18 double} orient({\cf17 const} T& a, {\cf17 const} T& b, {\cf17 const} T& c)\{\par
223         {\cf18 double} acx = a.x - c.x;\par
224         {\cf18 double} bcx = b.x - c.x;\par
225         {\cf18 double} acy = a.y - c.y;\par
226         {\cf18 double} bcy = b.y - c.y;\par
227         {\cf19 return} acx * bcy - acy * bcx;\par
228       \}\par
229 \par
238       {\cf17 inline} {\cf18 bool} segIntersect({\cf17 const} geometry_msgs::Point32& v1, {\cf17 const} geometry_msgs::Point32& v2,\par
239           {\cf17 const} geometry_msgs::Point32& u1, {\cf17 const} geometry_msgs::Point32& u2)\{\par
240         {\cf19 return} (orient(v1, v2, u1) * orient(v1, v2, u2) < 0) && (orient(u1, u2, v1) * orient(u1, u2, v2) < 0);\par
241       \}\par
242 \par
251       {\cf18 void} intersectionPoint({\cf17 const} geometry_msgs::Point& v1, {\cf17 const} geometry_msgs::Point& v2,\par
252           {\cf17 const} geometry_msgs::Point& u1, {\cf17 const} geometry_msgs::Point& u2,\par
253           geometry_msgs::Point& result);\par
254 \par
261       {\cf18 bool} ptInPolygon({\cf17 const} geometry_msgs::Point32& pt, {\cf17 const} std::vector<geometry_msgs::Point>& poly);\par
262 \par
267       {\cf18 void} insert({\cf17 const} geometry_msgs::Point32& pt);\par
268 \par
274       {\cf18 double} nearestNeighborDistance({\cf17 const} geometry_msgs::Point32& pt);\par
275 \par
283       {\cf18 double} getNearestInCell({\cf17 const} geometry_msgs::Point32& pt, {\cf18 unsigned} {\cf18 int} gx, {\cf18 unsigned} {\cf18 int} gy);\par
284 \par
289       {\cf18 void} removePointsInPolygon({\cf17 const} std::vector<geometry_msgs::Point> poly);\par
290 \par
295       {\cf18 void} removePointsInScanBoundry({\cf17 const} PlanarLaserScan& laser_scan);\par
296 \par
303       {\cf18 bool} ptInScan({\cf17 const} geometry_msgs::Point32& pt, {\cf17 const} PlanarLaserScan& laser_scan);\par
304 \par
309       {\cf18 void} getPoints(sensor_msgs::PointCloud2& cloud);\par
310 \par
311     {\cf17 private}:\par
312       {\cf18 double} resolution_; \par
313       geometry_msgs::Point origin_; \par
314       {\cf18 unsigned} {\cf18 int} width_; \par
315       {\cf18 unsigned} {\cf18 int} height_; \par
316       std::vector< std::list<geometry_msgs::Point32> > cells_; \par
317       {\cf18 double} max_z_;  \par
318       {\cf18 double} sq_obstacle_range_;  \par
319       {\cf18 double} sq_min_separation_;  \par
320       std::vector< std::list<geometry_msgs::Point32>* > points_;  \par
321   \};\par
322 \};\par
323 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/prefer_forward_cost_function.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/prefer_forward_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/prefer_forward_cost_function.h}
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_cost_function.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid prefer_forward_cost_function.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prefer__forward__cost__function_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prefer__forward__cost__function_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::PreferForwardCostFunction}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
prefer_forward_cost_function.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/prefer_forward_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/prefer_forward_cost_function.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef PREFER_FORWARD_COST_FUNCTION_H_}\par
39 {\cf21 #define PREFER_FORWARD_COST_FUNCTION_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory_cost_function.h>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
44 \par
45 {\cf17 class }PreferForwardCostFunction: {\cf17 public} base_local_planner::TrajectoryCostFunction \{\par
46 {\cf17 public}:\par
47 \par
48   PreferForwardCostFunction({\cf18 double} penalty) : penalty_(penalty) \{\}\par
49   ~PreferForwardCostFunction() \{\}\par
50 \par
51   {\cf18 double} scoreTrajectory(Trajectory &traj);\par
52 \par
53   {\cf18 bool} prepare() \{{\cf19 return} {\cf17 true};\};\par
54 \par
55   {\cf18 void} setPenalty({\cf18 double} penalty) \{\par
56     penalty_ = penalty;\par
57   \}\par
58 \par
59 {\cf17 private}:\par
60   {\cf18 double} penalty_;\par
61 \};\par
62 \par
63 \} {\cf20 /* namespace base_local_planner */}\par
64 {\cf21 #endif }{\cf20 /* PREFER_FORWARD_COST_FUNCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/simple_scored_sampling_planner.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/simple_scored_sampling_planner.h}
{\xe \v base_local_planner/include/base_local_planner/simple_scored_sampling_planner.h}
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <base_local_planner/trajectory.h>}\par
{\f2 #include <base_local_planner/trajectory_cost_function.h>}\par
{\f2 #include <base_local_planner/trajectory_sample_generator.h>}\par
{\f2 #include <base_local_planner/trajectory_search.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid simple_scored_sampling_planner.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "simple__scored__sampling__planner_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "simple__scored__sampling__planner_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::SimpleScoredSamplingPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'F9\'BE\'DD\'B8\'F8\'B6\'A8\'B5\'C4\'B2\'FA\'C9\'FA\'C6\'F7\'BA\'CD\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD\'BC\'C6\'CB\'E3\'D2\'BB\'B8\'F6\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3.\'D5\'E2\'C0\'EF\'BC\'D9\'C9\'E8\'B4\'FA\'BC\'DB\'D4\'BD\'D0\'A1\'D4\'BD\'BA\'C3\'CD\'AC\'CA\'B1\'B8\'BA\'D6\'B5\'B5\'C4\'B4\'FA\'BC\'DB\'D2\'E2\'CE\'B6\'D7\'C5\'CE\'DE\'C7\'EE\'B4\'F3 }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
simple_scored_sampling_planner.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/simple_scored_sampling_planner.h}
{\xe \v base_local_planner/include/base_local_planner/simple_scored_sampling_planner.h}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef SIMPLE_SCORED_SAMPLING_PLANNER_H_}\par
39 {\cf21 #define SIMPLE_SCORED_SAMPLING_PLANNER_H_}\par
40 \par
41 {\cf21 #include <vector>}\par
42 {\cf21 #include <base_local_planner/trajectory.h>}\par
43 {\cf21 #include <base_local_planner/trajectory_cost_function.h>}\par
44 {\cf21 #include <base_local_planner/trajectory_sample_generator.h>}\par
45 {\cf21 #include <base_local_planner/trajectory_search.h>}\par
46 \par
47 {\cf17 namespace }base_local_planner \{\par
48 \par
55 {\cf17 class }SimpleScoredSamplingPlanner : {\cf17 public} base_local_planner::TrajectorySearch \{\par
56 {\cf17 public}:\par
57 \par
58   ~SimpleScoredSamplingPlanner() \{\}\par
59 \par
60   SimpleScoredSamplingPlanner() \{\}\par
61 \par
76   SimpleScoredSamplingPlanner(std::vector<TrajectorySampleGenerator*> gen_list, std::vector<TrajectoryCostFunction*>& critics, {\cf18 int} max_samples = -1);\par
77 \par
83   {\cf18 double} scoreTrajectory(Trajectory& traj, {\cf18 double} best_traj_cost);\par
84 \par
96   {\cf18 bool} findBestTrajectory(Trajectory& traj, std::vector<Trajectory>* all_explored = 0);\par
97 \par
98 \par
99 {\cf17 private}:\par
100   std::vector<TrajectorySampleGenerator*> gen_list_;\par
101   std::vector<TrajectoryCostFunction*> critics_;\par
102 \par
103   {\cf18 int} max_samples_;\par
104 \};\par
105 \par
106 \par
107 \par
108 \par
109 \} {\cf20 // namespace}\par
110 \par
111 {\cf21 #endif }{\cf20 /* SIMPLE_SCORED_SAMPLING_PLANNER_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/simple_trajectory_generator.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/simple_trajectory_generator.h}
{\xe \v base_local_planner/include/base_local_planner/simple_trajectory_generator.h}
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_sample_generator.h>}\par
{\f2 #include <base_local_planner/local_planner_limits.h>}\par
{\f2 #include <Eigen/Core>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid simple_trajectory_generator.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "simple__trajectory__generator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "simple__trajectory__generator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::SimpleTrajectoryGenerator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
simple_trajectory_generator.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/simple_trajectory_generator.h}
{\xe \v base_local_planner/include/base_local_planner/simple_trajectory_generator.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef SIMPLE_TRAJECTORY_GENERATOR_H_}\par
39 {\cf21 #define SIMPLE_TRAJECTORY_GENERATOR_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory_sample_generator.h>}\par
42 {\cf21 #include <base_local_planner/local_planner_limits.h>}\par
43 {\cf21 #include <Eigen/Core>}\par
44 \par
45 {\cf17 namespace }base_local_planner \{\par
46 \par
61 {\cf17 class }SimpleTrajectoryGenerator: {\cf17 public} base_local_planner::TrajectorySampleGenerator \{\par
62 {\cf17 public}:\par
63 \par
64   SimpleTrajectoryGenerator() \{\par
65     limits_ = NULL;\par
66   \}\par
67 \par
68   ~SimpleTrajectoryGenerator() \{\}\par
69 \par
79   {\cf18 void} initialise(\par
80       {\cf17 const} Eigen::Vector3f& pos,\par
81       {\cf17 const} Eigen::Vector3f& vel,\par
82       {\cf17 const} Eigen::Vector3f& goal,\par
83       base_local_planner::LocalPlannerLimits* limits,\par
84       {\cf17 const} Eigen::Vector3f& vsamples,\par
85       std::vector<Eigen::Vector3f> additional_samples,\par
86       {\cf18 bool} discretize_by_time = {\cf17 false});\par
87 \par
98   {\cf18 void} initialise(\par
99       {\cf17 const} Eigen::Vector3f& pos,\par
100       {\cf17 const} Eigen::Vector3f& vel,\par
101       {\cf17 const} Eigen::Vector3f& goal,\par
102       base_local_planner::LocalPlannerLimits* limits,\par
103       {\cf17 const} Eigen::Vector3f& vsamples,\par
104       {\cf18 bool} discretize_by_time = {\cf17 false});\par
105 \par
114   {\cf18 void} setParameters({\cf18 double} sim_time,\par
115       {\cf18 double} sim_granularity,\par
116       {\cf18 double} angular_sim_granularity,\par
117       {\cf18 bool} use_dwa = {\cf17 false},    {\cf20 // \'C4\'AC\'C8\'CF\'CA\'B9\'D3\'C3trajectory rollout}\par
118       {\cf18 double} sim_period = 0.0);\par
119 \par
123   {\cf18 bool} hasMoreTrajectories();\par
124 \par
128   {\cf18 bool} nextTrajectory(Trajectory &traj);\par
129 \par
130 \par
131   {\cf17 static} Eigen::Vector3f computeNewPositions({\cf17 const} Eigen::Vector3f& pos,\par
132       {\cf17 const} Eigen::Vector3f& vel, {\cf18 double} dt);\par
133 \par
134   {\cf17 static} Eigen::Vector3f computeNewVelocities({\cf17 const} Eigen::Vector3f& sample_target_vel,\par
135       {\cf17 const} Eigen::Vector3f& vel, Eigen::Vector3f acclimits, {\cf18 double} dt);\par
136 \par
137   {\cf18 bool} generateTrajectory(\par
138         Eigen::Vector3f pos,\par
139         Eigen::Vector3f vel,\par
140         Eigen::Vector3f sample_target_vel,\par
141         base_local_planner::Trajectory& traj);\par
142 \par
143 {\cf17 protected}:\par
144 \par
145   {\cf18 unsigned} {\cf18 int} next_sample_index_;\par
146   {\cf20 // to store sample params of each sample between init and generation}\par
147   {\cf20 // \'B4\'E6\'B4\'A2\'B3\'F5\'CA\'BC\'BB\'AF\'BA\'CD\'B2\'FA\'C9\'FA\'B9\'FD\'B3\'CC\'D6\'D0\'D1\'F9\'B1\'BE\'B5\'C4\'B2\'CE\'CA\'FD\'A3\'BF}\par
148   std::vector<Eigen::Vector3f> sample_params_;\par
149   base_local_planner::LocalPlannerLimits* limits_;\par
150   Eigen::Vector3f pos_;\par
151   Eigen::Vector3f vel_;\par
152 \par
153   {\cf20 // \'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'CB\'D9\'B6\'C8\'CA\'C7\'B7\'F1\'CB\'E6\'D7\'C5\'CA\'B1\'BC\'E4\'B1\'E4\'BB\'AF}\par
154   {\cf18 bool} continued_acceleration_;\par
155   {\cf18 bool} discretize_by_time_;\par
156 \par
157   {\cf18 double} sim_time_, sim_granularity_, angular_sim_granularity_;\par
158   {\cf18 bool} use_dwa_;\par
159   {\cf18 double} sim_period_; {\cf20 // \'B8\'C3\'B2\'CE\'CA\'FD\'D6\'BB\'D5\'EB\'B6\'D4DWA}\par
160 \};\par
161 \par
162 \} {\cf20 /* namespace base_local_planner */}\par
163 {\cf21 #endif }{\cf20 /* SIMPLE_TRAJECTORY_GENERATOR_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory.h}
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::Trajectory}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Holds a trajectory generated by considering an x, y, and theta velocity }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory.h}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  * Software License Agreement (BSD License)}\par
3 {\cf20  *}\par
4 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
5 {\cf20  *  All rights reserved.}\par
6 {\cf20  *}\par
7 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20  *  modification, are permitted provided that the following conditions}\par
9 {\cf20  *  are met:}\par
10 {\cf20  *}\par
11 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20  *     copyright notice, this list of conditions and the following}\par
15 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20  *     with the distribution.}\par
17 {\cf20  *   * Neither the name of the Willow Garage nor the names of its}\par
18 {\cf20  *     contributors may be used to endorse or promote products derived}\par
19 {\cf20  *     from this software without specific prior written permission.}\par
20 {\cf20  *}\par
21 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20  *********************************************************************/}\par
34 {\cf21 #ifndef TRAJECTORY_ROLLOUT_TRAJECTORY_H_}\par
35 {\cf21 #define TRAJECTORY_ROLLOUT_TRAJECTORY_H_}\par
36 \par
37 {\cf21 #include <vector>}\par
38 \par
39 {\cf17 namespace }base_local_planner \{\par
44   {\cf17 class }Trajectory \{\par
45     {\cf17 public}:\par
49       Trajectory();\par
50 \par
58       Trajectory({\cf18 double} xv, {\cf18 double} yv, {\cf18 double} thetav, {\cf18 double} time_delta, {\cf18 unsigned} {\cf18 int} num_pts);\par
59 \par
60       {\cf18 double} xv_, yv_, thetav_; \par
61 \par
62       {\cf18 double} cost_; \par
63 \par
64       {\cf18 double} time_delta_; \par
65 \par
73       {\cf18 void} getPoint({\cf18 unsigned} {\cf18 int} index, {\cf18 double}& x, {\cf18 double}& y, {\cf18 double}& th) {\cf17 const};\par
74 \par
82       {\cf18 void} setPoint({\cf18 unsigned} {\cf18 int} index, {\cf18 double} x, {\cf18 double} y, {\cf18 double} th);\par
83 \par
90       {\cf18 void} addPoint({\cf18 double} x, {\cf18 double} y, {\cf18 double} th);\par
91 \par
98       {\cf18 void} getEndpoint({\cf18 double}& x, {\cf18 double}& y, {\cf18 double}& th) {\cf17 const};\par
99 \par
103       {\cf18 void} resetPoints();\par
104 \par
109       {\cf18 unsigned} {\cf18 int} getPointsSize() {\cf17 const};\par
110 \par
111     {\cf17 private}:\par
112       std::vector<double> x_pts_; \par
113       std::vector<double> y_pts_; \par
114       std::vector<double> th_pts_; \par
115 \par
116   \};\par
117 \};\par
118 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory_cost_function.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_cost_function.h}
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_cost_function.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__cost__function_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__cost__function_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectoryCostFunction}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for critics of trajectories During each sampling run, a batch of many trajectories will be scored using such a cost function. The prepare method is called before each batch run, and then for each trajectory of the sampling set, score_trajectory may be called. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory_cost_function.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_cost_function.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef TRAJECTORYCOSTFUNCTION_H_}\par
39 {\cf21 #define TRAJECTORYCOSTFUNCTION_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory.h>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
44 \par
52 {\cf17 class }TrajectoryCostFunction \{\par
53 {\cf17 public}:\par
54 \par
60   {\cf17 virtual} {\cf18 bool} prepare() = 0;\par
61 \par
65   {\cf17 virtual} {\cf18 double} scoreTrajectory(Trajectory &traj) = 0;\par
66 \par
67   {\cf18 double} getScale() \{\par
68     {\cf19 return} scale_;\par
69   \}\par
70 \par
71   {\cf18 void} setScale({\cf18 double} scale) \{\par
72     scale_ = scale;\par
73   \}\par
74 \par
75   {\cf17 virtual} ~TrajectoryCostFunction() \{\}\par
76 \par
77 {\cf17 protected}:\par
78   TrajectoryCostFunction({\cf18 double} scale = 1.0): scale_(scale) \{\}\par
79 \par
80 {\cf17 private}:\par
81   {\cf18 double} scale_;\par
82 \};\par
83 \par
84 \}\par
85 \par
86 {\cf21 #endif }{\cf20 /* TRAJECTORYCOSTFUNCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory_inc.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_inc.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_inc.h}
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <limits>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_inc.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__inc_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__inc_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DBL_MAX}\~ std::numeric_limits<double>::max()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DBL_MIN}\~ std::numeric_limits<double>::min()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v DBL_MAX\:trajectory_inc.h}
{\xe \v trajectory_inc.h\:DBL_MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DBL_MAX\~ std::numeric_limits<double>::max()}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DBL_MIN\:trajectory_inc.h}
{\xe \v trajectory_inc.h\:DBL_MIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DBL_MIN\~ std::numeric_limits<double>::min()}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory_inc.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_inc.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_inc.h}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  * Software License Agreement (BSD License)}\par
3 {\cf20  *}\par
4 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
5 {\cf20  *  All rights reserved.}\par
6 {\cf20  *}\par
7 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20  *  modification, are permitted provided that the following conditions}\par
9 {\cf20  *  are met:}\par
10 {\cf20  *}\par
11 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20  *     copyright notice, this list of conditions and the following}\par
15 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20  *     with the distribution.}\par
17 {\cf20  *   * Neither the name of the Willow Garage nor the names of its}\par
18 {\cf20  *     contributors may be used to endorse or promote products derived}\par
19 {\cf20  *     from this software without specific prior written permission.}\par
20 {\cf20  *}\par
21 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20  *********************************************************************/}\par
34 {\cf21 #ifndef TRAJECTORY_INC_H_}\par
35 {\cf21 #define TRAJECTORY_INC_H_}\par
36 \par
37 {\cf21 #include <limits>}\par
38 \par
39 {\cf21 #ifndef DBL_MAX   }{\cf20 /* Max decimal value of a double */}{\cf21 }\par
40 {\cf21 #define DBL_MAX   std::numeric_limits<double>::max()  }{\cf20 // 1.7976931348623157e+308}\par
41 {\cf21 #endif}\par
42 \par
43 {\cf21 #ifndef DBL_MIN }{\cf20 //Min decimal value of a double}\par
44 {\cf21 #define DBL_MIN   std::numeric_limits<double>::min()  }{\cf20 // 2.2250738585072014e-308}\par
45 {\cf21 #endif}\par
46 \par
47 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory_planner.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_planner.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_planner.h}
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <cmath>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
{\f2 #include <base_local_planner/footprint_helper.h>}\par
{\f2 #include <base_local_planner/world_model.h>}\par
{\f2 #include <base_local_planner/trajectory.h>}\par
{\f2 #include <base_local_planner/Position2DInt.h>}\par
{\f2 #include <base_local_planner/BaseLocalPlannerConfig.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <base_local_planner/map_cell.h>}\par
{\f2 #include <base_local_planner/map_grid.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_planner.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__planner_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__planner_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectoryPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B8\'C3\'C0\'E0\'B4\'D3\'B8\'F8\'B6\'A8\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'C2\'B7\'BE\'B6\'BA\'CD\'BB\'FA\'C6\'F7\'C8\'CB\'CE\'BB\'D6\'C3\'BC\'C6\'CB\'E3\'CF\'C2\'B7\'A2\'CB\'D9\'B6\'C8 }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory_planner.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_planner.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_planner.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef TRAJECTORY_ROLLOUT_TRAJECTORY_PLANNER_H_}\par
38 {\cf21 #define TRAJECTORY_ROLLOUT_TRAJECTORY_PLANNER_H_}\par
39 \par
40 {\cf21 #include <vector>}\par
41 {\cf21 #include <cmath>}\par
42 \par
43 {\cf20 //for obstacle data access}\par
44 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
45 {\cf21 #include <costmap_2d/cost_values.h>}\par
46 {\cf21 #include <base_local_planner/footprint_helper.h>}\par
47 \par
48 {\cf21 #include <base_local_planner/world_model.h>}\par
49 {\cf21 #include <base_local_planner/trajectory.h>}\par
50 {\cf21 #include <base_local_planner/Position2DInt.h>}\par
51 {\cf21 #include <base_local_planner/BaseLocalPlannerConfig.h>}\par
52 \par
53 {\cf20 //we'll take in a path as a vector of poses}\par
54 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
55 {\cf21 #include <geometry_msgs/Point.h>}\par
56 \par
57 {\cf20 //for creating a local cost grid}\par
58 {\cf21 #include <base_local_planner/map_cell.h>}\par
59 {\cf21 #include <base_local_planner/map_grid.h>}\par
60 \par
61 {\cf17 namespace }base_local_planner \{\par
66   {\cf17 class }TrajectoryPlanner\{\par
67     {\cf17 friend} {\cf17 class }TrajectoryPlannerTest; {\cf20 // \'D3\'C3\'D3\'DAgtest\'B2\'E2\'CA\'D4}\par
68     {\cf17 public}:\par
105       TrajectoryPlanner(WorldModel& world_model,\par
106           {\cf17 const} costmap_2d::Costmap2D& costmap,\par
107           std::vector<geometry_msgs::Point> footprint_spec,\par
108           {\cf18 double} acc_lim_x = 1.0, {\cf18 double} acc_lim_y = 1.0, {\cf18 double} acc_lim_theta = 1.0,\par
109           {\cf18 double} sim_time = 1.0, {\cf18 double} sim_granularity = 0.025,\par
110           {\cf18 int} vx_samples = 20, {\cf18 int} vtheta_samples = 20,\par
111           {\cf18 double} path_distance_bias = 0.6, {\cf18 double} goal_distance_bias = 0.8, {\cf18 double} occdist_scale = 0.2,\par
112           {\cf18 double} heading_lookahead = 0.325, {\cf18 double} oscillation_reset_dist = 0.05,\par
113           {\cf18 double} escape_reset_dist = 0.10, {\cf18 double} escape_reset_theta = M_PI_2,\par
114           {\cf18 bool} holonomic_robot = {\cf17 true},\par
115           {\cf18 double} max_vel_x = 0.5, {\cf18 double} min_vel_x = 0.1,\par
116           {\cf18 double} max_vel_th = 1.0, {\cf18 double} min_vel_th = -1.0, {\cf18 double} min_in_place_vel_th = 0.4,\par
117           {\cf18 double} backup_vel = -0.1,\par
118           {\cf18 bool} dwa = {\cf17 false}, {\cf18 bool} heading_scoring = {\cf17 false}, {\cf18 double} heading_scoring_timestep = 0.1,\par
119           {\cf18 bool} meter_scoring = {\cf17 true},\par
120           {\cf18 bool} simple_attractor = {\cf17 false},\par
121           std::vector<double> y_vels = std::vector<double>(0),\par
122           {\cf18 double} stop_time_buffer = 0.2,\par
123           {\cf18 double} sim_period = 0.1, {\cf18 double} angular_sim_granularity = 0.025);\par
124 \par
128       ~TrajectoryPlanner();\par
129 \par
133       {\cf18 void} reconfigure(BaseLocalPlannerConfig &cfg);\par
134 \par
142       Trajectory findBestPath({\cf17 const} geometry_msgs::PoseStamped& global_pose,\par
143                               geometry_msgs::PoseStamped& global_vel, geometry_msgs::PoseStamped& drive_velocities);\par
144 \par
150       {\cf18 void} updatePlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& new_plan, {\cf18 bool} compute_dists = {\cf17 false});\par
151 \par
152       {\cf18 void} getLocalGoal({\cf18 double}& x, {\cf18 double}& y);\par
153 \par
167       {\cf18 bool} checkTrajectory({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf18 double} vx, {\cf18 double} vy,\par
168           {\cf18 double} vtheta, {\cf18 double} vx_samp, {\cf18 double} vy_samp, {\cf18 double} vtheta_samp);\par
169 \par
183       {\cf18 double} scoreTrajectory({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf18 double} vx, {\cf18 double} vy,\par
184           {\cf18 double} vtheta, {\cf18 double} vx_samp, {\cf18 double} vy_samp, {\cf18 double} vtheta_samp);\par
185 \par
196       {\cf18 bool} getCellCosts({\cf18 int} cx, {\cf18 int} cy, {\cf18 float} &path_cost, {\cf18 float} &goal_cost, {\cf18 float} &occ_cost, {\cf18 float} &total_cost);\par
197 \par
199       {\cf18 void} setFootprint( std::vector<geometry_msgs::Point> footprint ) \{ footprint_spec_ = footprint; \}\par
200 \par
202       geometry_msgs::Polygon getFootprintPolygon(){\cf17  const }\{ {\cf19 return} costmap_2d::toPolygon(footprint_spec_); \}\par
203       std::vector<geometry_msgs::Point> getFootprint(){\cf17  const }\{ {\cf19 return} footprint_spec_; \}\par
204 \par
205     {\cf17 private}:\par
219       Trajectory createTrajectories({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf18 double} vx, {\cf18 double} vy, {\cf18 double} vtheta,\par
220           {\cf18 double} acc_x, {\cf18 double} acc_y, {\cf18 double} acc_theta);\par
221 \par
239       {\cf18 void} generateTrajectory({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf18 double} vx, {\cf18 double} vy,\par
240           {\cf18 double} vtheta, {\cf18 double} vx_samp, {\cf18 double} vy_samp, {\cf18 double} vtheta_samp, {\cf18 double} acc_x, {\cf18 double} acc_y,\par
241           {\cf18 double} acc_theta, {\cf18 double} impossible_cost, Trajectory& traj);\par
242 \par
250       {\cf18 double} footprintCost({\cf18 double} x_i, {\cf18 double} y_i, {\cf18 double} theta_i);\par
251 \par
252       base_local_planner::FootprintHelper footprint_helper_;\par
253 \par
254       MapGrid path_map_; \par
255       MapGrid goal_map_; \par
256       {\cf17 const} costmap_2d::Costmap2D& costmap_; \par
257       WorldModel& world_model_; \par
258 \par
259       std::vector<geometry_msgs::Point> footprint_spec_; \par
260 \par
261       std::vector<geometry_msgs::PoseStamped> global_plan_; \par
262 \par
263       {\cf18 bool} stuck_left, stuck_right; \par
264       {\cf18 bool} rotating_left, rotating_right; \par
265 \par
266       {\cf18 bool} stuck_left_strafe, stuck_right_strafe; \par
267       {\cf18 bool} strafe_right, strafe_left; \par
268 \par
269       {\cf18 bool} escaping_; \par
270       {\cf18 bool} meter_scoring_;\par
271 \par
272       {\cf18 double} goal_x_,goal_y_; \par
273 \par
274       {\cf18 double} final_goal_x_, final_goal_y_; \par
275       {\cf18 bool} final_goal_position_valid_; \par
276 \par
277       {\cf18 double} sim_time_; \par
278       {\cf18 double} sim_granularity_; \par
279       {\cf18 double} angular_sim_granularity_; \par
280 \par
281       {\cf18 int} vx_samples_; \par
282       {\cf18 int} vtheta_samples_; \par
283 \par
284       {\cf18 double} path_distance_bias_, goal_distance_bias_, occdist_scale_; \par
285       {\cf18 double} acc_lim_x_, acc_lim_y_, acc_lim_theta_; \par
286 \par
287       {\cf18 double} prev_x_, prev_y_; \par
288       {\cf18 double} escape_x_, escape_y_, escape_theta_; \par
289 \par
290       Trajectory traj_one, traj_two; \par
291 \par
292       {\cf18 double} heading_lookahead_; \par
293       {\cf18 double} oscillation_reset_dist_; \par
294       {\cf18 double} escape_reset_dist_, escape_reset_theta_; \par
295       {\cf18 bool} holonomic_robot_; \par
296 \par
297       {\cf18 double} max_vel_x_, min_vel_x_, max_vel_th_, min_vel_th_, min_in_place_vel_th_; \par
298 \par
299       {\cf18 double} backup_vel_; \par
300 \par
301       {\cf18 bool} dwa_;  \par
302       {\cf18 bool} heading_scoring_; \par
303       {\cf18 double} heading_scoring_timestep_; \par
304       {\cf18 bool} simple_attractor_;  \par
305 \par
306       std::vector<double> y_vels_; \par
307 \par
308       {\cf18 double} stop_time_buffer_; \par
309       {\cf18 double} sim_period_; \par
310 \par
311       {\cf18 double} inscribed_radius_, circumscribed_radius_;\par
312 \par
313       boost::mutex configuration_mutex_;\par
314 \par
324       {\cf17 inline} {\cf18 double} computeNewXPosition({\cf18 double} xi, {\cf18 double} vx, {\cf18 double} vy, {\cf18 double} theta, {\cf18 double} dt)\{\par
325         {\cf19 return} xi + (vx * cos(theta) + vy * cos(M_PI_2 + theta)) * dt;\par
326       \}\par
327 \par
337       {\cf17 inline} {\cf18 double} computeNewYPosition({\cf18 double} yi, {\cf18 double} vx, {\cf18 double} vy, {\cf18 double} theta, {\cf18 double} dt)\{\par
338         {\cf19 return} yi + (vx * sin(theta) + vy * sin(M_PI_2 + theta)) * dt;\par
339       \}\par
340 \par
348       {\cf17 inline} {\cf18 double} computeNewThetaPosition({\cf18 double} thetai, {\cf18 double} vth, {\cf18 double} dt)\{\par
349         {\cf19 return} thetai + vth * dt;\par
350       \}\par
351 \par
352       {\cf20 //compute velocity based on acceleration}\par
361 {\cf20 }      {\cf17 inline} {\cf18 double} computeNewVelocity({\cf18 double} vg, {\cf18 double} vi, {\cf18 double} a_max, {\cf18 double} dt)\{\par
362         {\cf19 if}((vg - vi) >= 0) \{\par
363           {\cf19 return} std::min(vg, vi + a_max * dt);\par
364         \}\par
365         {\cf19 return} std::max(vg, vi - a_max * dt);\par
366       \}\par
367 \par
368       {\cf18 void} getMaxSpeedToStopInTime({\cf18 double} time, {\cf18 double}& vx, {\cf18 double}& vy, {\cf18 double}& vth)\{\par
369         vx = acc_lim_x_ * std::max(time, 0.0);\par
370         vy = acc_lim_y_ * std::max(time, 0.0);\par
371         vth = acc_lim_theta_ * std::max(time, 0.0);\par
372       \}\par
373 \par
374       {\cf18 double} lineCost({\cf18 int} x0, {\cf18 int} x1, {\cf18 int} y0, {\cf18 int} y1);\par
375       {\cf18 double} pointCost({\cf18 int} x, {\cf18 int} y);\par
376       {\cf18 double} headingDiff({\cf18 int} cell_x, {\cf18 int} cell_y, {\cf18 double} x, {\cf18 double} y, {\cf18 double} heading);\par
377   \};\par
378 \};\par
379 \par
380 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory_planner_ros.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_planner_ros.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_planner_ros.h}
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/costmap_2d_publisher.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <base_local_planner/world_model.h>}\par
{\f2 #include <base_local_planner/point_grid.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
{\f2 #include <base_local_planner/voxel_grid_model.h>}\par
{\f2 #include <base_local_planner/trajectory_planner.h>}\par
{\f2 #include <base_local_planner/map_grid_visualizer.h>}\par
{\f2 #include <base_local_planner/planar_laser_scan.h>}\par
{\f2 #include <nav_msgs/Odometry.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <geometry_msgs/Twist.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <string>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <nav_core/base_local_planner.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <base_local_planner/BaseLocalPlannerConfig.h>}\par
{\f2 #include <base_local_planner/odometry_helper_ros.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_planner_ros.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__planner__ros_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__planner__ros_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectoryPlannerROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for the trajectory controller that queries the param server to construct a controller }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory_planner_ros.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_planner_ros.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_planner_ros.h}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef TRAJECTORY_ROLLOUT_TRAJECTORY_PLANNER_ROS_H_}\par
38 {\cf21 #define TRAJECTORY_ROLLOUT_TRAJECTORY_PLANNER_ROS_H_}\par
39 \par
40 {\cf21 #include <ros/ros.h>}\par
41 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
42 {\cf21 #include <costmap_2d/costmap_2d_publisher.h>}\par
43 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
44 {\cf21 #include <base_local_planner/world_model.h>}\par
45 {\cf21 #include <base_local_planner/point_grid.h>}\par
46 {\cf21 #include <base_local_planner/costmap_model.h>}\par
47 {\cf21 #include <base_local_planner/voxel_grid_model.h>}\par
48 {\cf21 #include <base_local_planner/trajectory_planner.h>}\par
49 {\cf21 #include <base_local_planner/map_grid_visualizer.h>}\par
50 \par
51 {\cf21 #include <base_local_planner/planar_laser_scan.h>}\par
52 \par
53 {\cf21 #include <nav_msgs/Odometry.h>}\par
54 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
55 {\cf21 #include <geometry_msgs/Twist.h>}\par
56 {\cf21 #include <geometry_msgs/Point.h>}\par
57 \par
58 {\cf21 #include <tf2_ros/buffer.h>}\par
59 \par
60 {\cf21 #include <boost/thread.hpp>}\par
61 \par
62 {\cf21 #include <string>}\par
63 \par
64 {\cf21 #include <angles/angles.h>}\par
65 \par
66 {\cf21 #include <nav_core/base_local_planner.h>}\par
67 \par
68 {\cf21 #include <dynamic_reconfigure/server.h>}\par
69 {\cf21 #include <base_local_planner/BaseLocalPlannerConfig.h>}\par
70 \par
71 {\cf21 #include <base_local_planner/odometry_helper_ros.h>}\par
72 \par
73 {\cf17 namespace }base_local_planner \{\par
78   {\cf17 class }TrajectoryPlannerROS : {\cf17 public} nav_core::BaseLocalPlanner \{\par
79     {\cf17 public}:\par
83       TrajectoryPlannerROS();\par
84 \par
91       TrajectoryPlannerROS(std::string name,\par
92                            tf2_ros::Buffer* tf,\par
93                            costmap_2d::Costmap2DROS* costmap_ros);\par
94 \par
101       {\cf18 void} initialize(std::string name, tf2_ros::Buffer* tf,\par
102           costmap_2d::Costmap2DROS* costmap_ros);\par
103 \par
107       ~TrajectoryPlannerROS();\par
108 \par
114       {\cf18 bool} computeVelocityCommands(geometry_msgs::Twist& cmd_vel);\par
115 \par
121       {\cf18 bool} setPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& orig_global_plan);\par
122 \par
123       {\cf20 // \'C5\'D0\'B6\'CF\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3}\par
124       {\cf18 bool} isGoalReached();\par
125 \par
137       {\cf18 bool} checkTrajectory({\cf18 double} vx_samp, {\cf18 double} vy_samp, {\cf18 double} vtheta_samp, {\cf18 bool} update_map = {\cf17 true});\par
138 \par
150       {\cf18 double} scoreTrajectory({\cf18 double} vx_samp, {\cf18 double} vy_samp, {\cf18 double} vtheta_samp, {\cf18 bool} update_map = {\cf17 true});\par
151 \par
152       {\cf18 bool} isInitialized() \{\par
153         {\cf19 return} initialized_;\par
154       \}\par
155 \par
157       TrajectoryPlanner* getPlanner(){\cf17  const }\{ {\cf19 return} tc_; \}\par
158 \par
159     {\cf17 private}:\par
163       {\cf18 void} reconfigureCB(BaseLocalPlannerConfig &config, uint32_t level);\par
164 \par
173       {\cf18 bool} rotateToGoal({\cf17 const} geometry_msgs::PoseStamped& global_pose, {\cf17 const} geometry_msgs::PoseStamped& robot_vel, {\cf18 double} goal_th, geometry_msgs::Twist& cmd_vel);\par
174 \par
182       {\cf18 bool} stopWithAccLimits({\cf17 const} geometry_msgs::PoseStamped& global_pose, {\cf17 const} geometry_msgs::PoseStamped& robot_vel, geometry_msgs::Twist& cmd_vel);\par
183 \par
184       std::vector<double> loadYVels(ros::NodeHandle node);\par
185 \par
186       {\cf18 double} sign({\cf18 double} x)\{\par
187         {\cf19 return} x < 0.0 ? -1.0 : 1.0;\par
188       \}\par
189 \par
190       WorldModel* world_model_; {\cf20 // \'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D3\'C3\'B5\'BD\'B5\'C4\'CA\'C0\'BD\'E7\'C4\'A3\'D0\'CD}\par
191       TrajectoryPlanner* tc_; \par
192 \par
193       {\cf20 // \'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'CA\'B9\'D3\'C3\'B5\'C4\'B9\'D8\'D3\'DA\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B5\'C4ROS\'B7\'E2\'D7\'B0\'C0\'E0}\par
194       costmap_2d::Costmap2DROS* costmap_ros_;\par
195       {\cf20 // \'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'D3\'C3\'B5\'BD\'B5\'C4\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC}\par
196       costmap_2d::Costmap2D* costmap_;\par
197 \par
198       {\cf20 // \'B5\'D8\'CD\'BC\'CD\'F8\'B8\'F1\'BF\'C9\'CA\'D3\'BB\'AF\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'B2\'FA\'C9\'FA\'B5\'C4\'CA\'C6\'B3\'A1}\par
199       MapGridVisualizer map_viz_;\par
200       {\cf20 // \'D3\'C3\'D3\'DA\'B5\'E3\'D4\'C6\'D7\'AA\'BB\'BB}\par
201       tf2_ros::Buffer* tf_;\par
202       {\cf20 // \'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5}\par
203       std::string global_frame_;\par
204       {\cf20 // \'B4\'AB\'B8\'D0\'C6\'F7\'B5\'C4\'D3\'D0\'D0\'A7\'B8\'D0\'D6\'AA\'BE\'E0\'C0\'EB}\par
205       {\cf18 double} max_sensor_range_;\par
206       {\cf20 // \'D3\'C3\'D3\'DA\'B5\'C3\'B5\'BD\'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'CB\'D9\'B6\'C8}\par
207       nav_msgs::Odometry base_odom_;\par
208       {\cf20 // \'BB\'FA\'C6\'F7\'C8\'CB\'B5\'C4\'BB\'F9\'D7\'F8\'B1\'EA\'CF\'B5}\par
209       std::string robot_base_frame_;\par
210       {\cf18 double} rot_stopped_velocity_, trans_stopped_velocity_;\par
211       {\cf18 double} xy_goal_tolerance_, yaw_goal_tolerance_, min_in_place_vel_th_;\par
212       std::vector<geometry_msgs::PoseStamped> global_plan_;\par
213       {\cf18 bool} prune_plan_;\par
214       boost::recursive_mutex odom_lock_;\par
215 \par
216       {\cf18 double} max_vel_th_, min_vel_th_;\par
217       {\cf18 double} acc_lim_x_, acc_lim_y_, acc_lim_theta_;\par
218       {\cf18 double} sim_period_;\par
219       {\cf18 bool} rotating_to_goal_;\par
220       {\cf18 bool} reached_goal_;\par
221       {\cf18 bool} latch_xy_goal_tolerance_, xy_tolerance_latch_;\par
222 \par
223       ros::Publisher g_plan_pub_, l_plan_pub_;\par
224 \par
225       dynamic_reconfigure::Server<BaseLocalPlannerConfig> *dsrv_;\par
226       base_local_planner::BaseLocalPlannerConfig default_config_;\par
227       {\cf18 bool} setup_;\par
228 \par
229 \par
230       {\cf18 bool} initialized_;\par
231       base_local_planner::OdometryHelperRos odom_helper_;\par
232 \par
233       std::vector<geometry_msgs::Point> footprint_spec_;\par
234   \};\par
235 \};\par
236 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory_sample_generator.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_sample_generator.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_sample_generator.h}
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_sample_generator.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__sample__generator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__sample__generator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectorySampleGenerator}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides an interface for navigation trajectory generators }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory_sample_generator.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_sample_generator.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_sample_generator.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef TRAJECTORY_SAMPLE_GENERATOR_H_}\par
39 {\cf21 #define TRAJECTORY_SAMPLE_GENERATOR_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory.h>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
44 \par
49 {\cf17 class }TrajectorySampleGenerator \{\par
50 {\cf17 public}:\par
51 \par
55   {\cf17 virtual} {\cf18 bool} hasMoreTrajectories() = 0;\par
56 \par
60   {\cf17 virtual} {\cf18 bool} nextTrajectory(Trajectory &traj) = 0;\par
61 \par
65   {\cf17 virtual} ~TrajectorySampleGenerator() \{\}\par
66 \par
67 {\cf17 protected}:\par
68   TrajectorySampleGenerator() \{\}\par
69 \par
70 \};\par
71 \par
72 \} {\cf20 // end namespace}\par
73 \par
74 {\cf21 #endif }{\cf20 /* TRAJECTORY_SAMPLE_GENERATOR_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/trajectory_search.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_search.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_search.h}
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_search.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__search_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__search_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectorySearch}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'D7\'F7\'CE\'AA\'D2\'BB\'B8\'F6\'B4\'BF\'D0\'E9\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'D1\'B0\'D5\'D2\'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B5\'C4\'C4\'A3\'BF\'E9\'BD\'D3\'BF\'DA }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
trajectory_search.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/trajectory_search.h}
{\xe \v base_local_planner/include/base_local_planner/trajectory_search.h}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: TKruse}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef TRAJECTORY_SEARCH_H_}\par
39 {\cf21 #define TRAJECTORY_SEARCH_H_}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory.h>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
44 \par
49 {\cf20 // ?}\par
50 {\cf17 class }TrajectorySearch \{\par
51 {\cf17 public}:\par
57   {\cf17 virtual} {\cf18 bool} findBestTrajectory(Trajectory& traj, std::vector<Trajectory>* all_explored) = 0;\par
58 \par
59   {\cf17 virtual} ~TrajectorySearch() \{\}\par
60 \par
61 {\cf17 protected}:\par
62   TrajectorySearch() \{\}\par
63 \par
64 \};\par
65 \par
66 \par
67 \}\par
68 \par
69 {\cf21 #endif }{\cf20 /* TRAJECTORY_SEARCH_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/twirling_cost_function.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/twirling_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/twirling_cost_function.h}
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_cost_function.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid twirling_cost_function.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "twirling__cost__function_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "twirling__cost__function_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TwirlingCostFunction}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
twirling_cost_function.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/twirling_cost_function.h}
{\xe \v base_local_planner/include/base_local_planner/twirling_cost_function.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2017, Open Source Robotics Foundation, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Morgan Quigley}\par
36 {\cf20  *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef TWIRLING_COST_FUNCTION_H}\par
39 {\cf21 #define TWIRLING_COST_FUNCTION_H}\par
40 \par
41 {\cf21 #include <base_local_planner/trajectory_cost_function.h>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
44 \par
52 {\cf17 class }TwirlingCostFunction: {\cf17 public} base_local_planner::TrajectoryCostFunction \{\par
53 {\cf17 public}:\par
54 \par
55   TwirlingCostFunction() \{\}\par
56   ~TwirlingCostFunction() \{\}\par
57 \par
58   {\cf18 double} scoreTrajectory(Trajectory &traj);\par
59 \par
60   {\cf18 bool} prepare() \{{\cf19 return} {\cf17 true};\};\par
61 \};\par
62 \par
63 \} {\cf20 /* namespace base_local_planner */}\par
64 {\cf21 #endif }{\cf20 /* TWIRLING_COST_FUNCTION_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/velocity_iterator.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/velocity_iterator.h}
{\xe \v base_local_planner/include/base_local_planner/velocity_iterator.h}
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <cmath>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid velocity_iterator.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "velocity__iterator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "velocity__iterator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::VelocityIterator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
velocity_iterator.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/velocity_iterator.h}
{\xe \v base_local_planner/include/base_local_planner/velocity_iterator.h}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef DWA_LOCAL_PLANNER_VELOCITY_ITERATOR_H_}\par
38 {\cf21 #define DWA_LOCAL_PLANNER_VELOCITY_ITERATOR_H_}\par
39 {\cf21 #include <algorithm>}\par
40 {\cf21 #include <cmath>}\par
41 {\cf21 #include <vector>}\par
42 \par
43 {\cf17 namespace }base_local_planner \{\par
44 \par
48   {\cf17 class }VelocityIterator \{\par
49     {\cf17 public}:\par
50       VelocityIterator({\cf18 double} min, {\cf18 double} max, {\cf18 int} num_samples):\par
51         current_index(0)\par
52       \{\par
53         {\cf19 if} (min == max) \{\par
54           samples_.push_back(min);\par
55         \} {\cf19 else} \{\par
56           num_samples = std::max(2, num_samples);\par
57 \par
58           {\cf20 // e.g. for 4 samples, split distance in 3 even parts}\par
59           {\cf18 double} step_size = (max - min) / {\cf18 double}(std::max(1, (num_samples - 1)));\par
60 \par
61           {\cf20 // we make sure to avoid rounding errors around min and max.}\par
62           {\cf18 double} current;\par
63           {\cf18 double} next = min;\par
64           {\cf19 for} ({\cf18 int} j = 0; j < num_samples - 1; ++j) \{\par
65             current = next;\par
66             next += step_size;\par
67             samples_.push_back(current);\par
68             {\cf20 // if 0 is among samples, this is never true. Else it inserts a 0 between the positive and negative samples}\par
69             {\cf19 if} ((current < 0) && (next > 0)) \{\par
70               samples_.push_back(0.0);\par
71             \}\par
72           \}\par
73           samples_.push_back(max);\par
74         \}\par
75       \}\par
76 \par
77       {\cf18 double} getVelocity()\{\par
78         {\cf19 return} samples_.at(current_index);\par
79       \}\par
80 \par
81       VelocityIterator& operator++({\cf18 int})\{\par
82         current_index++;\par
83         {\cf19 return} *{\cf17 this};\par
84       \}\par
85 \par
86       {\cf18 void} reset()\{\par
87         current_index = 0;\par
88       \}\par
89 \par
90       {\cf18 bool} isFinished()\{\par
91         {\cf19 return} current_index >= samples_.size();\par
92       \}\par
93 \par
94     {\cf17 private}:\par
95       std::vector<double> samples_;\par
96       {\cf18 unsigned} {\cf18 int} current_index;\par
97   \};\par
98 \};\par
99 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/voxel_grid_model.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/voxel_grid_model.h}
{\xe \v base_local_planner/include/base_local_planner/voxel_grid_model.h}
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <cfloat>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <costmap_2d/observation.h>}\par
{\f2 #include <base_local_planner/world_model.h>}\par
{\f2 #include <voxel_grid/voxel_grid.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_grid_model.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid__model_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid__model_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::VoxelGridModel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that implements the {\b WorldModel} interface to provide grid based collision checks for the trajectory controller using a 3D voxel grid. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid_model.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/voxel_grid_model.h}
{\xe \v base_local_planner/include/base_local_planner/voxel_grid_model.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef TRAJECTORY_ROLLOUT_VOXEL_WORLD_MODEL_H_}\par
38 {\cf21 #define TRAJECTORY_ROLLOUT_VOXEL_WORLD_MODEL_H_}\par
39 {\cf21 #include <vector>}\par
40 {\cf21 #include <list>}\par
41 {\cf21 #include <cfloat>}\par
42 {\cf21 #include <geometry_msgs/Point.h>}\par
43 {\cf21 #include <costmap_2d/observation.h>}\par
44 {\cf21 #include <base_local_planner/world_model.h>}\par
45 \par
46 {\cf20 //voxel grid stuff}\par
47 {\cf21 #include <voxel_grid/voxel_grid.h>}\par
48 \par
49 {\cf17 namespace }base_local_planner \{\par
55   {\cf17 class }VoxelGridModel : {\cf17 public} WorldModel \{\par
56     {\cf17 public}:\par
70       VoxelGridModel({\cf18 double} size_x, {\cf18 double} size_y, {\cf18 double} size_z, {\cf18 double} xy_resolution, {\cf18 double} z_resolution,\par
71           {\cf18 double} origin_x, {\cf18 double} origin_y, {\cf18 double} origin_z, {\cf18 double} max_z, {\cf18 double} obstacle_range);\par
72 \par
76       {\cf17 virtual} ~VoxelGridModel()\{\}\par
77 \par
86       {\cf17 virtual} {\cf18 double} footprintCost({\cf17 const} geometry_msgs::Point& position, {\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
87           {\cf18 double} inscribed_radius, {\cf18 double} circumscribed_radius);\par
88 \par
89       {\cf17 using} WorldModel::footprintCost;\par
90 \par
97       {\cf18 void} updateWorld({\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
98           {\cf17 const} std::vector<costmap_2d::Observation>& observations, {\cf17 const} std::vector<PlanarLaserScan>& laser_scans);\par
99 \par
104       {\cf18 void} getPoints(sensor_msgs::PointCloud2& cloud);\par
105 \par
106     {\cf17 private}:\par
115       {\cf18 double} lineCost({\cf18 int} x0, {\cf18 int} x1, {\cf18 int} y0, {\cf18 int} y1);\par
116 \par
123       {\cf18 double} pointCost({\cf18 int} x, {\cf18 int} y);\par
124 \par
125       {\cf18 void} removePointsInScanBoundry({\cf17 const} PlanarLaserScan& laser_scan, {\cf18 double} raytrace_range);\par
126 \par
127       {\cf17 inline} {\cf18 bool} worldToMap3D({\cf18 double} wx, {\cf18 double} wy, {\cf18 double} wz, {\cf18 unsigned} {\cf18 int}& mx, {\cf18 unsigned} {\cf18 int}& my, {\cf18 unsigned} {\cf18 int}& mz)\{\par
128         {\cf19 if}(wx < origin_x_ || wy < origin_y_ || wz < origin_z_)\par
129           {\cf19 return} {\cf17 false};\par
130         mx = (int) ((wx - origin_x_) / xy_resolution_);\par
131         my = (int) ((wy - origin_y_) / xy_resolution_);\par
132         mz = (int) ((wz - origin_z_) / z_resolution_);\par
133         {\cf19 return} {\cf17 true};\par
134       \}\par
135 \par
136       {\cf17 inline} {\cf18 bool} worldToMap2D({\cf18 double} wx, {\cf18 double} wy, {\cf18 unsigned} {\cf18 int}& mx, {\cf18 unsigned} {\cf18 int}& my)\{\par
137         {\cf19 if}(wx < origin_x_ || wy < origin_y_)\par
138           {\cf19 return} {\cf17 false};\par
139         mx = (int) ((wx - origin_x_) / xy_resolution_);\par
140         my = (int) ((wy - origin_y_) / xy_resolution_);\par
141         {\cf19 return} {\cf17 true};\par
142       \}\par
143 \par
144       {\cf17 inline} {\cf18 void} mapToWorld3D({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my, {\cf18 unsigned} {\cf18 int} mz, {\cf18 double}& wx, {\cf18 double}& wy, {\cf18 double}& wz)\{\par
145         {\cf20 //returns the center point of the cell}\par
146         wx = origin_x_ + (mx + 0.5) * xy_resolution_;\par
147         wy = origin_y_ + (my + 0.5) * xy_resolution_;\par
148         wz = origin_z_ + (mz + 0.5) * z_resolution_;\par
149       \}\par
150 \par
151       {\cf17 inline} {\cf18 void} mapToWorld2D({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my, {\cf18 double}& wx, {\cf18 double}& wy)\{\par
152         {\cf20 //returns the center point of the cell}\par
153         wx = origin_x_ + (mx + 0.5) * xy_resolution_;\par
154         wy = origin_y_ + (my + 0.5) * xy_resolution_;\par
155       \}\par
156 \par
157       {\cf17 inline} {\cf18 double} dist({\cf18 double} x0, {\cf18 double} y0, {\cf18 double} z0, {\cf18 double} x1, {\cf18 double} y1, {\cf18 double} z1)\{\par
158         {\cf19 return} sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0) + (z1 - z0) * (z1 - z0));\par
159       \}\par
160 \par
161       {\cf17 inline} {\cf18 void} insert({\cf17 const} geometry_msgs::Point32& pt)\{\par
162         {\cf18 unsigned} {\cf18 int} cell_x, cell_y, cell_z;\par
163         {\cf19 if}(!worldToMap3D(pt.x, pt.y, pt.z, cell_x, cell_y, cell_z))\par
164           {\cf19 return};\par
165         obstacle_grid_.markVoxel(cell_x, cell_y, cell_z);\par
166       \}\par
167 \par
168       voxel_grid::VoxelGrid obstacle_grid_;\par
169       {\cf18 double} xy_resolution_;\par
170       {\cf18 double} z_resolution_;\par
171       {\cf18 double} origin_x_;\par
172       {\cf18 double} origin_y_;\par
173       {\cf18 double} origin_z_;\par
174       {\cf18 double} max_z_;  \par
175       {\cf18 double} sq_obstacle_range_;  \par
176 \par
177   \};\par
178 \};\par
179 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/include/base_local_planner/world_model.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/world_model.h}
{\xe \v base_local_planner/include/base_local_planner/world_model.h}
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <costmap_2d/observation.h>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <base_local_planner/planar_laser_scan.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid world_model.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "world__model_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "world__model_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::WorldModel}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
An interface the trajectory controller uses to interact with the world regardless of the underlying world model. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
world_model.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/include/base_local_planner/world_model.h}
{\xe \v base_local_planner/include/base_local_planner/world_model.h}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef TRAJECTORY_ROLLOUT_WORLD_MODEL_H_}\par
38 {\cf21 #define TRAJECTORY_ROLLOUT_WORLD_MODEL_H_}\par
39 \par
40 {\cf21 #include <vector>}\par
41 {\cf21 #include <costmap_2d/observation.h>}\par
42 {\cf21 #include <costmap_2d/footprint.h>}\par
43 {\cf21 #include <geometry_msgs/Point.h>}\par
44 {\cf21 #include <base_local_planner/planar_laser_scan.h>}\par
45 \par
46 {\cf17 namespace }base_local_planner \{\par
52   {\cf17 class }WorldModel\{\par
53     {\cf17 public}:\par
65       {\cf17 virtual} {\cf18 double} footprintCost({\cf17 const} geometry_msgs::Point& position, {\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
66           {\cf18 double} inscribed_radius, {\cf18 double} circumscribed_radius) = 0;\par
67 \par
68       {\cf18 double} footprintCost({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf17 const} std::vector<geometry_msgs::Point>& footprint_spec, {\cf18 double} inscribed_radius = 0.0, {\cf18 double} circumscribed_radius=0.0)\{\par
69 \par
70         {\cf18 double} cos_th = cos(theta);\par
71         {\cf18 double} sin_th = sin(theta);\par
72         std::vector<geometry_msgs::Point> oriented_footprint;\par
73         {\cf19 for}({\cf18 unsigned} {\cf18 int} i = 0; i < footprint_spec.size(); ++i)\{\par
74           geometry_msgs::Point new_pt;\par
75           new_pt.x = x + (footprint_spec[i].x * cos_th - footprint_spec[i].y * sin_th);\par
76           new_pt.y = y + (footprint_spec[i].x * sin_th + footprint_spec[i].y * cos_th);\par
77           oriented_footprint.push_back(new_pt);\par
78         \}\par
79 \par
80         geometry_msgs::Point robot_position;\par
81         robot_position.x = x;\par
82         robot_position.y = y;\par
83 \par
84         {\cf19 if}(inscribed_radius==0.0)\{\par
85           costmap_2d::calculateMinAndMaxDistances(footprint_spec, inscribed_radius, circumscribed_radius);\par
86         \}\par
87 \par
88         {\cf19 return} footprintCost(robot_position, oriented_footprint, inscribed_radius, circumscribed_radius);\par
89       \}\par
90 \par
99       {\cf18 double} footprintCost({\cf17 const} geometry_msgs::Point& position, {\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
100           {\cf18 double} inscribed_radius, {\cf18 double} circumscribed_radius, {\cf18 double} extra) \{\par
101         {\cf19 return} footprintCost(position, footprint, inscribed_radius, circumscribed_radius);\par
102       \}\par
103 \par
107       {\cf17 virtual} ~WorldModel()\{\}\par
108 \par
109     {\cf17 protected}:\par
110       WorldModel()\{\}\par
111   \};\par
112 \par
113 \};\par
114 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/setup.py \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/setup.py}
{\xe \v base_local_planner/setup.py}
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b setup}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b setup.d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/costmap_model.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/costmap_model.cpp}
{\xe \v base_local_planner/src/costmap_model.cpp}
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/line_iterator.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_model.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__model_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/footprint_helper.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/footprint_helper.cpp}
{\xe \v base_local_planner/src/footprint_helper.cpp}
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/footprint_helper.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid footprint_helper.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint__helper_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/goal_functions.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/goal_functions.cpp}
{\xe \v base_local_planner/src/goal_functions.cpp}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/goal_functions.h>}\par
{\f2 #include <tf2/LinearMath/Matrix3x3.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid goal_functions.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "goal__functions_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GOAL_ATTRIBUTE_UNUSED}\~ __attribute__ ((unused))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b base_local_planner::getGoalPositionDistance} (const geometry_msgs::PoseStamped &global_pose, double goal_x, double goal_y)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'B7\'B5\'BB\'D8\'BE\'E0\'C0\'EB\'B5\'C4\'C6\'BD\'B7\'BD\'C0\'B4\'BC\'EC\'B2\'E2\'CA\'C7\'B7\'F1\'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b base_local_planner::getGoalOrientationAngleDifference} (const geometry_msgs::PoseStamped &global_pose, double goal_th)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
return angle difference to goal to check if the goal orientation has been achieved }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b base_local_planner::publishPlan} (const std::vector< geometry_msgs::PoseStamped > &path, const ros::Publisher &pub)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Publish a plan for visualization purposes }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b base_local_planner::prunePlan} (const geometry_msgs::PoseStamped &global_pose, std::vector< geometry_msgs::PoseStamped > &plan, std::vector< geometry_msgs::PoseStamped > &global_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Trim off parts of the global plan that are far enough behind the robot }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::transformGlobalPlan} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const geometry_msgs::PoseStamped &global_robot_pose, const {\b costmap_2d::Costmap2D} &costmap, const std::string &global_frame, std::vector< geometry_msgs::PoseStamped > &transformed_plan)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Transforms the global plan of the robot from the planner frame to the frame of the costmap, selects only the (first) part of the plan that is within the costmap area. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::getGoalPose} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const std::string &global_frame, geometry_msgs::PoseStamped &goal_pose)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns last pose in plan }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::isGoalReached} (const tf2_ros::Buffer &tf, const std::vector< geometry_msgs::PoseStamped > &global_plan, const {\b costmap_2d::Costmap2D} &costmap {\b GOAL_ATTRIBUTE_UNUSED}, const std::string &global_frame, geometry_msgs::PoseStamped &global_pose, const nav_msgs::Odometry &base_odom, double rot_stopped_vel, double trans_stopped_vel, double xy_goal_tolerance, double yaw_goal_tolerance)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b base_local_planner::stopped} (const nav_msgs::Odometry &base_odom, const double &rot_stopped_velocity, const double &trans_stopped_velocity)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check whether the robot is stopped or not }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v GOAL_ATTRIBUTE_UNUSED\:goal_functions.cpp}
{\xe \v goal_functions.cpp\:GOAL_ATTRIBUTE_UNUSED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GOAL_ATTRIBUTE_UNUSED\~ __attribute__ ((unused))}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/latched_stop_rotate_controller.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/latched_stop_rotate_controller.cpp}
{\xe \v base_local_planner/src/latched_stop_rotate_controller.cpp}
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/latched_stop_rotate_controller.h>}\par
{\f2 #include <cmath>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <nav_msgs/Odometry.h>}\par
{\f2 #include <base_local_planner/goal_functions.h>}\par
{\f2 #include <base_local_planner/local_planner_limits.h>}\par
{\f2 #include <tf2/utils.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid latched_stop_rotate_controller.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "latched__stop__rotate__controller_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/local_planner_limits/__init__.py \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/local_planner_limits/__init__.py}
{\xe \v base_local_planner/src/local_planner_limits/__init__.py}
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b local_planner_limits}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b local_planner_limits.add_generic_localplanner_params} (gen)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/local_planner_util.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/local_planner_util.cpp}
{\xe \v base_local_planner/src/local_planner_util.cpp}
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/local_planner_util.h>}\par
{\f2 #include <base_local_planner/goal_functions.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid local_planner_util.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "local__planner__util_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/map_cell.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/map_cell.cpp}
{\xe \v base_local_planner/src/map_cell.cpp}
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/map_cell.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_cell.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__cell_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/map_grid.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/map_grid.cpp}
{\xe \v base_local_planner/src/map_grid.cpp}
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/map_grid.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/map_grid_cost_function.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/map_grid_cost_function.cpp}
{\xe \v base_local_planner/src/map_grid_cost_function.cpp}
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/map_grid_cost_function.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid_cost_function.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__cost__function_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/map_grid_visualizer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/map_grid_visualizer.cpp}
{\xe \v base_local_planner/src/map_grid_visualizer.cpp}
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/map_grid_visualizer.h>}\par
{\f2 #include <base_local_planner/map_cell.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid_visualizer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__visualizer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/obstacle_cost_function.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/obstacle_cost_function.cpp}
{\xe \v base_local_planner/src/obstacle_cost_function.cpp}
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/obstacle_cost_function.h>}\par
{\f2 #include <cmath>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <ros/console.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid obstacle_cost_function.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__cost__function_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/odometry_helper_ros.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/odometry_helper_ros.cpp}
{\xe \v base_local_planner/src/odometry_helper_ros.cpp}
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/odometry_helper_ros.h>}\par
{\f2 #include <tf2/LinearMath/Quaternion.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
{\f2 #include <tf2/convert.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid odometry_helper_ros.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "odometry__helper__ros_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/oscillation_cost_function.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/oscillation_cost_function.cpp}
{\xe \v base_local_planner/src/oscillation_cost_function.cpp}
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/oscillation_cost_function.h>}\par
{\f2 #include <cmath>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid oscillation_cost_function.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "oscillation__cost__function_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/point_grid.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/point_grid.cpp}
{\xe \v base_local_planner/src/point_grid.cpp}
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/point_grid.h>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid point_grid.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/point_grid_node.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/point_grid_node.cpp}
{\xe \v base_local_planner/src/point_grid_node.cpp}
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/point_grid.h>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid point_grid_node.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid__node_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printPoint} (const geometry_msgs::Point &pt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printPSHeader} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printPSFooter} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printPolygonPS} (const std::vector< geometry_msgs::Point32 > &poly, double line_width)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:point_grid_node.cpp}
{\xe \v point_grid_node.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid__node_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printPoint\:point_grid_node.cpp}
{\xe \v point_grid_node.cpp\:printPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printPoint (const geometry_msgs::Point &  {\i pt})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printPolygonPS\:point_grid_node.cpp}
{\xe \v point_grid_node.cpp\:printPolygonPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printPolygonPS (const std::vector< geometry_msgs::Point32 > &  {\i poly}, double  {\i line_width})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printPSFooter\:point_grid_node.cpp}
{\xe \v point_grid_node.cpp\:printPSFooter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printPSFooter ()}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid__node_8cpp_adf610c05fd957ba8e8c427f46726c2ae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printPSHeader\:point_grid_node.cpp}
{\xe \v point_grid_node.cpp\:printPSHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printPSHeader ()}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "point__grid__node_8cpp_a05c3d95c815b1443c5b7d7bf4fa4def3_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/prefer_forward_cost_function.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/prefer_forward_cost_function.cpp}
{\xe \v base_local_planner/src/prefer_forward_cost_function.cpp}
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/prefer_forward_cost_function.h>}\par
{\f2 #include <math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid prefer_forward_cost_function.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "prefer__forward__cost__function_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/simple_scored_sampling_planner.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/simple_scored_sampling_planner.cpp}
{\xe \v base_local_planner/src/simple_scored_sampling_planner.cpp}
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/simple_scored_sampling_planner.h>}\par
{\f2 #include <ros/console.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid simple_scored_sampling_planner.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "simple__scored__sampling__planner_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/simple_trajectory_generator.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/simple_trajectory_generator.cpp}
{\xe \v base_local_planner/src/simple_trajectory_generator.cpp}
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/simple_trajectory_generator.h>}\par
{\f2 #include <cmath>}\par
{\f2 #include <base_local_planner/velocity_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid simple_trajectory_generator.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "simple__trajectory__generator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/trajectory.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/trajectory.cpp}
{\xe \v base_local_planner/src/trajectory.cpp}
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/trajectory_planner.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/trajectory_planner.cpp}
{\xe \v base_local_planner/src/trajectory_planner.cpp}
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_planner.h>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <math.h>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <boost/algorithm/string.hpp>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <queue>}\par
{\f2 #include <tf2/LinearMath/Matrix3x3.h>}\par
{\f2 #include <tf2/utils.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_planner.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__planner_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/trajectory_planner_ros.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/trajectory_planner_ros.cpp}
{\xe \v base_local_planner/src/trajectory_planner_ros.cpp}
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/trajectory_planner_ros.h>}\par
{\f2 #include <boost/tokenizer.hpp>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <cmath>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <base_local_planner/goal_functions.h>}\par
{\f2 #include <nav_msgs/Path.h>}\par
{\f2 #include <nav_core/parameter_magic.h>}\par
{\f2 #include <tf2/utils.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_planner_ros.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__planner__ros_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/twirling_cost_function.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/twirling_cost_function.cpp}
{\xe \v base_local_planner/src/twirling_cost_function.cpp}
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/twirling_cost_function.h>}\par
{\f2 #include <math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid twirling_cost_function.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "twirling__cost__function_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/src/voxel_grid_model.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/src/voxel_grid_model.cpp}
{\xe \v base_local_planner/src/voxel_grid_model.cpp}
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <base_local_planner/voxel_grid_model.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_grid_model.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid__model_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/footprint_helper_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/footprint_helper_test.cpp}
{\xe \v base_local_planner/test/footprint_helper_test.cpp}
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <base_local_planner/footprint_helper.h>}\par
{\f2 #include <base_local_planner/map_grid.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include "wavefront_map_accessor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid footprint_helper_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint__helper__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::FootprintHelperTest}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (FootprintHelperTest, correctFootprint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (FootprintHelperTest, correctLineCells)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/gtest_main.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/gtest_main.cpp}
{\xe \v base_local_planner/test/gtest_main.cpp}
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <gtest/gtest.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid gtest_main.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gtest__main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:gtest_main.cpp}
{\xe \v gtest_main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/line_iterator_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/line_iterator_test.cpp}
{\xe \v base_local_planner/test/line_iterator_test.cpp}
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include "base_local_planner/line_iterator.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid line_iterator_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "line__iterator__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (LineIterator, south)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (LineIterator, north_north_west)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:line_iterator_test.cpp}
{\xe \v line_iterator_test.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:line_iterator_test.cpp}
{\xe \v line_iterator_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (LineIterator , north_north_west )}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "line__iterator__test_8cpp_a4a145114f485e713bb98b1bfa37c6f23_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:line_iterator_test.cpp}
{\xe \v line_iterator_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (LineIterator , south )}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "line__iterator__test_8cpp_a063fd5c1eea3a6858a1addd0d81e046e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/map_grid_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/map_grid_test.cpp}
{\xe \v base_local_planner/test/map_grid_test.cpp}
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <queue>}\par
{\f2 #include <gtest/gtest.h>}\par
{\f2 #include <base_local_planner/map_grid.h>}\par
{\f2 #include <base_local_planner/map_cell.h>}\par
{\f2 #include "wavefront_map_accessor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_grid_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__grid__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, initNull)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, operatorBrackets)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, copyConstructor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, getIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, reset)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, properGridConstruction)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, sizeCheck)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, adjustPlanEmpty)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, adjustPlan)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, adjustPlan2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (MapGridTest, distancePropagation)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/trajectory_generator_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/trajectory_generator_test.cpp}
{\xe \v base_local_planner/test/trajectory_generator_test.cpp}
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <base_local_planner/simple_trajectory_generator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid trajectory_generator_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "trajectory__generator__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectoryGeneratorTest}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/utest.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/utest.cpp}
{\xe \v base_local_planner/test/utest.cpp}
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <utility>}\par
{\f2 #include <base_local_planner/map_cell.h>}\par
{\f2 #include <base_local_planner/map_grid.h>}\par
{\f2 #include <base_local_planner/trajectory.h>}\par
{\f2 #include <base_local_planner/trajectory_planner.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <base_local_planner/Position2DInt.h>}\par
{\f2 #include "wavefront_map_accessor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid utest.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "base__local__planner_2test_2utest_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::TrajectoryPlannerTest}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TrajectoryPlannerTest * {\b base_local_planner::setup_testclass_singleton} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (TrajectoryPlannerTest, footprintObstacles)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (TrajectoryPlannerTest, checkGoalDistance)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (TrajectoryPlannerTest, checkPathDistance)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TrajectoryPlannerTest * {\b base_local_planner::tct} = NULL\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/test/utest.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/test/utest.cpp}
{\xe \v map_server/test/utest.cpp}
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdexcept>}\par
{\f2 #include <gtest/gtest.h>}\par
{\f2 #include "map_server/image_loader.h"}\par
{\f2 #include "test_constants.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid utest.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__server_2test_2utest_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b MapServer}, loadValidPNG)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b MapServer}, loadValidBMP)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b MapServer}, loadInvalidFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< unsigned int > {\b countValues} (const nav_msgs::GetMap::Response &map_resp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b MapServer}, testMapMode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v countValues\:utest.cpp}
{\xe \v utest.cpp\:countValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< unsigned int > countValues (const nav_msgs::GetMap::Response &  {\i map_resp})}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__server_2test_2utest_8cpp_a1d6e606b475512acc893a9f1009f6ae4_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:utest.cpp}
{\xe \v utest.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:utest.cpp}
{\xe \v utest.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b MapServer} , loadInvalidFile )}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__server_2test_2utest_8cpp_ac221a331249f8160ca4e01f6f5b36944_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:utest.cpp}
{\xe \v utest.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b MapServer} , loadValidBMP )}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__server_2test_2utest_8cpp_a1743e4a53a4d911286533a5b3294c0a6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:utest.cpp}
{\xe \v utest.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b MapServer} , loadValidPNG )}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__server_2test_2utest_8cpp_aed3c6afdd32b4fd4b9c40c3e3c813a29_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:utest.cpp}
{\xe \v utest.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b MapServer} , testMapMode )}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__server_2test_2utest_8cpp_af9a211d04f91d2cced7d709c75d8f62d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/velocity_iterator_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/velocity_iterator_test.cpp}
{\xe \v base_local_planner/test/velocity_iterator_test.cpp}
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <base_local_planner/velocity_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid velocity_iterator_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "velocity__iterator__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, testsingle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, testsingle_pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, testsingle_neg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test1_pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test1_neg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test4)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test_shifted)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b base_local_planner::TEST} (VelocityIteratorTest, test_cranky)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner/test/wavefront_map_accessor.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/wavefront_map_accessor.h}
{\xe \v base_local_planner/test/wavefront_map_accessor.h}
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/cost_values.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid wavefront_map_accessor.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "wavefront__map__accessor_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "wavefront__map__accessor_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b base_local_planner::WavefrontMapAccessor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b base_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
wavefront_map_accessor.h\par \pard\plain 
{\tc\tcl2 \v base_local_planner/test/wavefront_map_accessor.h}
{\xe \v base_local_planner/test/wavefront_map_accessor.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * wavefront_map_accessor.h}\par
3 {\cf20  *}\par
4 {\cf20  *  Created on: May 2, 2012}\par
5 {\cf20  *      Author: tkruse}\par
6 {\cf20  */}\par
7 \par
8 {\cf21 #ifndef WAVEFRONT_MAP_ACCESSOR_H_}\par
9 {\cf21 #define WAVEFRONT_MAP_ACCESSOR_H_}\par
10 {\cf21 #include <costmap_2d/cost_values.h>}\par
11 {\cf17 namespace }base_local_planner \{\par
12 \par
17 {\cf17 class }WavefrontMapAccessor : {\cf17 public} costmap_2d::Costmap2D \{\par
18   {\cf17 public}:\par
19     WavefrontMapAccessor(MapGrid* map, {\cf18 double} outer_radius)\par
20       : costmap_2d::Costmap2D(map->size_x_, map->size_y_, 1, 0, 0),\par
21         map_(map), outer_radius_(outer_radius) \{\par
22       synchronize();\par
23     \}\par
24 \par
25     {\cf17 virtual} ~WavefrontMapAccessor()\{\};\par
26 \par
27     {\cf18 void} synchronize()\{\par
28       {\cf20 // Write Cost Data from the map}\par
29       {\cf19 for}({\cf18 unsigned} {\cf18 int} x = 0; x < size_x_; x++)\{\par
30         {\cf19 for} ({\cf18 unsigned} {\cf18 int} y = 0; y < size_y_; y++)\{\par
31           {\cf18 unsigned} {\cf18 int} ind = x + (y * size_x_);\par
32           {\cf19 if}(map_->operator ()(x, y).target_dist == 1) \{\par
33             costmap_[ind] = costmap_2d::LETHAL_OBSTACLE;\par
34           \} {\cf19 else} \{\par
35             costmap_[ind] = 0;\par
36           \}\par
37         \}\par
38       \}\par
39     \}\par
40 \par
41   {\cf17 private}:\par
42     MapGrid* map_;\par
43     {\cf18 double} outer_radius_;\par
44 \};\par
45 \par
46 \}\par
47 \par
48 \par
49 \par
50 {\cf21 #endif }{\cf20 /* WAVEFRONT_MAP_ACCESSOR_H_ */}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
carrot_planner/include/carrot_planner/carrot_planner.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v carrot_planner/include/carrot_planner/carrot_planner.h}
{\xe \v carrot_planner/include/carrot_planner/carrot_planner.h}
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <nav_core/base_global_planner.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <base_local_planner/world_model.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid carrot_planner.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "carrot__planner_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "carrot__planner_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b carrot_planner::CarrotPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Provides a simple global planner that will compute a valid goal point for the local planner by walking back along the vector between the robot and the user-specified goal point until a valid cost is found. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b carrot_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
carrot_planner.h\par \pard\plain 
{\tc\tcl2 \v carrot_planner/include/carrot_planner/carrot_planner.h}
{\xe \v carrot_planner/include/carrot_planner/carrot_planner.h}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef CARROT_PLANNER_H_}\par
38 {\cf21 #define CARROT_PLANNER_H_}\par
39 {\cf21 #include <ros/ros.h>}\par
40 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
41 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
42 {\cf21 #include <nav_core/base_global_planner.h>}\par
43 \par
44 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
45 \par
46 {\cf21 #include <base_local_planner/world_model.h>}\par
47 {\cf21 #include <base_local_planner/costmap_model.h>}\par
48 \par
49 {\cf17 namespace }carrot_planner\{\par
54   {\cf17 class }CarrotPlanner : {\cf17 public} nav_core::BaseGlobalPlanner \{\par
55     {\cf17 public}:\par
59       CarrotPlanner();\par
65       CarrotPlanner(std::string name, costmap_2d::Costmap2DROS* costmap_ros);\par
66 \par
70       ~CarrotPlanner();\par
71 \par
77       {\cf18 void} initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros);\par
78 \par
86       {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start, \par
87           {\cf17 const} geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan);\par
88 \par
89     {\cf17 private}:\par
90       costmap_2d::Costmap2DROS* costmap_ros_;\par
91       {\cf18 double} step_size_, min_dist_from_robot_;\par
92       costmap_2d::Costmap2D* costmap_;\par
93       base_local_planner::WorldModel* world_model_; \par
94 \par
102       {\cf18 double} footprintCost({\cf18 double} x_i, {\cf18 double} y_i, {\cf18 double} theta_i);\par
103 \par
104       {\cf18 bool} initialized_;\par
105   \};\par
106 \};  \par
107 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
carrot_planner/src/carrot_planner.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v carrot_planner/src/carrot_planner.cpp}
{\xe \v carrot_planner/src/carrot_planner.cpp}
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <angles/angles.h>}\par
{\f2 #include <carrot_planner/carrot_planner.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <tf2/convert.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid carrot_planner.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "carrot__planner_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b carrot_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clear_costmap_recovery/include/clear_costmap_recovery/clear_costmap_recovery.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v clear_costmap_recovery/include/clear_costmap_recovery/clear_costmap_recovery.h}
{\xe \v clear_costmap_recovery/include/clear_costmap_recovery/clear_costmap_recovery.h}
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <nav_core/recovery_behavior.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_layer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid clear_costmap_recovery.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__costmap__recovery_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__costmap__recovery_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b clear_costmap_recovery::ClearCostmapRecovery}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A recovery behavior that reverts the navigation stack's costmaps to the static map outside of a user-specified region. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b clear_costmap_recovery}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clear_costmap_recovery.h\par \pard\plain 
{\tc\tcl2 \v clear_costmap_recovery/include/clear_costmap_recovery/clear_costmap_recovery.h}
{\xe \v clear_costmap_recovery/include/clear_costmap_recovery/clear_costmap_recovery.h}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef CLEAR_COSTMAP_RECOVERY_H_}\par
38 {\cf21 #define CLEAR_COSTMAP_RECOVERY_H_}\par
39 {\cf21 #include <nav_core/recovery_behavior.h>}\par
40 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <costmap_2d/costmap_layer.h>}\par
43 \par
44 {\cf17 namespace }clear_costmap_recovery\{\par
49   {\cf17 class }ClearCostmapRecovery : {\cf17 public} nav_core::RecoveryBehavior \{\par
50     {\cf17 public}:\par
56       ClearCostmapRecovery();\par
57 \par
64       {\cf18 void} initialize(std::string name, tf2_ros::Buffer* tf,\par
65           costmap_2d::Costmap2DROS* global_costmap, costmap_2d::Costmap2DROS* local_costmap);\par
66 \par
72       {\cf18 void} runBehavior();\par
73 \par
74     {\cf17 private}:\par
75       {\cf18 void} clear(costmap_2d::Costmap2DROS* costmap);\par
76       {\cf18 void} clearMap(boost::shared_ptr<costmap_2d::CostmapLayer> costmap, {\cf18 double} pose_x, {\cf18 double} pose_y);\par
77       costmap_2d::Costmap2DROS* global_costmap_, *local_costmap_;\par
78       std::string name_;\par
79       tf2_ros::Buffer* tf_;\par
80       {\cf18 bool} initialized_;\par
81       {\cf18 bool} force_updating_; \par
82       {\cf18 double} reset_distance_;\par
83       {\cf18 bool} invert_area_to_clear_;\par
84       std::string affected_maps_; \par
85       std::set<std::string> clearable_layers_; \par
86   \};\par
87 \};\par
88 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clear_costmap_recovery/src/clear_costmap_recovery.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v clear_costmap_recovery/src/clear_costmap_recovery.cpp}
{\xe \v clear_costmap_recovery/src/clear_costmap_recovery.cpp}
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <clear_costmap_recovery/clear_costmap_recovery.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <boost/pointer_cast.hpp>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid clear_costmap_recovery.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__costmap__recovery_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b clear_costmap_recovery}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clear_costmap_recovery/test/clear_tester.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v clear_costmap_recovery/test/clear_tester.cpp}
{\xe \v clear_costmap_recovery/test/clear_tester.cpp}
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <gtest/gtest.h>}\par
{\f2 #include <clear_costmap_recovery/clear_costmap_recovery.h>}\par
{\f2 #include <costmap_2d/testing_helper.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid clear_tester.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testClearBehavior} (std::string name, double {\b distance}, bool obstacles, bool static_map, {\b costmap_2d::Costmap2DROS} *global_costmap, {\b costmap_2d::Costmap2DROS} *local_costmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testCountLethal} (std::string name, double {\b distance}, bool obstacles, bool static_map, int global_lethal, int local_lethal=0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (ClearTester, basicTest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (ClearTester, bigRadiusTest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (ClearTester, clearNoLayersTest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (ClearTester, clearBothTest)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (ClearTester, clearBothTest2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b transformer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::TransformListener * {\b tfl}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ClearTester , basicTest )}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_abafd3249b8a1dc81312408e67fec172a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ClearTester , bigRadiusTest )}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_aaf3724518fdd64f4d1ded51015d69e9e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ClearTester , clearBothTest )}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_a70bfda0e7040d95bf8b907d4b538a975_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ClearTester , clearBothTest2 )}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_ab665a5213a668ee20f42bec98c0f823d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (ClearTester , clearNoLayersTest )}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_a42cd3668cf12389fc35bf80499bbda8c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v testClearBehavior\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:testClearBehavior}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testClearBehavior (std::string  {\i name}, double  {\i distance}, bool  {\i obstacles}, bool  {\i static_map}, {\b costmap_2d::Costmap2DROS} *  {\i global_costmap}, {\b costmap_2d::Costmap2DROS} *  {\i local_costmap})}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_a401dad5e820a56943c7223955000dc1b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_a401dad5e820a56943c7223955000dc1b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v testCountLethal\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:testCountLethal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testCountLethal (std::string  {\i name}, double  {\i distance}, bool  {\i obstacles}, bool  {\i static_map}, int  {\i global_lethal}, int  {\i local_lethal} = {\f2 0})}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_ae52f25afda509d6ef50c32f8feaae444_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "clear__tester_8cpp_ae52f25afda509d6ef50c32f8feaae444_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v tfl\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:tfl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::TransformListener* tfl}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v transformer\:clear_tester.cpp}
{\xe \v clear_tester.cpp\:transformer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* transformer}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/array_parser.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/array_parser.h}
{\xe \v costmap_2d/include/costmap_2d/array_parser.h}
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid array_parser.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< float > > {\b costmap_2d::parseVVF} (const std::string &input, std::string &error_return)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse a vector of vectors of floats from a string. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
array_parser.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/array_parser.h}
{\xe \v costmap_2d/include/costmap_2d/array_parser.h}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Copyright (c) 2012, Willow Garage, Inc.}\par
3 {\cf20  * All rights reserved.}\par
4 {\cf20  *}\par
5 {\cf20  * Redistribution and use in source and binary forms, with or without}\par
6 {\cf20  * modification, are permitted provided that the following conditions are met:}\par
7 {\cf20  *}\par
8 {\cf20  *     * Redistributions of source code must retain the above copyright}\par
9 {\cf20  *       notice, this list of conditions and the following disclaimer.}\par
10 {\cf20  *     * Redistributions in binary form must reproduce the above copyright}\par
11 {\cf20  *       notice, this list of conditions and the following disclaimer in the}\par
12 {\cf20  *       documentation and/or other materials provided with the distribution.}\par
13 {\cf20  *     * Neither the name of the Willow Garage, Inc. nor the names of its}\par
14 {\cf20  *       contributors may be used to endorse or promote products derived from}\par
15 {\cf20  *       this software without specific prior written permission.}\par
16 {\cf20  *}\par
17 {\cf20  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"}\par
18 {\cf20  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE}\par
19 {\cf20  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE}\par
20 {\cf20  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE}\par
21 {\cf20  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR}\par
22 {\cf20  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF}\par
23 {\cf20  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS}\par
24 {\cf20  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN}\par
25 {\cf20  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)}\par
26 {\cf20  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
27 {\cf20  * POSSIBILITY OF SUCH DAMAGE.}\par
28 {\cf20  *}\par
29 {\cf20  * author: Dave Hershberger}\par
30 {\cf20  */}\par
31 {\cf21 #ifndef COSTMAP_2D_ARRAY_PARSER_H}\par
32 {\cf21 #define COSTMAP_2D_ARRAY_PARSER_H}\par
33 \par
34 {\cf21 #include <vector>}\par
35 {\cf21 #include <string>}\par
36 \par
37 {\cf17 namespace }costmap_2d\par
38 \{\par
39 \par
47 std::vector<std::vector<float> > parseVVF({\cf17 const} std::string& input, std::string& error_return);\par
48 \par
49 \}  {\cf20 // end namespace costmap_2d}\par
50 \par
51 {\cf21 #endif  }{\cf20 // COSTMAP_2D_ARRAY_PARSER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/cost_values.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/cost_values.h}
{\xe \v costmap_2d/include/costmap_2d/cost_values.h}
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "cost__values_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b costmap_2d::NO_INFORMATION} = 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b costmap_2d::LETHAL_OBSTACLE} = 254\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b costmap_2d::INSCRIBED_INFLATED_OBSTACLE} = 253\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static const unsigned char {\b costmap_2d::FREE_SPACE} = 0\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
cost_values.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/cost_values.h}
{\xe \v costmap_2d/include/costmap_2d/cost_values.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *********************************************************************/}\par
37 {\cf21 #ifndef COSTMAP_2D_COST_VALUES_H_}\par
38 {\cf21 #define COSTMAP_2D_COST_VALUES_H_}\par
40 {\cf17 namespace }costmap_2d\par
41 \{\par
42 {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} NO_INFORMATION = 255;\par
43 {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} LETHAL_OBSTACLE = 254;\par
44 {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} INSCRIBED_INFLATED_OBSTACLE = 253;\par
45 {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} FREE_SPACE = 0;\par
46 \}\par
47 {\cf21 #endif  }{\cf20 // COSTMAP_2D_COST_VALUES_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/costmap_2d.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_2d.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_2d.h}
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <queue>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <boost/thread.hpp>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b costmap_2d::MapLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Costmap2D}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A 2D costmap provides a mapping between points in the world and their associated "costs". }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Costmap2D::MarkCell}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Costmap2D::PolygonOutlineCells}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_2d.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_2d.h}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_COSTMAP_2D_H_}\par
39 {\cf21 #define COSTMAP_2D_COSTMAP_2D_H_}\par
40 \par
41 {\cf21 #include <vector>}\par
42 {\cf21 #include <queue>}\par
43 {\cf21 #include <geometry_msgs/Point.h>}\par
44 {\cf21 #include <boost/thread.hpp>}\par
45 \par
46 {\cf17 namespace }costmap_2d\par
47 \{\par
48 \par
49 {\cf20 // convenient for storing x/y point pairs}\par
50 {\cf20 // \'B7\'BD\'B1\'E3\'BC\'C7\'C2\'BC\'CE\'BB\'D6\'C3\'D0\'C5\'CF\'A2}\par
51 {\cf17 struct }MapLocation\par
52 \{\par
53   {\cf18 unsigned} {\cf18 int} x;\par
54   {\cf18 unsigned} {\cf18 int} y;\par
55 \};\par
56 \par
61 {\cf17 class }Costmap2D\par
62 \{\par
63   {\cf17 friend} {\cf17 class }CostmapTester;  {\cf20 // Need this for gtest to work correctly}\par
64 {\cf17 public}:\par
74   Costmap2D({\cf18 unsigned} {\cf18 int} cells_size_x, {\cf18 unsigned} {\cf18 int} cells_size_y, {\cf18 double} resolution,\par
75             {\cf18 double} origin_x, {\cf18 double} origin_y, {\cf18 unsigned} {\cf18 char} default_value = 0);\par
76 \par
81   Costmap2D({\cf17 const} Costmap2D& map);\par
82 \par
88   Costmap2D& operator=({\cf17 const} Costmap2D& map);\par
89 \par
98   {\cf18 bool} copyCostmapWindow({\cf17 const} Costmap2D& map, {\cf18 double} win_origin_x, {\cf18 double} win_origin_y, {\cf18 double} win_size_x,\par
99                          {\cf18 double} win_size_y);\par
100 \par
104   Costmap2D();\par
105 \par
109   {\cf17 virtual} ~Costmap2D();\par
110 \par
117   {\cf18 unsigned} {\cf18 char} getCost({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my) {\cf17 const};\par
118 \par
125   {\cf18 void} setCost({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my, {\cf18 unsigned} {\cf18 char} cost);\par
126 \par
134   {\cf18 void} mapToWorld({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my, {\cf18 double}& wx, {\cf18 double}& wy) {\cf17 const};\par
135 \par
144   {\cf20 // \'D7\'F7\'D3\'C3\'A3\'BA\'B4\'D3\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA(wx, wy)\'CF\'F2\'B5\'D8\'CD\'BC\'D7\'F8\'B1\'EA(mx, my)\'D7\'AA\'BB\'BB,\'B2\'BB\'D2\'BB\'B6\'A8\'BB\'E1\'D7\'AA\'BB\'BB\'B3\'C9\'B9\'A6\'A3\'AC}\par
145   {\cf20 // \'B5\'D8\'CD\'BC\'D7\'F8\'B1\'EA\'CF\'B5\'D0\'A1\'D3\'DA\'CA\'C0\'BD\'E7\'D7\'F8\'B1\'EA\'CF\'B5\'A3\'AC\'C8\'E7\'B9\'FB\'D7\'AA\'BB\'BB\'B3\'C9\'B9\'A6\'A3\'A8\'BA\'CF\'B7\'A8\'BD\'E7\'CF\'DE\'A3\'A9\'A3\'AC\'D4\'F2\'CE\'AATrue\'A3\'BB\'B7\'F1\'D4\'F2\'CE\'AAfalse}\par
146   {\cf18 bool} worldToMap({\cf18 double} wx, {\cf18 double} wy, {\cf18 unsigned} {\cf18 int}& mx, {\cf18 unsigned} {\cf18 int}& my) {\cf17 const};\par
147 \par
156   {\cf18 void} worldToMapNoBounds({\cf18 double} wx, {\cf18 double} wy, {\cf18 int}& mx, {\cf18 int}& my) {\cf17 const};\par
157 \par
166   {\cf18 void} worldToMapEnforceBounds({\cf18 double} wx, {\cf18 double} wy, {\cf18 int}& mx, {\cf18 int}& my) {\cf17 const};\par
167 \par
174   {\cf17 inline} {\cf18 unsigned} {\cf18 int} getIndex({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my){\cf17  const}\par
175 {\cf17   }\{\par
176     {\cf19 return} my * size_x_ + mx;\par
177   \}\par
178 \par
185   {\cf17 inline} {\cf18 void} indexToCells({\cf18 unsigned} {\cf18 int} index, {\cf18 unsigned} {\cf18 int}& mx, {\cf18 unsigned} {\cf18 int}& my){\cf17  const}\par
186 {\cf17   }\{\par
187     my = index / size_x_;\par
188     mx = index - (my * size_x_);\par
189   \}\par
190 \par
195   {\cf18 unsigned} {\cf18 char}* getCharMap() {\cf17 const};\par
196 \par
201   {\cf18 unsigned} {\cf18 int} getSizeInCellsX() {\cf17 const};\par
202 \par
207   {\cf18 unsigned} {\cf18 int} getSizeInCellsY() {\cf17 const};\par
208 \par
213   {\cf18 double} getSizeInMetersX() {\cf17 const};\par
214 \par
219   {\cf18 double} getSizeInMetersY() {\cf17 const};\par
220 \par
225   {\cf18 double} getOriginX() {\cf17 const};\par
226 \par
231   {\cf18 double} getOriginY() {\cf17 const};\par
232 \par
237   {\cf18 double} getResolution() {\cf17 const};\par
238 \par
239   {\cf18 void} setDefaultValue({\cf18 unsigned} {\cf18 char} c)\par
240   \{\par
241     default_value_ = c;\par
242   \}\par
243 \par
244   {\cf18 unsigned} {\cf18 char} getDefaultValue()\par
245   \{\par
246     {\cf19 return} default_value_;\par
247   \}\par
248 \par
255   {\cf18 bool} setConvexPolygonCost({\cf17 const} std::vector<geometry_msgs::Point>& polygon, {\cf18 unsigned} {\cf18 char} cost_value);\par
256 \par
262   {\cf18 void} polygonOutlineCells({\cf17 const} std::vector<MapLocation>& polygon, std::vector<MapLocation>& polygon_cells);\par
263 \par
269   {\cf18 void} convexFillCells({\cf17 const} std::vector<MapLocation>& polygon, std::vector<MapLocation>& polygon_cells);\par
270 \par
276   {\cf17 virtual} {\cf18 void} updateOrigin({\cf18 double} new_origin_x, {\cf18 double} new_origin_y);\par
277 \par
282   {\cf18 bool} saveMap(std::string file_name);\par
283 \par
284   {\cf18 void} resizeMap({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y, {\cf18 double} resolution, {\cf18 double} origin_x,\par
285                  {\cf18 double} origin_y);\par
286 \par
287   {\cf18 void} resetMap({\cf18 unsigned} {\cf18 int} x0, {\cf18 unsigned} {\cf18 int} y0, {\cf18 unsigned} {\cf18 int} xn, {\cf18 unsigned} {\cf18 int} yn);\par
288 \par
294   {\cf18 unsigned} {\cf18 int} cellDistance({\cf18 double} world_dist);\par
295 \par
296   {\cf20 // Provide a typedef to ease future code maintenance}\par
297   {\cf17 typedef} boost::recursive_mutex mutex_t;\par
298   mutex_t* getMutex()\par
299   \{\par
300     {\cf19 return} access_;\par
301   \}\par
302 \par
303 {\cf17 protected}:\par
317   {\cf17 template}<{\cf17 typename} data_type>\par
318     {\cf18 void} copyMapRegion(data_type* source_map, {\cf18 unsigned} {\cf18 int} sm_lower_left_x, {\cf18 unsigned} {\cf18 int} sm_lower_left_y,\par
319                        {\cf18 unsigned} {\cf18 int} sm_size_x, data_type* dest_map, {\cf18 unsigned} {\cf18 int} dm_lower_left_x,\par
320                        {\cf18 unsigned} {\cf18 int} dm_lower_left_y, {\cf18 unsigned} {\cf18 int} dm_size_x, {\cf18 unsigned} {\cf18 int} region_size_x,\par
321                        {\cf18 unsigned} {\cf18 int} region_size_y)\par
322     \{\par
323       {\cf20 // we'll first need to compute the starting points for each map}\par
324       data_type* sm_index = source_map + (sm_lower_left_y * sm_size_x + sm_lower_left_x);\par
325       data_type* dm_index = dest_map + (dm_lower_left_y * dm_size_x + dm_lower_left_x);\par
326 \par
327       {\cf20 // now, we'll copy the source map into the destination map}\par
328       {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < region_size_y; ++i)\par
329       \{\par
330         memcpy(dm_index, sm_index, region_size_x * {\cf17 sizeof}(data_type));\par
331         sm_index += sm_size_x;\par
332         dm_index += dm_size_x;\par
333       \}\par
334     \}\par
335 \par
339   {\cf17 virtual} {\cf18 void} deleteMaps();\par
340 \par
344   {\cf17 virtual} {\cf18 void} resetMaps();\par
345 \par
351   {\cf17 virtual} {\cf18 void} initMaps({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y);\par
352 \par
362   {\cf17 template}<{\cf17 class} ActionType>\par
363     {\cf17 inline} {\cf18 void} raytraceLine(ActionType at, {\cf18 unsigned} {\cf18 int} x0, {\cf18 unsigned} {\cf18 int} y0, {\cf18 unsigned} {\cf18 int} x1, {\cf18 unsigned} {\cf18 int} y1,\par
364                              {\cf18 unsigned} {\cf18 int} max_length = UINT_MAX)\par
365     \{\par
366       {\cf18 int} dx = x1 - x0;\par
367       {\cf18 int} dy = y1 - y0;\par
368 \par
369       {\cf18 unsigned} {\cf18 int} abs_dx = abs(dx);\par
370       {\cf18 unsigned} {\cf18 int} abs_dy = abs(dy);\par
371 \par
372       {\cf20 // \'B1\'EA\'BC\'C7x\'CA\'C7\'C7\'B0\'BD\'F8\'D2\'BB\'B8\'F1\'BB\'B9\'CA\'C7\'BA\'F3\'CD\'CB\'D2\'BB\'B8\'F6\'B5\'A5\'D4\'AA\'B8\'F1}\par
373       {\cf18 int} offset_dx = sign(dx);\par
374       {\cf18 int} offset_dy = sign(dy) * size_x_;\par
375 \par
376       {\cf18 unsigned} {\cf18 int} offset = y0 * size_x_ + x0;\par
377 \par
378       {\cf20 // we need to chose how much to scale our dominant dimension, based on the maximum length of the line}\par
379       {\cf18 double} dist = hypot(dx, dy);\par
380       {\cf18 double} scale = (dist == 0.0) ? 1.0 : std::min(1.0, max_length / dist);\par
381 \par
382       {\cf20 // if x is dominant}\par
383       {\cf19 if} (abs_dx >= abs_dy)\par
384       \{\par
385         {\cf18 int} error_y = abs_dx / 2;\par
386         bresenham2D(at, abs_dx, abs_dy, error_y, offset_dx, offset_dy, offset, ({\cf18 unsigned} {\cf18 int})(scale * abs_dx));\par
387         {\cf19 return};\par
388       \}\par
389 \par
390       {\cf20 // otherwise y is dominant}\par
391       {\cf18 int} error_x = abs_dy / 2;\par
392       bresenham2D(at, abs_dy, abs_dx, error_x, offset_dy, offset_dx, offset, ({\cf18 unsigned} {\cf18 int})(scale * abs_dy));\par
393     \}\par
394 \par
395 {\cf17 private}:\par
400   {\cf17 template}<{\cf17 class} ActionType>\par
401     {\cf17 inline} {\cf18 void} bresenham2D(ActionType at, {\cf18 unsigned} {\cf18 int} abs_da, {\cf18 unsigned} {\cf18 int} abs_db, {\cf18 int} error_b, {\cf18 int} offset_a,\par
402                             {\cf18 int} offset_b, {\cf18 unsigned} {\cf18 int} offset, {\cf18 unsigned} {\cf18 int} max_length)\par
403     \{\par
404       {\cf18 unsigned} {\cf18 int} end = std::min(max_length, abs_da);\par
405       {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < end; ++i)\par
406       \{\par
407         at(offset);\par
408         offset += offset_a;\par
409        {\cf20 /*}\par
410 {\cf20          * \'CF\'C2\'C3\'E6\'D5\'E2\'B8\'F6\'C7\'E9\'BF\'F6\'A3\'ACerror_b + abs_db\'BE\'CD\'BB\'E1\'B3\'AC\'B9\'FDabs_da\'A3\'AC\'CB\'F9\'D2\'D4\'C3\'BF\'B4\'CEx+1\'BA\'F3\'A3\'ACy\'D2\'B2\'BB\'E1+1}\par
411 {\cf20          *         _}\par
412 {\cf20          *       _|}\par
413 {\cf20          *     _|}\par
414 {\cf20          *   _|}\par
415 {\cf20          * _|}\par
416 {\cf20          *}\par
417 {\cf20          * \'CF\'C2\'C3\'E6\'D5\'E2\'B8\'F6\'C7\'E9\'BF\'F6\'A3\'ACerror_b + n* abs_db\'B2\'C5\'BB\'E1\'B3\'AC\'B9\'FDabs_da,\'CB\'F9\'D2\'D4\'C3\'BF\'B4\'CEx+n\'BA\'F3\'A3\'ACy\'B2\'C5\'BB\'E1+1}\par
418 {\cf20          *             ___|}\par
419 {\cf20          *         ___|}\par
420 {\cf20          *     ___|}\par
421 {\cf20          * ___|}\par
422 {\cf20           */}\par
423         {\cf20 // https://blog.csdn.net/TurboIan/article/details/86611713}\par
424         error_b += abs_db;  {\cf20 // \'CE\'AA\'C1\'CB\'BF\'D8\'D6\'C6\'C7\'B0\'BD\'F8\'C9\'CF\'C9\'FD\'B5\'C4\'D0\'B1\'C2\'CA}\par
425         {\cf19 if} (({\cf18 unsigned} {\cf18 int})error_b >= abs_da)\par
426         \{\par
427           offset += offset_b;\par
428           error_b -= abs_da;\par
429         \}\par
430       \}\par
431       at(offset);\par
432     \}\par
433 \par
434   {\cf17 inline} {\cf18 int} sign({\cf18 int} x)\par
435   \{\par
436     {\cf19 return} x > 0 ? 1.0 : -1.0;\par
437   \}\par
438 \par
439   mutex_t* access_;\par
440 {\cf17 protected}:\par
441   {\cf18 unsigned} {\cf18 int} size_x_;  {\cf20 // \'B1\'ED\'CA\'BEx\'B7\'BD\'CF\'F2\'D7\'EE\'B4\'F3\'BE\'E0\'C0\'EB\'A3\'A8x\'B7\'BD\'CF\'F2\'CF\'F1\'CB\'D8\'B5\'E3\'B8\'F6\'CA\'FD\'A3\'A9}\par
442   {\cf18 unsigned} {\cf18 int} size_y_;  {\cf20 // \'B1\'ED\'CA\'BEy\'B7\'BD\'CF\'F2\'D7\'EE\'B4\'F3\'BE\'E0\'C0\'EB\'A3\'A8y\'B7\'BD\'CF\'F2\'CF\'F1\'CB\'D8\'B5\'E3\'B8\'F6\'CA\'FD\'A3\'A9}\par
443   {\cf18 double} resolution_;  {\cf20 // \'B7\'D6\'B1\'E6\'C2\'CA\'B4\'F3\'D0\'A1\'A3\'AC\'CF\'F1\'CB\'D8\'B5\'E3\'D6\'AE\'BC\'E4\'B5\'C4\'BE\'E0\'C0\'EB}\par
444   {\cf18 double} origin_x_; {\cf20 // \'B5\'D8\'CD\'BC\'B5\'C4\'CF\'C2\'B1\'EA\'BC\'C6\'CA\'FD\'D4\'AD\'B5\'E3x}\par
445   {\cf18 double} origin_y_;  {\cf20 // \'B5\'D8\'CD\'BC\'B5\'C4\'CF\'C2\'B1\'EA\'BC\'C6\'CA\'FD\'D4\'AD\'B5\'E3y}\par
446   {\cf18 unsigned} {\cf18 char}* costmap_;  {\cf20 // \'B5\'D8\'CD\'BC\'CA\'FD\'BE\'DD}\par
447   {\cf18 unsigned} {\cf18 char} default_value_;  {\cf20 // \'C4\'AC\'C8\'CF\'B4\'FA\'BC\'DB\'D6\'B5}\par
448 \par
449   {\cf17 class }MarkCell\par
450   \{\par
451   {\cf17 public}:\par
452     MarkCell({\cf18 unsigned} {\cf18 char}* costmap, {\cf18 unsigned} {\cf18 char} value) :\par
453         costmap_(costmap), value_(value)\par
454     \{\par
455     \}\par
456     {\cf17 inline} {\cf18 void} operator()({\cf18 unsigned} {\cf18 int} offset)\par
457     \{\par
458       costmap_[offset] = value_;\par
459     \}\par
460   {\cf17 private}:\par
461     {\cf18 unsigned} {\cf18 char}* costmap_;\par
462     {\cf18 unsigned} {\cf18 char} value_;\par
463   \};\par
464 \par
465   {\cf17 class }PolygonOutlineCells\par
466   \{\par
467   {\cf17 public}:\par
468     PolygonOutlineCells({\cf17 const} Costmap2D& costmap, {\cf17 const} {\cf18 unsigned} {\cf18 char}* char_map, std::vector<MapLocation>& cells) :\par
469         costmap_(costmap), char_map_(char_map), cells_(cells)\par
470     \{\par
471     \}\par
472 \par
473     {\cf20 // just push the relevant cells back onto the list}\par
474     {\cf17 inline} {\cf18 void} operator()({\cf18 unsigned} {\cf18 int} offset)\par
475     \{\par
476       MapLocation loc;\par
477       costmap_.indexToCells(offset, loc.x, loc.y);\par
478       cells_.push_back(loc);\par
479     \}\par
480 \par
481   {\cf17 private}:\par
482     {\cf17 const} Costmap2D& costmap_;\par
483     {\cf17 const} {\cf18 unsigned} {\cf18 char}* char_map_;\par
484     std::vector<MapLocation>& cells_;\par
485   \};\par
486 \};\par
487 \}  {\cf20 // namespace costmap_2d}\par
488 \par
489 {\cf21 #endif  }{\cf20 // COSTMAP_2D_COSTMAP_2D_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/costmap_2d_publisher.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_2d_publisher.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_2d_publisher.h}
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <nav_msgs/OccupancyGrid.h>}\par
{\f2 #include <map_msgs/OccupancyGridUpdate.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_publisher.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__publisher_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__publisher_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Costmap2DPublisher}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A tool to periodically publish visualization data from a {\b Costmap2D} }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d_publisher.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_2d_publisher.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_2d_publisher.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_COSTMAP_2D_PUBLISHER_H_}\par
39 {\cf21 #define COSTMAP_2D_COSTMAP_2D_PUBLISHER_H_}\par
40 {\cf21 #include <ros/ros.h>}\par
41 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
42 {\cf21 #include <nav_msgs/OccupancyGrid.h>}\par
43 {\cf21 #include <map_msgs/OccupancyGridUpdate.h>}\par
44 \par
45 {\cf17 namespace }costmap_2d\par
46 \{\par
51 {\cf17 class }Costmap2DPublisher\par
52 \{\par
53 {\cf17 public}:\par
57   Costmap2DPublisher(ros::NodeHandle * ros_node, Costmap2D* costmap, std::string global_frame,\par
58                      std::string topic_name, {\cf18 bool} always_send_full_costmap = {\cf17 false});\par
59 \par
63   ~Costmap2DPublisher();\par
64 \par
66   {\cf18 void} updateBounds({\cf18 unsigned} {\cf18 int} x0, {\cf18 unsigned} {\cf18 int} xn, {\cf18 unsigned} {\cf18 int} y0, {\cf18 unsigned} {\cf18 int} yn)\par
67   \{\par
68     x0_ = std::min(x0, x0_);\par
69     xn_ = std::max(xn, xn_);\par
70     y0_ = std::min(y0, y0_);\par
71     yn_ = std::max(yn, yn_);\par
72   \}\par
73 \par
77   {\cf18 void} publishCostmap();\par
78 \par
83   {\cf18 bool} active()\par
84   \{\par
85     {\cf19 return} active_;\par
86   \}\par
87 \par
88 {\cf17 private}:\par
90   {\cf18 void} prepareGrid();\par
91 \par
93   {\cf18 void} onNewSubscription({\cf17 const} ros::SingleSubscriberPublisher& pub);\par
94 \par
95   ros::NodeHandle* node;\par
96   Costmap2D* costmap_;\par
97   std::string global_frame_;\par
98   {\cf18 unsigned} {\cf18 int} x0_, xn_, y0_, yn_;\par
99   {\cf18 double} saved_origin_x_, saved_origin_y_;\par
100   {\cf18 bool} active_;\par
101   {\cf18 bool} always_send_full_costmap_;\par
102   ros::Publisher costmap_pub_;\par
103   ros::Publisher costmap_update_pub_;\par
104   nav_msgs::OccupancyGrid grid_;\par
105   {\cf17 static} {\cf18 char}* cost_translation_table_;  \par
106 \};\par
107 \}  {\cf20 // namespace costmap_2d}\par
108 {\cf21 #endif  }{\cf20 // COSTMAP_2D_COSTMAP_2D_PUBLISHER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/costmap_2d_ros.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_2d_ros.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_2d_ros.h}
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/layer.h>}\par
{\f2 #include <costmap_2d/costmap_2d_publisher.h>}\par
{\f2 #include <costmap_2d/Costmap2DConfig.h>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
{\f2 #include <geometry_msgs/Polygon.h>}\par
{\f2 #include <geometry_msgs/PolygonStamped.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <pluginlib/class_loader.hpp>}\par
{\f2 #include <tf2/LinearMath/Transform.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_ros.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__ros_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__ros_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SuperValue}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Costmap2DROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A ROS wrapper for a 2D Costmap. Handles subscribing to topics that provide observations about obstacles in either the form of PointCloud or LaserScan messages. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d_ros.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_2d_ros.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_2d_ros.h}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_COSTMAP_2D_ROS_H_}\par
39 {\cf21 #define COSTMAP_2D_COSTMAP_2D_ROS_H_}\par
40 \par
41 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
42 {\cf21 #include <costmap_2d/layer.h>}\par
43 {\cf21 #include <costmap_2d/costmap_2d_publisher.h>}\par
44 {\cf21 #include <costmap_2d/Costmap2DConfig.h>}\par
45 {\cf21 #include <costmap_2d/footprint.h>}\par
46 {\cf21 #include <geometry_msgs/Polygon.h>}\par
47 {\cf21 #include <geometry_msgs/PolygonStamped.h>}\par
48 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
49 {\cf21 #include <dynamic_reconfigure/server.h>}\par
50 {\cf21 #include <pluginlib/class_loader.hpp>}\par
51 {\cf21 #include <tf2/LinearMath/Transform.h>}\par
52 \par
53 {\cf17 class }SuperValue : {\cf17 public} XmlRpc::XmlRpcValue\par
54 \{\par
55 {\cf17 public}:\par
56   {\cf18 void} setStruct(XmlRpc::XmlRpcValue::ValueStruct* a)\par
57   \{\par
58     _type = TypeStruct;\par
59     _value.asStruct = {\cf17 new} XmlRpc::XmlRpcValue::ValueStruct(*a);\par
60   \}\par
61   {\cf18 void} setArray(XmlRpc::XmlRpcValue::ValueArray* a)\par
62   \{\par
63     _type = TypeArray;\par
64     _value.asArray = {\cf17 new} std::vector<XmlRpc::XmlRpcValue>(*a);\par
65   \}\par
66 \};\par
67 \par
68 {\cf17 namespace }costmap_2d\par
69 \{\par
70 \par
74 {\cf17 class }Costmap2DROS\par
75 \{\par
76 {\cf17 public}:\par
82   Costmap2DROS({\cf17 const} std::string &name, tf2_ros::Buffer& tf);\par
83   ~Costmap2DROS();\par
84 \par
90   {\cf18 void} start();\par
91 \par
95   {\cf18 void} stop();\par
96 \par
100   {\cf18 void} pause();\par
101 \par
105   {\cf18 void} resume();\par
106 \par
107   {\cf18 void} updateMap();\par
108 \par
112   {\cf18 void} resetLayers();\par
113 \par
115   {\cf18 bool} isCurrent(){\cf17  const}\par
116 {\cf17     }\{\par
117       {\cf19 return} layered_costmap_->isCurrent();\par
118     \}\par
119 \par
123   {\cf18 bool} isStopped(){\cf17  const}\par
124 {\cf17     }\{\par
125       {\cf19 return} stopped_;\par
126     \}\par
127 \par
133   {\cf18 bool} getRobotPose(geometry_msgs::PoseStamped& global_pose) {\cf17 const};\par
134 \par
136   {\cf17 inline} {\cf17 const} std::string& getName() const noexcept\par
137     \{\par
138       {\cf19 return} name_;\par
139     \}\par
140 \par
142   {\cf18 double} getTransformTolerance(){\cf17  const}\par
143 {\cf17     }\{\par
144       {\cf19 return} transform_tolerance_;\par
145     \}\par
146 \par
150   Costmap2D* getCostmap(){\cf17  const}\par
151 {\cf17     }\{\par
152       {\cf19 return} layered_costmap_->getCostmap();\par
153     \}\par
154 \par
159   {\cf17 inline} {\cf17 const} std::string& getGlobalFrameID() const noexcept\par
160     \{\par
161       {\cf19 return} global_frame_;\par
162     \}\par
163 \par
168   {\cf17 inline} {\cf17 const} std::string& getBaseFrameID() const noexcept\par
169     \{\par
170       {\cf19 return} robot_base_frame_;\par
171     \}\par
172   LayeredCostmap* getLayeredCostmap(){\cf17  const}\par
173 {\cf17     }\{\par
174       {\cf19 return} layered_costmap_;\par
175     \}\par
176 \par
178   geometry_msgs::Polygon getRobotFootprintPolygon(){\cf17  const}\par
179 {\cf17   }\{\par
180     {\cf19 return} costmap_2d::toPolygon(padded_footprint_);\par
181   \}\par
182 \par
191   {\cf17 inline} {\cf17 const} std::vector<geometry_msgs::Point>& getRobotFootprint() const noexcept\par
192   \{\par
193     {\cf19 return} padded_footprint_;\par
194   \}\par
195 \par
203   {\cf17 inline} {\cf17 const} std::vector<geometry_msgs::Point>& getUnpaddedRobotFootprint() const noexcept\par
204   \{\par
205     {\cf19 return} unpadded_footprint_;\par
206   \}\par
207 \par
212   {\cf18 void} getOrientedFootprint(std::vector<geometry_msgs::Point>& oriented_footprint) {\cf17 const};\par
213 \par
224   {\cf18 void} setUnpaddedRobotFootprint({\cf17 const} std::vector<geometry_msgs::Point>& points);\par
225 \par
236   {\cf18 void} setUnpaddedRobotFootprintPolygon({\cf17 const} geometry_msgs::Polygon& footprint);\par
237 \par
238 {\cf17 protected}:\par
239   LayeredCostmap* layered_costmap_;\par
240   std::string name_;\par
241   tf2_ros::Buffer& tf_;  \par
242   std::string global_frame_;  \par
243   std::string robot_base_frame_;  \par
244   {\cf18 double} transform_tolerance_;  \par
245 \par
246 {\cf17 private}:\par
251   {\cf18 void} readFootprintFromConfig({\cf17 const} costmap_2d::Costmap2DConfig &new_config,\par
252                                {\cf17 const} costmap_2d::Costmap2DConfig &old_config);\par
253 \par
254   {\cf18 void} loadOldParameters(ros::NodeHandle& nh);\par
255   {\cf18 void} warnForOldParameters(ros::NodeHandle& nh);\par
256   {\cf18 void} checkOldParam(ros::NodeHandle& nh, {\cf17 const} std::string &param_name);\par
257   {\cf18 void} copyParentParameters({\cf17 const} std::string& plugin_name, {\cf17 const} std::string& plugin_type, ros::NodeHandle& nh);\par
258   {\cf18 void} reconfigureCB(costmap_2d::Costmap2DConfig &config, uint32_t level);\par
259   {\cf18 void} movementCB({\cf17 const} ros::TimerEvent &event);\par
260   {\cf18 void} mapUpdateLoop({\cf18 double} frequency);\par
261   {\cf18 bool} map_update_thread_shutdown_;\par
262   {\cf18 bool} stop_updates_, initialized_, stopped_, robot_stopped_;\par
263   boost::thread* map_update_thread_;  \par
264   ros::Timer timer_;\par
265   ros::Time last_publish_;\par
266   ros::Duration publish_cycle;\par
267   pluginlib::ClassLoader<Layer> plugin_loader_;\par
268   geometry_msgs::PoseStamped old_pose_;\par
269   Costmap2DPublisher* publisher_;\par
270   dynamic_reconfigure::Server<costmap_2d::Costmap2DConfig> *dsrv_;\par
271 \par
272   boost::recursive_mutex configuration_mutex_;\par
273 \par
274   ros::Subscriber footprint_sub_;\par
275   ros::Publisher footprint_pub_;\par
276   std::vector<geometry_msgs::Point> unpadded_footprint_;\par
277   std::vector<geometry_msgs::Point> padded_footprint_;\par
278   {\cf18 float} footprint_padding_;\par
279   costmap_2d::Costmap2DConfig old_config_;\par
280 \};\par
281 {\cf20 // class Costmap2DROS}\par
282 \}  {\cf20 // namespace costmap_2d}\par
283 \par
284 {\cf21 #endif  }{\cf20 // COSTMAP_2D_COSTMAP_2D_ROS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/costmap_layer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_layer.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_layer.h}
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/layer.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_layer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__layer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__layer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::CostmapLayer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_layer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_layer.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_layer.h}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_COSTMAP_LAYER_H_}\par
39 {\cf21 #define COSTMAP_2D_COSTMAP_LAYER_H_}\par
40 {\cf21 #include <ros/ros.h>}\par
41 {\cf21 #include <costmap_2d/layer.h>}\par
42 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
43 \par
44 {\cf17 namespace }costmap_2d\par
45 \{\par
46 \par
47 {\cf17 class }CostmapLayer : {\cf17 public} Layer, {\cf17 public} Costmap2D\par
48 \{\par
49 {\cf17 public}:\par
50   CostmapLayer() : has_extra_bounds_(false),\par
51     extra_min_x_(1e6), extra_max_x_(-1e6),\par
52     extra_min_y_(1e6), extra_max_y_(-1e6) \{\}\par
53 \par
54   {\cf18 bool} isDiscretized()\par
55   \{\par
56     {\cf19 return} {\cf17 true};\par
57   \}\par
58 \par
59   {\cf17 virtual} {\cf18 void} matchSize();\par
60 \par
61   {\cf17 virtual} {\cf18 void} clearArea({\cf18 int} start_x, {\cf18 int} start_y, {\cf18 int} end_x, {\cf18 int} end_y, {\cf18 bool} invert_area={\cf17 false});\par
62 \par
72   {\cf18 void} addExtraBounds({\cf18 double} mx0, {\cf18 double} my0, {\cf18 double} mx1, {\cf18 double} my1);\par
73 \par
74 {\cf17 protected}:\par
75   {\cf20 /*}\par
76 {\cf20    * Updates the master_grid within the specified}\par
77 {\cf20    * bounding box using this layer's values.}\par
78 {\cf20    *}\par
79 {\cf20    * TrueOverwrite means every value from this layer}\par
80 {\cf20    * is written into the master grid.}\par
81 {\cf20    */}\par
82   {\cf18 void} updateWithTrueOverwrite(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
83 \par
84   {\cf20 /*}\par
85 {\cf20    * Updates the master_grid within the specified}\par
86 {\cf20    * bounding box using this layer's values.}\par
87 {\cf20    *}\par
88 {\cf20    * Overwrite means every valid value from this layer}\par
89 {\cf20    * is written into the master grid (does not copy NO_INFORMATION)}\par
90 {\cf20    */}\par
91   {\cf18 void} updateWithOverwrite(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
92 \par
93   {\cf20 /*}\par
94 {\cf20    * Updates the master_grid within the specified}\par
95 {\cf20    * bounding box using this layer's values.}\par
96 {\cf20    *}\par
97 {\cf20    * Sets the new value to the maximum of the master_grid's value}\par
98 {\cf20    * and this layer's value. If the master value is NO_INFORMATION,}\par
99 {\cf20    * it is overwritten. If the layer's value is NO_INFORMATION,}\par
100 {\cf20    * the master value does not change.}\par
101 {\cf20    */}\par
102   {\cf18 void} updateWithMax(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
103 \par
104   {\cf20 /*}\par
105 {\cf20    * Updates the master_grid within the specified}\par
106 {\cf20    * bounding box using this layer's values.}\par
107 {\cf20    *}\par
108 {\cf20    * Sets the new value to the sum of the master grid's value}\par
109 {\cf20    * and this layer's value. If the master value is NO_INFORMATION,}\par
110 {\cf20    * it is overwritten with the layer's value. If the layer's value}\par
111 {\cf20    * is NO_INFORMATION, then the master value does not change.}\par
112 {\cf20    *}\par
113 {\cf20    * If the sum value is larger than INSCRIBED_INFLATED_OBSTACLE,}\par
114 {\cf20    * the master value is set to (INSCRIBED_INFLATED_OBSTACLE - 1).}\par
115 {\cf20    */}\par
116   {\cf18 void} updateWithAddition(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
117 \par
129   {\cf18 void} touch({\cf18 double} x, {\cf18 double} y, {\cf18 double}* min_x, {\cf18 double}* min_y, {\cf18 double}* max_x, {\cf18 double}* max_y);\par
130 \par
131   {\cf20 /*}\par
132 {\cf20    * Updates the bounding box specified in the parameters}\par
133 {\cf20    * to include the bounding box from the addExtraBounds}\par
134 {\cf20    * call. If addExtraBounds was not called, the method will do nothing.}\par
135 {\cf20    *}\par
136 {\cf20    * Should be called at the beginning of the updateBounds method}\par
137 {\cf20    *}\par
138 {\cf20    * @param min_x bounding box (input and output)}\par
139 {\cf20    * @param min_y bounding box (input and output)}\par
140 {\cf20    * @param max_x bounding box (input and output)}\par
141 {\cf20    * @param max_y bounding box (input and output)}\par
142 {\cf20    */}\par
143   {\cf18 void} useExtraBounds({\cf18 double}* min_x, {\cf18 double}* min_y, {\cf18 double}* max_x, {\cf18 double}* max_y);\par
144   {\cf18 bool} has_extra_bounds_;\par
145 \par
146 {\cf17 private}:\par
147   {\cf18 double} extra_min_x_, extra_max_x_, extra_min_y_, extra_max_y_;\par
148 \};\par
149 \par
150 \}  {\cf20 // namespace costmap_2d}\par
151 {\cf21 #endif  }{\cf20 // COSTMAP_2D_COSTMAP_LAYER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/costmap_math.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_math.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_math.h}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_math.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sign} (double x)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return -1 if x < 0, +1 otherwise. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sign0} (double x)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as sign(x) but returns 0 if x is 0. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distance} (double x0, double y0, double x1, double y1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceToLine} (double pX, double pY, double x0, double y0, double x1, double y1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b intersects} (std::vector< geometry_msgs::Point > &polygon, float testx, float testy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b intersects} (std::vector< geometry_msgs::Point > &polygon1, std::vector< geometry_msgs::Point > &polygon2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v distance\:costmap_math.h}
{\xe \v costmap_math.h\:distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double distance (double  {\i x0}, double  {\i y0}, double  {\i x1}, double  {\i y1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h_a98aba4ec7ccaf3b54f2a312e2db8ba98_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v distanceToLine\:costmap_math.h}
{\xe \v costmap_math.h\:distanceToLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double distanceToLine (double  {\i pX}, double  {\i pY}, double  {\i x0}, double  {\i y0}, double  {\i x1}, double  {\i y1})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h_a31fe9c9633687b41b7c65a18dcab85f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h_a31fe9c9633687b41b7c65a18dcab85f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v intersects\:costmap_math.h}
{\xe \v costmap_math.h\:intersects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool intersects (std::vector< geometry_msgs::Point > &  {\i polygon}, float  {\i testx}, float  {\i testy})}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h_a567784da85da753bdd72f7faf2bdf7b6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v intersects\:costmap_math.h}
{\xe \v costmap_math.h\:intersects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool intersects (std::vector< geometry_msgs::Point > &  {\i polygon1}, std::vector< geometry_msgs::Point > &  {\i polygon2})}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h_a73fceb516298f9b095d8ee0a61957695_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sign\:costmap_math.h}
{\xe \v costmap_math.h\:sign}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sign (double  {\i x}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return -1 if x < 0, +1 otherwise. }}\par
}
{\xe \v sign0\:costmap_math.h}
{\xe \v costmap_math.h\:sign0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double sign0 (double  {\i x}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Same as sign(x) but returns 0 if x is 0. }}\par
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8h_a07fdddafa7ce762bfda59e7146a194ae_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_math.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/costmap_math.h}
{\xe \v costmap_2d/include/costmap_2d/costmap_math.h}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_COSTMAP_MATH_H_}\par
39 {\cf21 #define COSTMAP_2D_COSTMAP_MATH_H_}\par
40 \par
41 {\cf21 #include <math.h>}\par
42 {\cf21 #include <algorithm>}\par
43 {\cf21 #include <vector>}\par
44 {\cf21 #include <geometry_msgs/Point.h>}\par
45 \par
47 {\cf17 inline} {\cf18 double} sign({\cf18 double} x)\par
48 \{\par
49   {\cf19 return} x < 0.0 ? -1.0 : 1.0;\par
50 \}\par
51 \par
53 {\cf17 inline} {\cf18 double} sign0({\cf18 double} x)\par
54 \{\par
55   {\cf19 return} x < 0.0 ? -1.0 : (x > 0.0 ? 1.0 : 0.0);\par
56 \}\par
57 \par
58 {\cf17 inline} {\cf18 double} distance({\cf18 double} x0, {\cf18 double} y0, {\cf18 double} x1, {\cf18 double} y1)\par
59 \{\par
60   {\cf19 return} hypot(x1 - x0, y1 - y0);\par
61 \}\par
62 \par
63 {\cf18 double} distanceToLine({\cf18 double} pX, {\cf18 double} pY, {\cf18 double} x0, {\cf18 double} y0, {\cf18 double} x1, {\cf18 double} y1);\par
64 \par
65 {\cf18 bool} intersects(std::vector<geometry_msgs::Point>& polygon, {\cf18 float} testx, {\cf18 float} testy);\par
66 \par
67 {\cf18 bool} intersects(std::vector<geometry_msgs::Point>& polygon1, std::vector<geometry_msgs::Point>& polygon2);\par
68 \par
69 {\cf21 #endif  }{\cf20 // COSTMAP_2D_COSTMAP_MATH_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/footprint.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/footprint.h}
{\xe \v costmap_2d/include/costmap_2d/footprint.h}
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <geometry_msgs/Polygon.h>}\par
{\f2 #include <geometry_msgs/PolygonStamped.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <geometry_msgs/Point32.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid footprint.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::calculateMinAndMaxDistances} (const std::vector< geometry_msgs::Point > &footprint, double &min_dist, double &max_dist)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the extreme distances for the footprint }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point {\b costmap_2d::toPoint} (geometry_msgs::Point32 pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point32 to Point }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point32 {\b costmap_2d::toPoint32} (geometry_msgs::Point pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point to Point32 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Polygon {\b costmap_2d::toPolygon} (std::vector< geometry_msgs::Point > pts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert vector of Points to Polygon msg }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::toPointVector} (geometry_msgs::Polygon polygon)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Polygon msg to vector of Points. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::transformFootprint} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, std::vector< geometry_msgs::Point > &oriented_footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (list of Points) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::transformFootprint} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, geometry_msgs::PolygonStamped &oriented_footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (PolygonStamped) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::padFootprint} (std::vector< geometry_msgs::Point > &footprint, double padding)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the specified amount of padding to the footprint (in place) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::makeFootprintFromRadius} (double radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a circular footprint from a given radius }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b costmap_2d::makeFootprintFromString} (const std::string &footprint_string, std::vector< geometry_msgs::Point > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the footprint from the given string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::makeFootprintFromParams} (ros::NodeHandle &nh)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the ros-params "footprint" and/or "robot_radius" from the given NodeHandle using searchParam() to go up the tree. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::makeFootprintFromXMLRPC} (XmlRpc::XmlRpcValue &footprint_xmlrpc, const std::string &full_param_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the footprint from the given XmlRpcValue. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::writeFootprintToParam} (ros::NodeHandle &nh, const std::vector< geometry_msgs::Point > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write the current unpadded_footprint_ to the "footprint" parameter of the given NodeHandle so that dynamic_reconfigure will see the new value. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
footprint.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/footprint.h}
{\xe \v costmap_2d/include/costmap_2d/footprint.h}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_FOOTPRINT_H}\par
39 {\cf21 #define COSTMAP_2D_FOOTPRINT_H}\par
40 \par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <geometry_msgs/Polygon.h>}\par
43 {\cf21 #include <geometry_msgs/PolygonStamped.h>}\par
44 {\cf21 #include <geometry_msgs/Point.h>}\par
45 {\cf21 #include <geometry_msgs/Point32.h>}\par
46 \par
47 {\cf17 namespace }costmap_2d\par
48 \{\par
49 \par
57 {\cf18 void} calculateMinAndMaxDistances({\cf17 const} std::vector<geometry_msgs::Point>& footprint,\par
58                                  {\cf18 double}& min_dist, {\cf18 double}& max_dist);\par
59 \par
63 geometry_msgs::Point              toPoint(geometry_msgs::Point32 pt);\par
64 \par
68 geometry_msgs::Point32            toPoint32(geometry_msgs::Point   pt);\par
69 \par
73 geometry_msgs::Polygon            toPolygon(std::vector<geometry_msgs::Point> pts);\par
74 \par
78 std::vector<geometry_msgs::Point> toPointVector(geometry_msgs::Polygon polygon);\par
79 \par
88 {\cf18 void} transformFootprint({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf17 const} std::vector<geometry_msgs::Point>& footprint_spec,\par
89                         std::vector<geometry_msgs::Point>& oriented_footprint);\par
90 \par
99 {\cf18 void} transformFootprint({\cf18 double} x, {\cf18 double} y, {\cf18 double} theta, {\cf17 const} std::vector<geometry_msgs::Point>& footprint_spec,\par
100                         geometry_msgs::PolygonStamped & oriented_footprint);\par
101 \par
105 {\cf18 void} padFootprint(std::vector<geometry_msgs::Point>& footprint, {\cf18 double} padding);\par
106 \par
110 std::vector<geometry_msgs::Point> makeFootprintFromRadius({\cf18 double} radius);\par
111 \par
118 {\cf18 bool} makeFootprintFromString({\cf17 const} std::string& footprint_string, std::vector<geometry_msgs::Point>& footprint);\par
119 \par
124 std::vector<geometry_msgs::Point> makeFootprintFromParams(ros::NodeHandle& nh);\par
125 \par
137 std::vector<geometry_msgs::Point> makeFootprintFromXMLRPC(XmlRpc::XmlRpcValue& footprint_xmlrpc,\par
138                                 {\cf17 const} std::string& full_param_name);\par
139 \par
143 {\cf18 void} writeFootprintToParam(ros::NodeHandle& nh, {\cf17 const} std::vector<geometry_msgs::Point>& footprint);\par
144 \par
145 \}  {\cf20 // end namespace costmap_2d}\par
146 \par
147 {\cf21 #endif  }{\cf20 // COSTMAP_2D_FOOTPRINT_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/inflation_layer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/inflation_layer.h}
{\xe \v costmap_2d/include/costmap_2d/inflation_layer.h}
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/layer.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/InflationPluginConfig.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <boost/thread.hpp>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid inflation_layer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__layer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__layer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::CellData}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Storage for cell information used during obstacle inflation }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::InflationLayer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
inflation_layer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/inflation_layer.h}
{\xe \v costmap_2d/include/costmap_2d/inflation_layer.h}
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_INFLATION_LAYER_H_}\par
39 {\cf21 #define COSTMAP_2D_INFLATION_LAYER_H_}\par
40 \par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <costmap_2d/layer.h>}\par
43 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
44 {\cf21 #include <costmap_2d/InflationPluginConfig.h>}\par
45 {\cf21 #include <dynamic_reconfigure/server.h>}\par
46 {\cf21 #include <boost/thread.hpp>}\par
47 \par
48 {\cf17 namespace }costmap_2d\par
49 \{\par
54 {\cf17 class }CellData\par
55 \{\par
56 {\cf17 public}:\par
66   CellData({\cf18 double} i, {\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} sx, {\cf18 unsigned} {\cf18 int} sy) :\par
67       index_(i), x_(x), y_(y), src_x_(sx), src_y_(sy)\par
68   \{\par
69   \}\par
70   {\cf18 unsigned} {\cf18 int} index_;\par
71   {\cf18 unsigned} {\cf18 int} x_, y_;\par
72   {\cf18 unsigned} {\cf18 int} src_x_, src_y_;\par
73 \};\par
74 \par
75 {\cf17 class }InflationLayer : {\cf17 public} Layer\par
76 \{\par
77 {\cf17 public}:\par
78   InflationLayer();\par
79 \par
80   {\cf17 virtual} ~InflationLayer()\par
81   \{\par
82     deleteKernels();\par
83     {\cf19 if} (dsrv_)\par
84         {\cf17 delete} dsrv_;\par
85     {\cf19 if} (seen_)\par
86         {\cf17 delete}[] seen_;\par
87   \}\par
88 \par
89   {\cf17 virtual} {\cf18 void} onInitialize();\par
90   {\cf17 virtual} {\cf18 void} updateBounds({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
91                             {\cf18 double}* max_x, {\cf18 double}* max_y);\par
92   {\cf17 virtual} {\cf18 void} updateCosts(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
93   {\cf17 virtual} {\cf18 bool} isDiscretized()\par
94   \{\par
95     {\cf19 return} {\cf17 true};\par
96   \}\par
97   {\cf17 virtual} {\cf18 void} matchSize();\par
98 \par
99   {\cf17 virtual} {\cf18 void} reset() \{ onInitialize(); \}\par
100 \par
107   {\cf17 virtual} {\cf17 inline} {\cf18 unsigned} {\cf18 char} computeCost({\cf18 double} distance){\cf17  const}\par
108 {\cf17   }\{\par
109     {\cf18 unsigned} {\cf18 char} cost = 0;\par
110     {\cf19 if} (distance == 0)\par
111       cost = LETHAL_OBSTACLE;\par
112     {\cf19 else} {\cf19 if} (distance * resolution_ <= inscribed_radius_)\par
113       cost = INSCRIBED_INFLATED_OBSTACLE;\par
114     {\cf19 else}\par
115     \{\par
116       {\cf20 // make sure cost falls off by Euclidean distance}\par
117       {\cf18 double} euclidean_distance = distance * resolution_;\par
118       {\cf18 double} factor = exp(-1.0 * weight_ * (euclidean_distance - inscribed_radius_));\par
119       cost = ({\cf18 unsigned} char)((INSCRIBED_INFLATED_OBSTACLE - 1) * factor);\par
120     \}\par
121     {\cf19 return} cost;\par
122   \}\par
123 \par
129   {\cf18 void} setInflationParameters({\cf18 double} inflation_radius, {\cf18 double} cost_scaling_factor);\par
130 \par
131 {\cf17 protected}:\par
132   {\cf17 virtual} {\cf18 void} onFootprintChanged();\par
133   boost::recursive_mutex* inflation_access_;\par
134 \par
135   {\cf18 double} resolution_;\par
136   {\cf18 double} inflation_radius_;\par
137   {\cf18 double} inscribed_radius_;\par
138   {\cf18 double} weight_;\par
139   {\cf18 bool} inflate_unknown_;\par
140 \par
141 {\cf17 private}:\par
150   {\cf17 inline} {\cf18 double} distanceLookup({\cf18 int} mx, {\cf18 int} my, {\cf18 int} src_x, {\cf18 int} src_y)\par
151   \{\par
152     {\cf18 unsigned} {\cf18 int} dx = abs(mx - src_x);\par
153     {\cf18 unsigned} {\cf18 int} dy = abs(my - src_y);\par
154     {\cf19 return} cached_distances_[dx][dy];\par
155   \}\par
156 \par
165   {\cf17 inline} {\cf18 unsigned} {\cf18 char} costLookup({\cf18 int} mx, {\cf18 int} my, {\cf18 int} src_x, {\cf18 int} src_y)\par
166   \{\par
167     {\cf18 unsigned} {\cf18 int} dx = abs(mx - src_x);\par
168     {\cf18 unsigned} {\cf18 int} dy = abs(my - src_y);\par
169     {\cf19 return} cached_costs_[dx][dy];\par
170   \}\par
171 \par
172   {\cf18 void} computeCaches();\par
173   {\cf18 void} deleteKernels();\par
174   {\cf18 void} inflate_area({\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j, {\cf18 unsigned} {\cf18 char}* master_grid);\par
175 \par
176   {\cf18 unsigned} {\cf18 int} cellDistance({\cf18 double} world_dist)\par
177   \{\par
178     {\cf19 return} layered_costmap_->getCostmap()->cellDistance(world_dist);\par
179   \}\par
180 \par
181   {\cf17 inline} {\cf18 void} enqueue({\cf18 unsigned} {\cf18 int} index, {\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my,\par
182                       {\cf18 unsigned} {\cf18 int} src_x, {\cf18 unsigned} {\cf18 int} src_y);\par
183 \par
184   {\cf18 unsigned} {\cf18 int} cell_inflation_radius_;\par
185   {\cf18 unsigned} {\cf18 int} cached_cell_inflation_radius_;\par
186   std::map<double, std::vector<CellData> > inflation_cells_;\par
187 \par
188   {\cf18 bool}* seen_;\par
189   {\cf18 int} seen_size_;\par
190 \par
191   {\cf18 unsigned} {\cf18 char}** cached_costs_;\par
192   {\cf18 double}** cached_distances_;\par
193   {\cf18 double} last_min_x_, last_min_y_, last_max_x_, last_max_y_;\par
194 \par
195   dynamic_reconfigure::Server<costmap_2d::InflationPluginConfig> *dsrv_;\par
196   {\cf18 void} reconfigureCB(costmap_2d::InflationPluginConfig &config, uint32_t level);\par
197 \par
198   {\cf18 bool} need_reinflation_;  \par
199 \};\par
200 \par
201 \}  {\cf20 // namespace costmap_2d}\par
202 \par
203 {\cf21 #endif  }{\cf20 // COSTMAP_2D_INFLATION_LAYER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/layer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/layer.h}
{\xe \v costmap_2d/include/costmap_2d/layer.h}
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <string>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid layer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "layer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "layer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Layer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
layer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/layer.h}
{\xe \v costmap_2d/include/costmap_2d/layer.h}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: David V. Lu!!}\par
36 {\cf20  *********************************************************************/}\par
37 {\cf21 #ifndef COSTMAP_2D_LAYER_H_}\par
38 {\cf21 #define COSTMAP_2D_LAYER_H_}\par
39 \par
40 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
41 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
42 {\cf21 #include <string>}\par
43 {\cf21 #include <tf2_ros/buffer.h>}\par
44 \par
45 {\cf17 namespace }costmap_2d\par
46 \{\par
47 {\cf17 class }LayeredCostmap;\par
48 \par
49 {\cf17 class }Layer\par
50 \{\par
51 {\cf17 public}:\par
52   Layer();\par
53 \par
54   {\cf18 void} initialize(LayeredCostmap* parent, std::string name, tf2_ros::Buffer *tf);\par
55 \par
64   {\cf17 virtual} {\cf18 void} updateBounds({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
65                             {\cf18 double}* max_x, {\cf18 double}* max_y) \{\}\par
66 \par
71   {\cf17 virtual} {\cf18 void} updateCosts(Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j) \{\}\par
72 \par
74   {\cf17 virtual} {\cf18 void} deactivate() \{\}\par
75 \par
77   {\cf17 virtual} {\cf18 void} activate() \{\}\par
78 \par
79   {\cf17 virtual} {\cf18 void} reset() \{\}\par
80 \par
81   {\cf17 virtual} ~Layer() \{\}\par
82 \par
93   {\cf18 bool} isCurrent(){\cf17  const}\par
94 {\cf17   }\{\par
95     {\cf19 return} current_;\par
96   \}\par
97 \par
111   {\cf17 inline} {\cf18 bool} isEnabled() const noexcept\par
112   \{\par
113     {\cf19 return} enabled_;\par
114   \}\par
115 \par
117   {\cf17 virtual} {\cf18 void} matchSize() \{\}\par
118 \par
119   {\cf17 inline} {\cf17 const} std::string& getName() const noexcept\par
120   \{\par
121     {\cf19 return} name_;\par
122   \}\par
123 \par
125   {\cf17 const} std::vector<geometry_msgs::Point>& getFootprint() {\cf17 const};\par
126 \par
130   {\cf17 virtual} {\cf18 void} onFootprintChanged() \{\}\par
131 \par
132 {\cf17 protected}:\par
137   {\cf17 virtual} {\cf18 void} onInitialize() \{\}\par
138 \par
139   LayeredCostmap* layered_costmap_;\par
140   {\cf18 bool} current_;\par
141   {\cf18 bool} enabled_;\par
142   std::string name_;\par
143   tf2_ros::Buffer *tf_;\par
144 \par
145 {\cf17 private}:\par
146   std::vector<geometry_msgs::Point> footprint_spec_;\par
147 \};\par
148 \par
149 \}  {\cf20 // namespace costmap_2d}\par
150 \par
151 {\cf21 #endif  }{\cf20 // COSTMAP_2D_LAYER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/layered_costmap.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/layered_costmap.h}
{\xe \v costmap_2d/include/costmap_2d/layered_costmap.h}
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/cost_values.h>}\par
{\f2 #include <costmap_2d/layer.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid layered_costmap.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "layered__costmap_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "layered__costmap_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::LayeredCostmap}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates different layer plugins and aggregates them into one score }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
layered_costmap.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/layered_costmap.h}
{\xe \v costmap_2d/include/costmap_2d/layered_costmap.h}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_LAYERED_COSTMAP_H_}\par
39 {\cf21 #define COSTMAP_2D_LAYERED_COSTMAP_H_}\par
40 \par
41 {\cf21 #include <costmap_2d/cost_values.h>}\par
42 {\cf21 #include <costmap_2d/layer.h>}\par
43 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
44 {\cf21 #include <vector>}\par
45 {\cf21 #include <string>}\par
46 \par
47 {\cf17 namespace }costmap_2d\par
48 \{\par
49 {\cf17 class }Layer;\par
50 \par
55 {\cf17 class }LayeredCostmap\par
56 \{\par
57 {\cf17 public}:\par
61   LayeredCostmap(std::string global_frame, {\cf18 bool} rolling_window, {\cf18 bool} track_unknown);\par
62 \par
66   ~LayeredCostmap();\par
67 \par
72   {\cf18 void} updateMap({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw);\par
73 \par
74   {\cf17 inline} {\cf17 const} std::string& getGlobalFrameID() const noexcept\par
75   \{\par
76     {\cf19 return} global_frame_;\par
77   \}\par
78 \par
79   {\cf18 void} resizeMap({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y, {\cf18 double} resolution, {\cf18 double} origin_x, {\cf18 double} origin_y,\par
80                  {\cf18 bool} size_locked = {\cf17 false});\par
81 \par
82   {\cf18 void} getUpdatedBounds({\cf18 double}& minx, {\cf18 double}& miny, {\cf18 double}& maxx, {\cf18 double}& maxy)\par
83   \{\par
84     minx = minx_;\par
85     miny = miny_;\par
86     maxx = maxx_;\par
87     maxy = maxy_;\par
88   \}\par
89 \par
90   {\cf18 bool} isCurrent();\par
91 \par
92   Costmap2D* getCostmap()\par
93   \{\par
94     {\cf19 return} &costmap_;\par
95   \}\par
96 \par
97   {\cf18 bool} isRolling()\par
98   \{\par
99     {\cf19 return} rolling_window_;\par
100   \}\par
101 \par
102   {\cf18 bool} isTrackingUnknown()\par
103   \{\par
104     {\cf19 return} costmap_.getDefaultValue() == costmap_2d::NO_INFORMATION;\par
105   \}\par
106 \par
107   std::vector<boost::shared_ptr<Layer> >* getPlugins()\par
108   \{\par
109     {\cf19 return} &plugins_;\par
110   \}\par
111 \par
112   {\cf18 void} addPlugin(boost::shared_ptr<Layer> plugin)\par
113   \{\par
114     plugins_.push_back(plugin);\par
115   \}\par
116 \par
117   {\cf18 bool} isSizeLocked()\par
118   \{\par
119     {\cf19 return} size_locked_;\par
120   \}\par
121 \par
122   {\cf18 void} getBounds({\cf18 unsigned} {\cf18 int}* x0, {\cf18 unsigned} {\cf18 int}* xn, {\cf18 unsigned} {\cf18 int}* y0, {\cf18 unsigned} {\cf18 int}* yn)\par
123   \{\par
124     *x0 = bx0_;\par
125     *xn = bxn_;\par
126     *y0 = by0_;\par
127     *yn = byn_;\par
128   \}\par
129 \par
130   {\cf18 bool} isInitialized()\par
131   \{\par
132       {\cf19 return} initialized_;\par
133   \}\par
134 \par
138   {\cf18 void} setFootprint({\cf17 const} std::vector<geometry_msgs::Point>& footprint_spec);\par
139 \par
141   {\cf17 const} std::vector<geometry_msgs::Point>& getFootprint() \{ {\cf19 return} footprint_; \}\par
142 \par
148   {\cf18 double} getCircumscribedRadius() \{ {\cf19 return} circumscribed_radius_; \}\par
149 \par
155   {\cf18 double} getInscribedRadius() \{ {\cf19 return} inscribed_radius_; \}\par
156 \par
157 {\cf17 private}:\par
158   Costmap2D costmap_;\par
159   std::string global_frame_;\par
160 \par
161   {\cf18 bool} rolling_window_;  \par
162 \par
163   {\cf18 bool} current_;\par
164   {\cf18 double} minx_, miny_, maxx_, maxy_;\par
165   {\cf18 unsigned} {\cf18 int} bx0_, bxn_, by0_, byn_;\par
166 \par
167   std::vector<boost::shared_ptr<Layer> > plugins_;\par
168 \par
169   {\cf18 bool} initialized_;\par
170   {\cf18 bool} size_locked_;\par
171   {\cf18 double} circumscribed_radius_, inscribed_radius_;\par
172   std::vector<geometry_msgs::Point> footprint_;\par
173 \};\par
174 \par
175 \}  {\cf20 // namespace costmap_2d}\par
176 \par
177 {\cf21 #endif  }{\cf20 // COSTMAP_2D_LAYERED_COSTMAP_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/observation.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/observation.h}
{\xe \v costmap_2d/include/costmap_2d/observation.h}
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid observation.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "observation_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "observation_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::Observation}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Stores an observation in terms of a point cloud and the origin of the source }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
observation.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/observation.h}
{\xe \v costmap_2d/include/costmap_2d/observation.h}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
3 {\cf20  * All rights reserved.}\par
4 {\cf20  *}\par
5 {\cf20  * Redistribution and use in source and binary forms, with or without}\par
6 {\cf20  * modification, are permitted provided that the following conditions are met:}\par
7 {\cf20  *}\par
8 {\cf20  *     * Redistributions of source code must retain the above copyright}\par
9 {\cf20  *       notice, this list of conditions and the following disclaimer.}\par
10 {\cf20  *     * Redistributions in binary form must reproduce the above copyright}\par
11 {\cf20  *       notice, this list of conditions and the following disclaimer in the}\par
12 {\cf20  *       documentation and/or other materials provided with the distribution.}\par
13 {\cf20  *     * Neither the name of the Willow Garage, Inc. nor the names of its}\par
14 {\cf20  *       contributors may be used to endorse or promote products derived from}\par
15 {\cf20  *       this software without specific prior written permission.}\par
16 {\cf20  *}\par
17 {\cf20  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"}\par
18 {\cf20  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE}\par
19 {\cf20  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE}\par
20 {\cf20  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE}\par
21 {\cf20  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR}\par
22 {\cf20  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF}\par
23 {\cf20  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS}\par
24 {\cf20  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN}\par
25 {\cf20  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)}\par
26 {\cf20  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
27 {\cf20  * POSSIBILITY OF SUCH DAMAGE.}\par
28 {\cf20  *}\par
29 {\cf20  * Authors: Conor McGann}\par
30 {\cf20  */}\par
31 \par
32 {\cf21 #ifndef COSTMAP_2D_OBSERVATION_H_}\par
33 {\cf21 #define COSTMAP_2D_OBSERVATION_H_}\par
34 \par
35 {\cf21 #include <geometry_msgs/Point.h>}\par
36 {\cf21 #include <sensor_msgs/PointCloud2.h>}\par
37 \par
38 {\cf17 namespace }costmap_2d\par
39 \{\par
40 \par
46 {\cf17 class }Observation\par
47 \{\par
48 {\cf17 public}:\par
52   Observation() :\par
53     cloud_(new sensor_msgs::PointCloud2()), obstacle_range_(0.0), raytrace_range_(0.0)\par
54   \{\par
55   \}\par
56 \par
57   {\cf17 virtual} ~Observation()\par
58   \{\par
59     {\cf17 delete} cloud_;\par
60   \}\par
61 \par
69   Observation(geometry_msgs::Point& origin, {\cf17 const} sensor_msgs::PointCloud2 &cloud,\par
70               {\cf18 double} obstacle_range, {\cf18 double} raytrace_range) :\par
71       origin_(origin), cloud_(new sensor_msgs::PointCloud2(cloud)),\par
72       obstacle_range_(obstacle_range), raytrace_range_(raytrace_range)\par
73   \{\par
74   \}\par
75 \par
80   Observation({\cf17 const} Observation& obs) :\par
81       origin_(obs.origin_), cloud_(new sensor_msgs::PointCloud2(*(obs.cloud_))),\par
82       obstacle_range_(obs.obstacle_range_), raytrace_range_(obs.raytrace_range_)\par
83   \{\par
84   \}\par
85 \par
91   Observation({\cf17 const} sensor_msgs::PointCloud2 &cloud, {\cf18 double} obstacle_range) :\par
92       cloud_(new sensor_msgs::PointCloud2(cloud)), obstacle_range_(obstacle_range), raytrace_range_(0.0)\par
93   \{\par
94   \}\par
95 \par
96   geometry_msgs::Point origin_;\par
97   sensor_msgs::PointCloud2* cloud_;\par
98   {\cf18 double} obstacle_range_, raytrace_range_;\par
99 \};\par
100 \par
101 \}  {\cf20 // namespace costmap_2d}\par
102 {\cf21 #endif  }{\cf20 // COSTMAP_2D_OBSERVATION_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/observation_buffer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/observation_buffer.h}
{\xe \v costmap_2d/include/costmap_2d/observation_buffer.h}
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <list>}\par
{\f2 #include <string>}\par
{\f2 #include <ros/time.h>}\par
{\f2 #include <costmap_2d/observation.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
{\f2 #include <boost/thread.hpp>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid observation_buffer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "observation__buffer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "observation__buffer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::ObservationBuffer}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Takes in point clouds from sensors, transforms them to the desired frame, and stores them }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
observation_buffer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/observation_buffer.h}
{\xe \v costmap_2d/include/costmap_2d/observation_buffer.h}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *********************************************************************/}\par
37 {\cf21 #ifndef COSTMAP_2D_OBSERVATION_BUFFER_H_}\par
38 {\cf21 #define COSTMAP_2D_OBSERVATION_BUFFER_H_}\par
39 \par
40 {\cf21 #include <vector>}\par
41 {\cf21 #include <list>}\par
42 {\cf21 #include <string>}\par
43 {\cf21 #include <ros/time.h>}\par
44 {\cf21 #include <costmap_2d/observation.h>}\par
45 {\cf21 #include <tf2_ros/buffer.h>}\par
46 \par
47 {\cf21 #include <sensor_msgs/PointCloud2.h>}\par
48 \par
49 {\cf20 // Thread support}\par
50 {\cf21 #include <boost/thread.hpp>}\par
51 \par
52 {\cf17 namespace }costmap_2d\par
53 \{\par
58 {\cf17 class }ObservationBuffer\par
59 \{\par
60 {\cf17 public}:\par
75   ObservationBuffer(std::string topic_name, {\cf18 double} observation_keep_time, {\cf18 double} expected_update_rate,\par
76                     {\cf18 double} min_obstacle_height, {\cf18 double} max_obstacle_height, {\cf18 double} obstacle_range,\par
77                     {\cf18 double} raytrace_range, tf2_ros::Buffer& tf2_buffer, std::string global_frame,\par
78                     std::string sensor_frame, {\cf18 double} tf_tolerance);\par
79 \par
83   ~ObservationBuffer();\par
84 \par
92   {\cf18 bool} setGlobalFrame({\cf17 const} std::string new_global_frame);\par
93 \par
99   {\cf18 void} bufferCloud({\cf17 const} sensor_msgs::PointCloud2& cloud);\par
100 \par
105   {\cf18 void} getObservations(std::vector<Observation>& observations);\par
106 \par
111   {\cf18 bool} isCurrent() {\cf17 const};\par
112 \par
116   {\cf17 inline} {\cf18 void} lock()\par
117   \{\par
118     lock_.lock();\par
119   \}\par
120 \par
124   {\cf17 inline} {\cf18 void} unlock()\par
125   \{\par
126     lock_.unlock();\par
127   \}\par
128 \par
132   {\cf18 void} resetLastUpdated();\par
133 \par
134 {\cf17 private}:\par
138   {\cf18 void} purgeStaleObservations();\par
139 \par
140   tf2_ros::Buffer& tf2_buffer_;\par
141   {\cf17 const} ros::Duration observation_keep_time_;\par
142   {\cf17 const} ros::Duration expected_update_rate_;\par
143   ros::Time last_updated_;\par
144   std::string global_frame_;\par
145   std::string sensor_frame_;\par
146   std::list<Observation> observation_list_;\par
147   std::string topic_name_;\par
148   {\cf18 double} min_obstacle_height_, max_obstacle_height_;\par
149   boost::recursive_mutex lock_;  \par
150   {\cf18 double} obstacle_range_, raytrace_range_;\par
151   {\cf18 double} tf_tolerance_;\par
152 \};\par
153 \}  {\cf20 // namespace costmap_2d}\par
154 {\cf21 #endif  }{\cf20 // COSTMAP_2D_OBSERVATION_BUFFER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/obstacle_layer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/obstacle_layer.h}
{\xe \v costmap_2d/include/costmap_2d/obstacle_layer.h}
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_layer.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <nav_msgs/OccupancyGrid.h>}\par
{\f2 #include <sensor_msgs/LaserScan.h>}\par
{\f2 #include <laser_geometry/laser_geometry.h>}\par
{\f2 #include <sensor_msgs/PointCloud.h>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
{\f2 #include <sensor_msgs/point_cloud_conversion.h>}\par
{\f2 #include <tf2_ros/message_filter.h>}\par
{\f2 #include <message_filters/subscriber.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <costmap_2d/ObstaclePluginConfig.h>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid obstacle_layer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__layer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__layer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::ObstacleLayer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
obstacle_layer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/obstacle_layer.h}
{\xe \v costmap_2d/include/costmap_2d/obstacle_layer.h}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_OBSTACLE_LAYER_H_}\par
39 {\cf21 #define COSTMAP_2D_OBSTACLE_LAYER_H_}\par
40 \par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <costmap_2d/costmap_layer.h>}\par
43 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
44 {\cf21 #include <costmap_2d/observation_buffer.h>}\par
45 \par
46 {\cf21 #include <nav_msgs/OccupancyGrid.h>}\par
47 \par
48 {\cf21 #include <sensor_msgs/LaserScan.h>}\par
49 {\cf21 #include <laser_geometry/laser_geometry.h>}\par
50 {\cf21 #include <sensor_msgs/PointCloud.h>}\par
51 {\cf21 #include <sensor_msgs/PointCloud2.h>}\par
52 {\cf21 #include <sensor_msgs/point_cloud_conversion.h>}\par
53 {\cf21 #include <tf2_ros/message_filter.h>}\par
54 {\cf21 #include <message_filters/subscriber.h>}\par
55 {\cf21 #include <dynamic_reconfigure/server.h>}\par
56 {\cf21 #include <costmap_2d/ObstaclePluginConfig.h>}\par
57 {\cf21 #include <costmap_2d/footprint.h>}\par
58 \par
59 {\cf17 namespace }costmap_2d\par
60 \{\par
61 \par
62 {\cf17 class }ObstacleLayer : {\cf17 public} CostmapLayer\par
63 \{\par
64 {\cf17 public}:\par
65   ObstacleLayer()\par
66   \{\par
67     {\cf20 // \'BD\'AB\'D5\'CF\'B0\'AD\'B2\'E3\'C9\'E8\'D6\'C3\'CE\'AA\'BF\'D5\'D6\'B5}\par
68     costmap_ = NULL;  {\cf20 // this is the unsigned char* member of parent class Costmap2D.}\par
69   \}\par
70 \par
71   {\cf17 virtual} ~ObstacleLayer();\par
72   {\cf17 virtual} {\cf18 void} onInitialize();\par
73   {\cf17 virtual} {\cf18 void} updateBounds({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
74                             {\cf18 double}* max_x, {\cf18 double}* max_y);\par
75   {\cf17 virtual} {\cf18 void} updateCosts(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
76 \par
77   {\cf17 virtual} {\cf18 void} activate();\par
78   {\cf17 virtual} {\cf18 void} deactivate();\par
79   {\cf17 virtual} {\cf18 void} reset();\par
80 \par
86   {\cf18 void} laserScanCallback({\cf17 const} sensor_msgs::LaserScanConstPtr& message,\par
87                          {\cf17 const} boost::shared_ptr<costmap_2d::ObservationBuffer>& buffer);\par
88 \par
94   {\cf18 void} laserScanValidInfCallback({\cf17 const} sensor_msgs::LaserScanConstPtr& message,\par
95                                  {\cf17 const} boost::shared_ptr<ObservationBuffer>& buffer);\par
96 \par
102   {\cf18 void} pointCloudCallback({\cf17 const} sensor_msgs::PointCloudConstPtr& message,\par
103                           {\cf17 const} boost::shared_ptr<costmap_2d::ObservationBuffer>& buffer);\par
104 \par
110   {\cf18 void} pointCloud2Callback({\cf17 const} sensor_msgs::PointCloud2ConstPtr& message,\par
111                            {\cf17 const} boost::shared_ptr<costmap_2d::ObservationBuffer>& buffer);\par
112 \par
113   {\cf20 // \'B8\'C3\'BA\'AF\'CA\'FD\'D3\'C3\'D3\'DA\'B2\'E2\'CA\'D4\'C4\'BF\'B5\'C4}\par
114   {\cf18 void} addStaticObservation(costmap_2d::Observation& obs, {\cf18 bool} marking, {\cf18 bool} clearing);\par
115   {\cf18 void} clearStaticObservations({\cf18 bool} marking, {\cf18 bool} clearing);\par
116 \par
117 {\cf17 protected}:\par
118   {\cf17 virtual} {\cf18 void} setupDynamicReconfigure(ros::NodeHandle& nh);\par
119 \par
125   {\cf18 bool} getMarkingObservations(std::vector<costmap_2d::Observation>& marking_observations) {\cf17 const};\par
126 \par
132   {\cf18 bool} getClearingObservations(std::vector<costmap_2d::Observation>& clearing_observations) {\cf17 const};\par
133 \par
142   {\cf17 virtual} {\cf18 void} raytraceFreespace({\cf17 const} costmap_2d::Observation& clearing_observation, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
143                                  {\cf18 double}* max_x, {\cf18 double}* max_y);\par
144 \par
145   {\cf18 void} updateRaytraceBounds({\cf18 double} ox, {\cf18 double} oy, {\cf18 double} wx, {\cf18 double} wy, {\cf18 double} range, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
146                             {\cf18 double}* max_x, {\cf18 double}* max_y);\par
147 \par
148   std::vector<geometry_msgs::Point> transformed_footprint_;\par
149   {\cf18 bool} footprint_clearing_enabled_;\par
150   {\cf18 void} updateFootprint({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
151                        {\cf18 double}* max_x, {\cf18 double}* max_y);\par
152 \par
153   std::string global_frame_;  \par
154   {\cf18 double} max_obstacle_height_;  \par
155 \par
156   {\cf20 // \'D3\'C3\'D3\'DA\'BD\'AB\'BC\'A4\'B9\'E2\'C9\'A8\'C3\'E8\'B5\'BD\'B5\'C4\'D0\'C5\'CF\'A2\'CD\'B6\'D3\'B0\'B5\'BD\'B5\'E3\'D4\'C6\'BC\'AF\'D6\'D0}\par
157   laser_geometry::LaserProjection projector_;  {\cf20 // \'D3\'C3\'D3\'DA\'BD\'AB\'BC\'A4\'B9\'E2\'CA\'FD\'BE\'DD\'B5\'BD\'B5\'C4\'D0\'C5\'CF\'A2\'CD\'B6\'D3\'B0\'D7\'AA\'BB\'BB\'B5\'BD\'B5\'E3\'D4\'C6\'BC\'AF\'D6\'D0}\par
158 \par
159   {\cf20 // \'D3\'C3\'D3\'DA\'B9\'DB\'B2\'EC\'CF\'FB\'CF\'A2\'C9\'B8\'D1\'A1\'C6\'F7}\par
160   std::vector<boost::shared_ptr<message_filters::SubscriberBase> > observation_subscribers_;\par
161   {\cf20 // \'D3\'C3\'D3\'DA\'C8\'B7\'B1\'A3\'C3\'BF\'B8\'F6\'B4\'AB\'B8\'D0\'C6\'F7\'B6\'BC\'BF\'C9\'D2\'D4\'CA\'B9\'D3\'C3\'B1\'E4\'BB\'BB}\par
162   std::vector<boost::shared_ptr<tf2_ros::MessageFilterBase> > observation_notifiers_;\par
163   {\cf20 // \'D3\'C3\'D3\'DA\'B4\'E6\'B4\'A2\'C0\'B4\'D7\'D4\'B8\'F7\'D6\'D6\'B4\'AB\'B8\'D0\'C6\'F7\'B5\'C4\'B9\'DB\'B2\'E2\'D6\'B5}\par
164   std::vector<boost::shared_ptr<costmap_2d::ObservationBuffer> > observation_buffers_;\par
165   {\cf20 // \'D3\'C3\'D3\'DA\'B4\'E6\'B4\'A2\'D3\'C3\'D3\'DA\'B1\'EA\'BC\'C7\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'C4\'B9\'DB\'B2\'EC\'BB\'BA\'B3\'E5\'C6\'F7}\par
166   std::vector<boost::shared_ptr<costmap_2d::ObservationBuffer> > marking_buffers_;\par
167   {\cf20 // \'D3\'C3\'D3\'DA\'B4\'E6\'B4\'A2\'D3\'C3\'D3\'DA\'C7\'E5\'B3\'FD\'D5\'CF\'B0\'AD\'CE\'EF\'B5\'C4\'B9\'DB\'B2\'EC\'BB\'BA\'B3\'E5\'C6\'F7}\par
168   std::vector<boost::shared_ptr<costmap_2d::ObservationBuffer> > clearing_buffers_;\par
169 \par
170   {\cf20 // \'BD\'F6\'D3\'C3\'D3\'DA\'B2\'E2\'CA\'D4\'C4\'BF\'B5\'C4\'B5\'C4\'B9\'DB\'B2\'E2\'CF\'F2\'C1\'BF}\par
171   std::vector<costmap_2d::Observation> static_clearing_observations_, static_marking_observations_;\par
172 \par
173   {\cf18 bool} rolling_window_;\par
174   dynamic_reconfigure::Server<costmap_2d::ObstaclePluginConfig> *dsrv_;\par
175 \par
176   {\cf18 int} combination_method_;\par
177 \par
178 {\cf17 private}:\par
179   {\cf18 void} reconfigureCB(costmap_2d::ObstaclePluginConfig &config, uint32_t level);\par
180 \};\par
181 \par
182 \}  {\cf20 // namespace costmap_2d}\par
183 \par
184 {\cf21 #endif  }{\cf20 // COSTMAP_2D_OBSTACLE_LAYER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/static_layer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/static_layer.h}
{\xe \v costmap_2d/include/costmap_2d/static_layer.h}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_layer.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/GenericPluginConfig.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <nav_msgs/OccupancyGrid.h>}\par
{\f2 #include <map_msgs/OccupancyGridUpdate.h>}\par
{\f2 #include <message_filters/subscriber.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid static_layer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "static__layer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "static__layer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::StaticLayer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
static_layer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/static_layer.h}
{\xe \v costmap_2d/include/costmap_2d/static_layer.h}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_STATIC_LAYER_H_}\par
39 {\cf21 #define COSTMAP_2D_STATIC_LAYER_H_}\par
40 \par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <costmap_2d/costmap_layer.h>}\par
43 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
44 {\cf21 #include <costmap_2d/GenericPluginConfig.h>}\par
45 {\cf21 #include <dynamic_reconfigure/server.h>}\par
46 {\cf21 #include <nav_msgs/OccupancyGrid.h>}\par
47 {\cf21 #include <map_msgs/OccupancyGridUpdate.h>}\par
48 {\cf21 #include <message_filters/subscriber.h>}\par
49 \par
50 {\cf17 namespace }costmap_2d\par
51 \{\par
52 \par
53 {\cf17 class }StaticLayer : {\cf17 public} CostmapLayer\par
54 \{\par
55 {\cf17 public}:\par
56   StaticLayer();\par
57   {\cf17 virtual} ~StaticLayer();\par
58   {\cf17 virtual} {\cf18 void} onInitialize();\par
59   {\cf17 virtual} {\cf18 void} activate();\par
60   {\cf17 virtual} {\cf18 void} deactivate();\par
61   {\cf17 virtual} {\cf18 void} reset();\par
62 \par
63   {\cf17 virtual} {\cf18 void} updateBounds({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
64                             {\cf18 double}* max_x, {\cf18 double}* max_y);\par
65 \par
66 \par
75   {\cf17 virtual} {\cf18 void} updateCosts(costmap_2d::Costmap2D& master_grid, {\cf18 int} min_i, {\cf18 int} min_j, {\cf18 int} max_i, {\cf18 int} max_j);\par
76 \par
77   {\cf17 virtual} {\cf18 void} matchSize();\par
78 \par
79 {\cf17 private}:\par
86   {\cf18 void} incomingMap({\cf17 const} nav_msgs::OccupancyGridConstPtr& new_map);\par
87   {\cf18 void} incomingUpdate({\cf17 const} map_msgs::OccupancyGridUpdateConstPtr& update);\par
88   {\cf18 void} reconfigureCB(costmap_2d::GenericPluginConfig &config, uint32_t level);\par
89 \par
90   {\cf18 unsigned} {\cf18 char} interpretValue({\cf18 unsigned} {\cf18 char} value);\par
91 \par
92   std::string global_frame_;  {\cf20 // \'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'C8\'AB\'BE\'D6\'D7\'F8\'B1\'EA\'CF\'B5}\par
93   std::string map_frame_;  {\cf20 // \'B5\'D8\'CD\'BC\'D7\'F8\'B1\'EA\'CF\'B5}\par
94   {\cf18 bool} subscribe_to_updates_;\par
95   {\cf18 bool} map_received_;\par
96   {\cf18 bool} has_updated_data_;\par
97 \par
98   {\cf20 // \'D4\'DA\'BD\'D3\'CA\'D5\'B5\'BD\'B5\'D8\'CD\'BC\'CA\'B1\'A3\'ACx_, y_\'B1\'BB\'D6\'C3\'CE\'AA0,width_, height_ \'B1\'BB\'C9\'E8\'CE\'AA\'B5\'D8\'CD\'BC\'BF\'ED\'B8\'DF}\par
99   {\cf18 unsigned} {\cf18 int} x_, y_, width_, height_;\par
100   {\cf20 // \'C4\'AC\'C8\'CF\'C3\'BB\'D3\'D0\'C5\'E4\'D6\'C3\'A3\'AC\'CA\'B9\'D3\'C3true}\par
101   {\cf18 bool} track_unknown_space_;\par
102   {\cf18 bool} use_maximum_;\par
103   {\cf18 bool} first_map_only_;      \par
104   {\cf18 bool} trinary_costmap_;\par
105   ros::Subscriber map_sub_, map_update_sub_;\par
106   {\cf20 // lethal_threshold_\'A3\'BA\'D6\'C2\'C3\'FCcost\'B5\'C4\'E3\'D0\'D6\'B5\'A3\'AC\'CA\'B9\'D3\'C3\'C4\'AC\'C8\'CF\'B5\'C4\'CE\'AA100}\par
107   {\cf20 // unknown_cost_value_\'A3\'BA\'CE\'B4\'D6\'AA\'B5\'C4\'C7\'F8\'D3\'F2\'A3\'ACcost \'D6\'B5\'CE\'AA255}\par
108   {\cf18 unsigned} {\cf18 char} lethal_threshold_, unknown_cost_value_;\par
109 \par
110   dynamic_reconfigure::Server<costmap_2d::GenericPluginConfig> *dsrv_;\par
111 \};\par
112 \par
113 \}  {\cf20 // namespace costmap_2d}\par
114 \par
115 {\cf21 #endif  }{\cf20 // COSTMAP_2D_STATIC_LAYER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/testing_helper.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/testing_helper.h}
{\xe \v costmap_2d/include/costmap_2d/testing_helper.h}
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/cost_values.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/static_layer.h>}\par
{\f2 #include <costmap_2d/obstacle_layer.h>}\par
{\f2 #include <costmap_2d/inflation_layer.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid testing_helper.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b MAX_Z} (1.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b printableCost} (unsigned char cost)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printMap} ({\b costmap_2d::Costmap2D} &costmap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b countValues} ({\b costmap_2d::Costmap2D} &costmap, unsigned char value, bool equal=true)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addStaticLayer} ({\b costmap_2d::LayeredCostmap} &layers, tf2_ros::Buffer &tf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::ObstacleLayer} * {\b addObstacleLayer} ({\b costmap_2d::LayeredCostmap} &layers, tf2_ros::Buffer &tf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addObservation} ({\b costmap_2d::ObstacleLayer} *olayer, double x, double y, double z=0.0, double ox=0.0, double oy=0.0, double oz={\b MAX_Z})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::InflationLayer} * {\b addInflationLayer} ({\b costmap_2d::LayeredCostmap} &layers, tf2_ros::Buffer &tf)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v addInflationLayer\:testing_helper.h}
{\xe \v testing_helper.h\:addInflationLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::InflationLayer} * addInflationLayer ({\b costmap_2d::LayeredCostmap} &  {\i layers}, tf2_ros::Buffer &  {\i tf})}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a1ba5d33cfd5bb6ee59e0fdbf44251d81_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a1ba5d33cfd5bb6ee59e0fdbf44251d81_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v addObservation\:testing_helper.h}
{\xe \v testing_helper.h\:addObservation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addObservation ({\b costmap_2d::ObstacleLayer} *  {\i olayer}, double  {\i x}, double  {\i y}, double  {\i z} = {\f2 0.0}, double  {\i ox} = {\f2 0.0}, double  {\i oy} = {\f2 0.0}, double  {\i oz} = {\f2 {\b MAX_Z}})}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a043c2232e047ce2a6c03a493e5e31ee9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a043c2232e047ce2a6c03a493e5e31ee9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v addObstacleLayer\:testing_helper.h}
{\xe \v testing_helper.h\:addObstacleLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::ObstacleLayer} * addObstacleLayer ({\b costmap_2d::LayeredCostmap} &  {\i layers}, tf2_ros::Buffer &  {\i tf})}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_afd328050d3b7af24194fabf58454f91a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_afd328050d3b7af24194fabf58454f91a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v addStaticLayer\:testing_helper.h}
{\xe \v testing_helper.h\:addStaticLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void addStaticLayer ({\b costmap_2d::LayeredCostmap} &  {\i layers}, tf2_ros::Buffer &  {\i tf})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a44d779d80cd1879d61ab1e32e179a806_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a44d779d80cd1879d61ab1e32e179a806_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v countValues\:testing_helper.h}
{\xe \v testing_helper.h\:countValues}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int countValues ({\b costmap_2d::Costmap2D} &  {\i costmap}, unsigned char  {\i value}, bool  {\i equal} = {\f2 true})}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_af4d497e66d7195f0a4b02ce26603c5c8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_af4d497e66d7195f0a4b02ce26603c5c8_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v MAX_Z\:testing_helper.h}
{\xe \v testing_helper.h\:MAX_Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double MAX_Z (1.  {\i 0})}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a80945e4c9ec06fccdb5342cacfea6e3d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printableCost\:testing_helper.h}
{\xe \v testing_helper.h\:printableCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char printableCost (unsigned char  {\i cost})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v printMap\:testing_helper.h}
{\xe \v testing_helper.h\:printMap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printMap ({\b costmap_2d::Costmap2D} &  {\i costmap})}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a31015063213528e542a953d8470fc6b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "testing__helper_8h_a31015063213528e542a953d8470fc6b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
testing_helper.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/testing_helper.h}
{\xe \v costmap_2d/include/costmap_2d/testing_helper.h}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef COSTMAP_2D_TESTING_HELPER_H}\par
2 {\cf21 #define COSTMAP_2D_TESTING_HELPER_H}\par
3 \par
4 {\cf21 #include<costmap_2d/cost_values.h>}\par
5 {\cf21 #include<costmap_2d/costmap_2d.h>}\par
6 {\cf21 #include <costmap_2d/static_layer.h>}\par
7 {\cf21 #include <costmap_2d/obstacle_layer.h>}\par
8 {\cf21 #include <costmap_2d/inflation_layer.h>}\par
9 \par
10 {\cf21 #include <sensor_msgs/point_cloud2_iterator.h>}\par
11 \par
12 {\cf17 const} {\cf18 double} MAX_Z(1.0);\par
13 \par
14 {\cf18 char} printableCost({\cf18 unsigned} {\cf18 char} cost)\par
15 \{\par
16   {\cf19 switch} (cost)\par
17   \{\par
18   {\cf19 case} costmap_2d::NO_INFORMATION: {\cf19 return} {\cf23 '?'};\par
19   {\cf19 case} costmap_2d::LETHAL_OBSTACLE: {\cf19 return} {\cf23 'L'};\par
20   {\cf19 case} costmap_2d::INSCRIBED_INFLATED_OBSTACLE: {\cf19 return} {\cf23 'I'};\par
21   {\cf19 case} costmap_2d::FREE_SPACE: {\cf19 return} {\cf23 '.'};\par
22   {\cf19 default}: {\cf19 return} {\cf23 '0'} + ({\cf18 unsigned} char) (10 * cost / 255);\par
23   \}\par
24 \}\par
25 \par
26 {\cf18 void} printMap(costmap_2d::Costmap2D& costmap)\par
27 \{\par
28   printf({\cf22 "map:\\n"});\par
29   {\cf19 for} ({\cf18 int} i = 0; i < costmap.getSizeInCellsY(); i++)\{\par
30     {\cf19 for} ({\cf18 int} j = 0; j < costmap.getSizeInCellsX(); j++)\{\par
31       printf({\cf22 "%4d"}, {\cf18 int}(costmap.getCost(j, i)));\par
32     \}\par
33     printf({\cf22 "\\n\\n"});\par
34   \}\par
35 \}\par
36 \par
37 {\cf18 unsigned} {\cf18 int} countValues(costmap_2d::Costmap2D& costmap, {\cf18 unsigned} {\cf18 char} value, {\cf18 bool} equal = {\cf17 true})\par
38 \{\par
39   {\cf18 unsigned} {\cf18 int} count = 0;\par
40   {\cf19 for} ({\cf18 int} i = 0; i < costmap.getSizeInCellsY(); i++)\{\par
41     {\cf19 for} ({\cf18 int} j = 0; j < costmap.getSizeInCellsX(); j++)\{\par
42       {\cf18 unsigned} {\cf18 char} c = costmap.getCost(j, i);\par
43       {\cf19 if} ((equal && c == value) || (!equal && c != value))\par
44       \{\par
45         count+=1;\par
46       \}\par
47     \}\par
48   \}\par
49   {\cf19 return} count;\par
50 \}\par
51 \par
52 {\cf18 void} addStaticLayer(costmap_2d::LayeredCostmap& layers, tf2_ros::Buffer& tf)\par
53 \{\par
54   costmap_2d::StaticLayer* slayer = {\cf17 new} costmap_2d::StaticLayer();\par
55   layers.addPlugin(boost::shared_ptr<costmap_2d::Layer>(slayer));\par
56   slayer->initialize(&layers, {\cf22 "static"}, &tf);\par
57 \}\par
58 \par
59 costmap_2d::ObstacleLayer* addObstacleLayer(costmap_2d::LayeredCostmap& layers, tf2_ros::Buffer& tf)\par
60 \{\par
61   costmap_2d::ObstacleLayer* olayer = {\cf17 new} costmap_2d::ObstacleLayer();\par
62   olayer->initialize(&layers, {\cf22 "obstacles"}, &tf);\par
63   layers.addPlugin(boost::shared_ptr<costmap_2d::Layer>(olayer));\par
64   {\cf19 return} olayer;\par
65 \}\par
66 \par
67 {\cf18 void} addObservation(costmap_2d::ObstacleLayer* olayer, {\cf18 double} x, {\cf18 double} y, {\cf18 double} z = 0.0,\par
68                     {\cf18 double} ox = 0.0, {\cf18 double} oy = 0.0, {\cf18 double} oz = MAX_Z)\{\par
69   sensor_msgs::PointCloud2 cloud;\par
70   sensor_msgs::PointCloud2Modifier modifier(cloud);\par
71   modifier.setPointCloud2FieldsByString(1, {\cf22 "xyz"});\par
72   modifier.resize(1);\par
73   sensor_msgs::PointCloud2Iterator<float> iter_x(cloud, {\cf22 "x"});\par
74   sensor_msgs::PointCloud2Iterator<float> iter_y(cloud, {\cf22 "y"});\par
75   sensor_msgs::PointCloud2Iterator<float> iter_z(cloud, {\cf22 "z"});\par
76   *iter_x = x;\par
77   *iter_y = y;\par
78   *iter_z = z;\par
79 \par
80   geometry_msgs::Point p;\par
81   p.x = ox;\par
82   p.y = oy;\par
83   p.z = oz;\par
84 \par
85   costmap_2d::Observation obs(p, cloud, 100.0, 100.0);  {\cf20 // obstacle range = raytrace range = 100.0}\par
86   olayer->addStaticObservation(obs, {\cf17 true}, {\cf17 true});\par
87 \}\par
88 \par
89 costmap_2d::InflationLayer* addInflationLayer(costmap_2d::LayeredCostmap& layers, tf2_ros::Buffer& tf)\par
90 \{\par
91   costmap_2d::InflationLayer* ilayer = {\cf17 new} costmap_2d::InflationLayer();\par
92   ilayer->initialize(&layers, {\cf22 "inflation"}, &tf);\par
93   boost::shared_ptr<costmap_2d::Layer> ipointer(ilayer);\par
94   layers.addPlugin(ipointer);\par
95   {\cf19 return} ilayer;\par
96 \}\par
97 \par
98 \par
99 {\cf21 #endif  }{\cf20 // COSTMAP_2D_TESTING_HELPER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/include/costmap_2d/voxel_layer.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/voxel_layer.h}
{\xe \v costmap_2d/include/costmap_2d/voxel_layer.h}
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/layer.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <costmap_2d/VoxelGrid.h>}\par
{\f2 #include <nav_msgs/OccupancyGrid.h>}\par
{\f2 #include <sensor_msgs/LaserScan.h>}\par
{\f2 #include <laser_geometry/laser_geometry.h>}\par
{\f2 #include <sensor_msgs/PointCloud.h>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
{\f2 #include <sensor_msgs/point_cloud_conversion.h>}\par
{\f2 #include <message_filters/subscriber.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <costmap_2d/VoxelPluginConfig.h>}\par
{\f2 #include <costmap_2d/obstacle_layer.h>}\par
{\f2 #include <voxel_grid/voxel_grid.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_layer.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__layer_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__layer_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::VoxelLayer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_layer.h\par \pard\plain 
{\tc\tcl2 \v costmap_2d/include/costmap_2d/voxel_layer.h}
{\xe \v costmap_2d/include/costmap_2d/voxel_layer.h}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef COSTMAP_2D_VOXEL_LAYER_H_}\par
39 {\cf21 #define COSTMAP_2D_VOXEL_LAYER_H_}\par
40 \par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <costmap_2d/layer.h>}\par
43 {\cf21 #include <costmap_2d/layered_costmap.h>}\par
44 {\cf21 #include <costmap_2d/observation_buffer.h>}\par
45 {\cf21 #include <costmap_2d/VoxelGrid.h>}\par
46 {\cf21 #include <nav_msgs/OccupancyGrid.h>}\par
47 {\cf21 #include <sensor_msgs/LaserScan.h>}\par
48 {\cf21 #include <laser_geometry/laser_geometry.h>}\par
49 {\cf21 #include <sensor_msgs/PointCloud.h>}\par
50 {\cf21 #include <sensor_msgs/PointCloud2.h>}\par
51 {\cf21 #include <sensor_msgs/point_cloud_conversion.h>}\par
52 {\cf21 #include <message_filters/subscriber.h>}\par
53 {\cf21 #include <dynamic_reconfigure/server.h>}\par
54 {\cf21 #include <costmap_2d/VoxelPluginConfig.h>}\par
55 {\cf21 #include <costmap_2d/obstacle_layer.h>}\par
56 {\cf21 #include <voxel_grid/voxel_grid.h>}\par
57 \par
58 {\cf17 namespace }costmap_2d\par
59 \{\par
60 \par
61 {\cf17 class }VoxelLayer : {\cf17 public} ObstacleLayer\par
62 \{\par
63 {\cf17 public}:\par
64   VoxelLayer() :\par
65       voxel_grid_(0, 0, 0)\par
66   \{\par
67     costmap_ = NULL;  {\cf20 // this is the unsigned char* member of parent class's parent class Costmap2D.}\par
68   \}\par
69 \par
70   {\cf17 virtual} ~VoxelLayer();\par
71 \par
72   {\cf17 virtual} {\cf18 void} onInitialize();\par
73   {\cf17 virtual} {\cf18 void} updateBounds({\cf18 double} robot_x, {\cf18 double} robot_y, {\cf18 double} robot_yaw, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
74                             {\cf18 double}* max_x, {\cf18 double}* max_y);\par
75 \par
76   {\cf18 void} updateOrigin({\cf18 double} new_origin_x, {\cf18 double} new_origin_y);\par
77   {\cf18 bool} isDiscretized()\par
78   \{\par
79     {\cf19 return} {\cf17 true};\par
80   \}\par
81   {\cf17 virtual} {\cf18 void} matchSize();\par
82   {\cf17 virtual} {\cf18 void} reset();\par
83 \par
84 \par
85 {\cf17 protected}:\par
86   {\cf17 virtual} {\cf18 void} setupDynamicReconfigure(ros::NodeHandle& nh);\par
87 \par
88   {\cf17 virtual} {\cf18 void} resetMaps();\par
89 \par
90 {\cf17 private}:\par
91   {\cf18 void} reconfigureCB(costmap_2d::VoxelPluginConfig &config, uint32_t level);\par
92   {\cf18 void} clearNonLethal({\cf18 double} wx, {\cf18 double} wy, {\cf18 double} w_size_x, {\cf18 double} w_size_y, {\cf18 bool} clear_no_info);\par
93   {\cf17 virtual} {\cf18 void} raytraceFreespace({\cf17 const} costmap_2d::Observation& clearing_observation, {\cf18 double}* min_x, {\cf18 double}* min_y,\par
94                                  {\cf18 double}* max_x, {\cf18 double}* max_y);\par
95 \par
96   dynamic_reconfigure::Server<costmap_2d::VoxelPluginConfig> *voxel_dsrv_;\par
97 \par
98   {\cf18 bool} publish_voxel_;\par
99   ros::Publisher voxel_pub_;\par
100   voxel_grid::VoxelGrid voxel_grid_;\par
101   {\cf18 double} z_resolution_, origin_z_;\par
102   {\cf18 unsigned} {\cf18 int} unknown_threshold_, mark_threshold_, size_z_;\par
103   ros::Publisher clearing_endpoints_pub_;\par
104   sensor_msgs::PointCloud clearing_endpoints_;\par
105 \par
106   {\cf17 inline} {\cf18 bool} worldToMap3DFloat({\cf18 double} wx, {\cf18 double} wy, {\cf18 double} wz, {\cf18 double}& mx, {\cf18 double}& my, {\cf18 double}& mz)\par
107   \{\par
108     {\cf19 if} (wx < origin_x_ || wy < origin_y_ || wz < origin_z_)\par
109       {\cf19 return} {\cf17 false};\par
110     mx = ((wx - origin_x_) / resolution_);\par
111     my = ((wy - origin_y_) / resolution_);\par
112     mz = ((wz - origin_z_) / z_resolution_);\par
113     {\cf19 if} (mx < size_x_ && my < size_y_ && mz < size_z_)\par
114       {\cf19 return} {\cf17 true};\par
115 \par
116     {\cf19 return} {\cf17 false};\par
117   \}\par
118 \par
119   {\cf17 inline} {\cf18 bool} worldToMap3D({\cf18 double} wx, {\cf18 double} wy, {\cf18 double} wz, {\cf18 unsigned} {\cf18 int}& mx, {\cf18 unsigned} {\cf18 int}& my, {\cf18 unsigned} {\cf18 int}& mz)\par
120   \{\par
121     {\cf19 if} (wx < origin_x_ || wy < origin_y_ || wz < origin_z_)\par
122       {\cf19 return} {\cf17 false};\par
123 \par
124     mx = (int)((wx - origin_x_) / resolution_);\par
125     my = (int)((wy - origin_y_) / resolution_);\par
126     mz = (int)((wz - origin_z_) / z_resolution_);\par
127 \par
128     {\cf19 if} (mx < size_x_ && my < size_y_ && mz < size_z_)\par
129       {\cf19 return} {\cf17 true};\par
130 \par
131     {\cf19 return} {\cf17 false};\par
132   \}\par
133 \par
134   {\cf17 inline} {\cf18 void} mapToWorld3D({\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my, {\cf18 unsigned} {\cf18 int} mz, {\cf18 double}& wx, {\cf18 double}& wy, {\cf18 double}& wz)\par
135   \{\par
136     {\cf20 // returns the center point of the cell}\par
137     wx = origin_x_ + (mx + 0.5) * resolution_;\par
138     wy = origin_y_ + (my + 0.5) * resolution_;\par
139     wz = origin_z_ + (mz + 0.5) * z_resolution_;\par
140   \}\par
141 \par
142   {\cf17 inline} {\cf18 double} dist({\cf18 double} x0, {\cf18 double} y0, {\cf18 double} z0, {\cf18 double} x1, {\cf18 double} y1, {\cf18 double} z1)\par
143   \{\par
144     {\cf19 return} sqrt((x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0) + (z1 - z0) * (z1 - z0));\par
145   \}\par
146 \};\par
147 \par
148 \}  {\cf20 // namespace costmap_2d}\par
149 \par
150 {\cf21 #endif  }{\cf20 // COSTMAP_2D_VOXEL_LAYER_H_}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/plugins/inflation_layer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/plugins/inflation_layer.cpp}
{\xe \v costmap_2d/plugins/inflation_layer.cpp}
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
{\f2 #include <costmap_2d/inflation_layer.h>}\par
{\f2 #include <costmap_2d/costmap_math.h>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid inflation_layer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__layer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/plugins/obstacle_layer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/plugins/obstacle_layer.cpp}
{\xe \v costmap_2d/plugins/obstacle_layer.cpp}
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/obstacle_layer.h>}\par
{\f2 #include <costmap_2d/costmap_math.h>}\par
{\f2 #include <tf2_ros/message_filter.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid obstacle_layer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__layer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/plugins/static_layer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/plugins/static_layer.cpp}
{\xe \v costmap_2d/plugins/static_layer.cpp}
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/static_layer.h>}\par
{\f2 #include <costmap_2d/costmap_math.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <tf2/convert.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid static_layer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "static__layer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/plugins/voxel_layer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/plugins/voxel_layer.cpp}
{\xe \v costmap_2d/plugins/voxel_layer.cpp}
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/voxel_layer.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_layer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__layer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VOXEL_BITS}\~ 16\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v VOXEL_BITS\:voxel_layer.cpp}
{\xe \v voxel_layer.cpp\:VOXEL_BITS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VOXEL_BITS\~ 16}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/array_parser.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/array_parser.cpp}
{\xe \v costmap_2d/src/array_parser.cpp}
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstdio>}\par
{\f2 #include <string>}\par
{\f2 #include <sstream>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid array_parser.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< std::vector< float > > {\b costmap_2d::parseVVF} (const std::string &input, std::string &error_return)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Parse a vector of vectors of floats from a string. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_2d.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_2d.cpp}
{\xe \v costmap_2d/src/costmap_2d.cpp}
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <cstdio>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_2d_cloud.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_2d_cloud.cpp}
{\xe \v costmap_2d/src/costmap_2d_cloud.cpp}
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <sensor_msgs/PointCloud.h>}\par
{\f2 #include <costmap_2d/VoxelGrid.h>}\par
{\f2 #include <voxel_grid/voxel_grid.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_cloud.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__cloud_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Cell}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::vector< {\b Cell} > {\b V_Cell}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b mapToWorld3D} (const unsigned int mx, const unsigned int my, const unsigned int mz, const double origin_x, const double origin_y, const double origin_z, const double x_resolution, const double y_resolution, const double z_resolution, double &wx, double &wy, double &wz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b voxelCallback} (const ros::Publisher &pub_marked, const ros::Publisher &pub_unknown, const costmap_2d::VoxelGridConstPtr &grid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_r} [] = \{0.0f, 0.0f, 1.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_g} [] = \{0.0f, 0.0f, 0.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_b} [] = \{0.0f, 1.0f, 0.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_a} [] = \{0.0f, 0.5f, 1.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b V_Cell} {\b g_marked}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b V_Cell} {\b g_unknown}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v V_Cell\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:V_Cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::vector<{\b Cell}> {\b V_Cell}}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__cloud_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mapToWorld3D\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:mapToWorld3D}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void mapToWorld3D (const unsigned int  {\i mx}, const unsigned int  {\i my}, const unsigned int  {\i mz}, const double  {\i origin_x}, const double  {\i origin_y}, const double  {\i origin_z}, const double  {\i x_resolution}, const double  {\i y_resolution}, const double  {\i z_resolution}, double &  {\i wx}, double &  {\i wy}, double &  {\i wz}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__cloud_8cpp_af6c7f1ce1e52188cc4e30c121a65bcd2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v voxelCallback\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:voxelCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxelCallback (const ros::Publisher &  {\i pub_marked}, const ros::Publisher &  {\i pub_unknown}, const costmap_2d::VoxelGridConstPtr &  {\i grid})}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__cloud_8cpp_a37983da30da7edf07fa9971cd4957c6b_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__cloud_8cpp_a37983da30da7edf07fa9971cd4957c6b_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g_colors_a\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:g_colors_a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_a[] = \{0.0f, 0.5f, 1.0f\}}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_b\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:g_colors_b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_b[] = \{0.0f, 1.0f, 0.0f\}}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_g\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:g_colors_g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_g[] = \{0.0f, 0.0f, 0.0f\}}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_r\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:g_colors_r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_r[] = \{0.0f, 0.0f, 1.0f\}}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_marked\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:g_marked}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b V_Cell} g_marked}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_unknown\:costmap_2d_cloud.cpp}
{\xe \v costmap_2d_cloud.cpp\:g_unknown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b V_Cell} g_unknown}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_2d_markers.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_2d_markers.cpp}
{\xe \v costmap_2d/src/costmap_2d_markers.cpp}
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <visualization_msgs/MarkerArray.h>}\par
{\f2 #include <costmap_2d/VoxelGrid.h>}\par
{\f2 #include <voxel_grid/voxel_grid.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_markers.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__markers_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Cell}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef std::vector< {\b Cell} > {\b V_Cell}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b voxelCallback} (const ros::Publisher &pub, const costmap_2d::VoxelGridConstPtr &grid)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_r} [] = \{0.0f, 0.0f, 1.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_g} [] = \{0.0f, 0.0f, 0.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_b} [] = \{0.0f, 1.0f, 0.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b g_colors_a} [] = \{0.0f, 0.5f, 1.0f\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b g_marker_ns}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b V_Cell} {\b g_cells}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v V_Cell\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:V_Cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef std::vector<{\b Cell}> {\b V_Cell}}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__markers_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v voxelCallback\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:voxelCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void voxelCallback (const ros::Publisher &  {\i pub}, const costmap_2d::VoxelGridConstPtr &  {\i grid})}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__markers_8cpp_af80cb73ed702979369b13acc3053e279_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__markers_8cpp_af80cb73ed702979369b13acc3053e279_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g_cells\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:g_cells}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b V_Cell} g_cells}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_a\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:g_colors_a}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_a[] = \{0.0f, 0.5f, 1.0f\}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_b\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:g_colors_b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_b[] = \{0.0f, 1.0f, 0.0f\}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_g\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:g_colors_g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_g[] = \{0.0f, 0.0f, 0.0f\}}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_colors_r\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:g_colors_r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float g_colors_r[] = \{0.0f, 0.0f, 1.0f\}}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_marker_ns\:costmap_2d_markers.cpp}
{\xe \v costmap_2d_markers.cpp\:g_marker_ns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string g_marker_ns}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_2d_node.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_2d_node.cpp}
{\xe \v costmap_2d/src/costmap_2d_node.cpp}
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_node.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__node_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:costmap_2d_node.cpp}
{\xe \v costmap_2d_node.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_2d_publisher.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_2d_publisher.cpp}
{\xe \v costmap_2d/src/costmap_2d_publisher.cpp}
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <boost/bind.hpp>}\par
{\f2 #include <costmap_2d/costmap_2d_publisher.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_publisher.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__publisher_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_2d_ros.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_2d_ros.cpp}
{\xe \v costmap_2d/src/costmap_2d_ros.cpp}
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
{\f2 #include <tf2/convert.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_2d_ros.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__2d__ros_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::move_parameter} (ros::NodeHandle &old_h, ros::NodeHandle &new_h, std::string name, bool should_delete=true)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_layer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_layer.cpp}
{\xe \v costmap_2d/src/costmap_layer.cpp}
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_layer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_layer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__layer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/costmap_math.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/costmap_math.cpp}
{\xe \v costmap_2d/src/costmap_math.cpp}
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_math.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_math.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b distanceToLine} (double pX, double pY, double x0, double y0, double x1, double y1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b intersects} (std::vector< geometry_msgs::Point > &polygon, float testx, float testy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b intersects_helper} (std::vector< geometry_msgs::Point > &polygon1, std::vector< geometry_msgs::Point > &polygon2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b intersects} (std::vector< geometry_msgs::Point > &polygon1, std::vector< geometry_msgs::Point > &polygon2)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v distanceToLine\:costmap_math.cpp}
{\xe \v costmap_math.cpp\:distanceToLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double distanceToLine (double  {\i pX}, double  {\i pY}, double  {\i x0}, double  {\i y0}, double  {\i x1}, double  {\i y1})}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp_a31fe9c9633687b41b7c65a18dcab85f9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp_a31fe9c9633687b41b7c65a18dcab85f9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v intersects\:costmap_math.cpp}
{\xe \v costmap_math.cpp\:intersects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool intersects (std::vector< geometry_msgs::Point > &  {\i polygon}, float  {\i testx}, float  {\i testy})}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp_a567784da85da753bdd72f7faf2bdf7b6_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v intersects\:costmap_math.cpp}
{\xe \v costmap_math.cpp\:intersects}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool intersects (std::vector< geometry_msgs::Point > &  {\i polygon1}, std::vector< geometry_msgs::Point > &  {\i polygon2})}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp_a73fceb516298f9b095d8ee0a61957695_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v intersects_helper\:costmap_math.cpp}
{\xe \v costmap_math.cpp\:intersects_helper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool intersects_helper (std::vector< geometry_msgs::Point > &  {\i polygon1}, std::vector< geometry_msgs::Point > &  {\i polygon2})}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp_a928b4806dccd621d58057981b5ab5eb7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__math_8cpp_a928b4806dccd621d58057981b5ab5eb7_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/footprint.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/footprint.cpp}
{\xe \v costmap_2d/src/footprint.cpp}
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_math.h>}\par
{\f2 #include <boost/tokenizer.hpp>}\par
{\f2 #include <boost/foreach.hpp>}\par
{\f2 #include <boost/algorithm/string.hpp>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
{\f2 #include <costmap_2d/array_parser.h>}\par
{\f2 #include <geometry_msgs/Point32.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid footprint.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::calculateMinAndMaxDistances} (const std::vector< geometry_msgs::Point > &footprint, double &min_dist, double &max_dist)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Calculate the extreme distances for the footprint }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point32 {\b costmap_2d::toPoint32} (geometry_msgs::Point pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point to Point32 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Point {\b costmap_2d::toPoint} (geometry_msgs::Point32 pt)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Point32 to Point }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
geometry_msgs::Polygon {\b costmap_2d::toPolygon} (std::vector< geometry_msgs::Point > pts)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert vector of Points to Polygon msg }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::toPointVector} (geometry_msgs::Polygon polygon)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert Polygon msg to vector of Points. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::transformFootprint} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, std::vector< geometry_msgs::Point > &oriented_footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (list of Points) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::transformFootprint} (double x, double y, double theta, const std::vector< geometry_msgs::Point > &footprint_spec, geometry_msgs::PolygonStamped &oriented_footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Given a pose and base footprint, build the oriented footprint of the robot (PolygonStamped) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::padFootprint} (std::vector< geometry_msgs::Point > &footprint, double padding)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds the specified amount of padding to the footprint (in place) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::makeFootprintFromRadius} (double radius)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create a circular footprint from a given radius }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b costmap_2d::makeFootprintFromString} (const std::string &footprint_string, std::vector< geometry_msgs::Point > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make the footprint from the given string. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::makeFootprintFromParams} (ros::NodeHandle &nh)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Read the ros-params "footprint" and/or "robot_radius" from the given NodeHandle using searchParam() to go up the tree. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b costmap_2d::writeFootprintToParam} (ros::NodeHandle &nh, const std::vector< geometry_msgs::Point > &footprint)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write the current unpadded_footprint_ to the "footprint" parameter of the given NodeHandle so that dynamic_reconfigure will see the new value. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b costmap_2d::getNumberFromXMLRPC} (XmlRpc::XmlRpcValue &value, const std::string &full_param_name)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< geometry_msgs::Point > {\b costmap_2d::makeFootprintFromXMLRPC} (XmlRpc::XmlRpcValue &footprint_xmlrpc, const std::string &full_param_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create the footprint from the given XmlRpcValue. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/layer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/layer.cpp}
{\xe \v costmap_2d/src/layer.cpp}
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "costmap_2d/layer.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid layer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "layer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/layered_costmap.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/layered_costmap.cpp}
{\xe \v costmap_2d/src/layered_costmap.cpp}
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/footprint.h>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <string>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <vector>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid layered_costmap.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "layered__costmap_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/src/observation_buffer.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/src/observation_buffer.cpp}
{\xe \v costmap_2d/src/observation_buffer.cpp}
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
{\f2 #include <tf2_sensor_msgs/tf2_sensor_msgs.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid observation_buffer.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "observation__buffer_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/array_parser_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/array_parser_test.cpp}
{\xe \v costmap_2d/test/array_parser_test.cpp}
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include "costmap_2d/array_parser.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid array_parser_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (array_parser, basic_operation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (array_parser, missing_open)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (array_parser, missing_close)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (array_parser, wrong_depth)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:array_parser_test.cpp}
{\xe \v array_parser_test.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:array_parser_test.cpp}
{\xe \v array_parser_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (array_parser , basic_operation )}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser__test_8cpp_a6a6712708999ace46afccb252e7db5c5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:array_parser_test.cpp}
{\xe \v array_parser_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (array_parser , missing_close )}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser__test_8cpp_a59ac99f0f43b2de8aeae959ae8bc7e64_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:array_parser_test.cpp}
{\xe \v array_parser_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (array_parser , missing_open )}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser__test_8cpp_ae1490b35df0200ac01ea568e60cf8fa8_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:array_parser_test.cpp}
{\xe \v array_parser_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (array_parser , wrong_depth )}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "array__parser__test_8cpp_a8c7c5ef92b195650f52cdc9c4920bcc6_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/coordinates_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/coordinates_test.cpp}
{\xe \v costmap_2d/test/coordinates_test.cpp}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid coordinates_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "coordinates__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (CostmapCoordinates, easy_coordinates_test)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (CostmapCoordinates, hard_coordinates_test)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:coordinates_test.cpp}
{\xe \v coordinates_test.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:coordinates_test.cpp}
{\xe \v coordinates_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (CostmapCoordinates , easy_coordinates_test )}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "coordinates__test_8cpp_a18fe696f144dcd7988e4cf55503a0db5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:coordinates_test.cpp}
{\xe \v coordinates_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (CostmapCoordinates , hard_coordinates_test )}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "coordinates__test_8cpp_a8300d7914c3aa9b3c08eeef60fd2fa64_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/costmap_tester.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/costmap_tester.cpp}
{\xe \v costmap_2d/test/costmap_tester.cpp}
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid costmap_tester.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__tester_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b costmap_2d::CostmapTester}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b costmap_2d}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (CostmapTester, checkConsistentCosts)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testCallback} (const ros::TimerEvent &e)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b costmap_2d::CostmapTester} * {\b map_tester} = NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:costmap_tester.cpp}
{\xe \v costmap_tester.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__tester_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:costmap_tester.cpp}
{\xe \v costmap_tester.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (CostmapTester , checkConsistentCosts )}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__tester_8cpp_ab6234649e9137a2ece384ae5e9ea9263_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v testCallback\:costmap_tester.cpp}
{\xe \v costmap_tester.cpp\:testCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testCallback (const ros::TimerEvent &  {\i e})}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "costmap__tester_8cpp_afa085d1c70dc9415a41cf3bc99344a6d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v map_tester\:costmap_tester.cpp}
{\xe \v costmap_tester.cpp\:map_tester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b costmap_2d::CostmapTester}* map_tester = NULL}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/footprint_tests.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/footprint_tests.cpp}
{\xe \v costmap_2d/test/footprint_tests.cpp}
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid footprint_tests.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "footprint__tests_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, unpadded_footprint_from_string_param)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, padded_footprint_from_string_param)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, radius_param)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, footprint_from_xmlrpc_param)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, footprint_from_same_level_param)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, footprint_from_xmlrpc_param_failure)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} ({\b Costmap2DROS}, footprint_empty)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::TransformListener * {\b tfl_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tf2_ros::Buffer * {\b tf_}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , footprint_empty )}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , footprint_from_same_level_param )}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , footprint_from_xmlrpc_param )}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , footprint_from_xmlrpc_param_failure )}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , padded_footprint_from_string_param )}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , radius_param )}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST ({\b Costmap2DROS} , unpadded_footprint_from_string_param )}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v tf_\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:tf_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::Buffer* tf_}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tfl_\:footprint_tests.cpp}
{\xe \v footprint_tests.cpp\:tfl_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tf2_ros::TransformListener* tfl_}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/inflation_tests.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/inflation_tests.cpp}
{\xe \v costmap_2d/test/inflation_tests.cpp}
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <map>}\par
{\f2 #include <cmath>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/obstacle_layer.h>}\par
{\f2 #include <costmap_2d/inflation_layer.h>}\par
{\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <costmap_2d/testing_helper.h>}\par
{\f2 #include <gtest/gtest.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid inflation_tests.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< Point > {\b setRadii} ({\b LayeredCostmap} &layers, double length, double width, double inflation_radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b validatePointInflation} (unsigned int mx, unsigned int my, {\b Costmap2D} *costmap, {\b InflationLayer} *ilayer, double inflation_radius)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testAdjacentToObstacleCanStillMove)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflationShouldNotCreateUnknowns)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testCostFunctionCorrectness)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflationOrderCorrectness)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflation2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflation3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setRadii\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:setRadii}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< Point > setRadii ({\b LayeredCostmap} &  {\i layers}, double  {\i length}, double  {\i width}, double  {\i inflation_radius})}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_aeda5180359541007551a26f092e871b5_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_aeda5180359541007551a26f092e871b5_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testAdjacentToObstacleCanStillMove )}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_ad4ae0b82faed5db2b710a038b9cf895f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testCostFunctionCorrectness )}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for the cost function correctness with a larger range and different values \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_a9f9609b5ae2cbb941f8c326f3fd90276_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflation )}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test inflation for both static and dynamic obstacles \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_a790b8d46b7472f667bc70b1ac2b485e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflation2 )}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test specific inflation scenario to ensure we do not set inflated obstacles to be raw obstacles. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_a94fa7b221aed2d9a56fb3effca4d4179_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflation3 )}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test inflation behavior, starting with an empty map \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_ad0876c1fbe3e36f9dbcfddcd309a2838_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflationOrderCorrectness )}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test that there is no regression and that costs do not get underestimated with the distance-as-key map used to replace the previously used priority queue. This is a more thorough test of the cost function being correctly applied. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_a0b6bd7f54e38ab35deeba4833d904c61_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflationShouldNotCreateUnknowns )}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_a7944d546ff12543615d752c882c1ae12_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v validatePointInflation\:inflation_tests.cpp}
{\xe \v inflation_tests.cpp\:validatePointInflation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void validatePointInflation (unsigned int  {\i mx}, unsigned int  {\i my}, {\b Costmap2D} *  {\i costmap}, {\b InflationLayer} *  {\i ilayer}, double  {\i inflation_radius})}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_ace7be2b076b1bec8a1091d5f74632e28_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "inflation__tests_8cpp_ace7be2b076b1bec8a1091d5f74632e28_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/module_tests.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/module_tests.cpp}
{\xe \v costmap_2d/test/module_tests.cpp}
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <set>}\par
{\f2 #include <gtest/gtest.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid module_tests.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b GRID_WIDTH} (10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b GRID_HEIGHT} (10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b RESOLUTION} (1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b WINDOW_LENGTH} (10)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b THRESHOLD} (100)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b MAX_Z} (1.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b RAYTRACE_RANGE} (20.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b OBSTACLE_RANGE} (20.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b ROBOT_RADIUS} (1.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b find} (const std::vector< unsigned int > &l, unsigned int {\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testResetForStaticMap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testCostFunctionCorrectness)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b printableCost} (unsigned char cost)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testWaveInterference)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testWindowCopy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testFullyContainedStaticMapUpdate)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testOverlapStaticMapUpdate)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testRaytracing)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testAdjacentToObstacleCanStillMove)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflationShouldNotCreateUnknowns)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b worldToIndex} ({\b Costmap2D} &map, double wx, double wy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b indexToWorld} ({\b Costmap2D} &map, unsigned int index, double &wx, double &wy)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testStaticMap)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testDynamicObstacles)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testMultipleAdditions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testZThreshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflation2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testInflation3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testRaytracing2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testTrickyPropagation)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b MAP_10_BY_10_CHAR} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b MAP_5_BY_5_CHAR} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< unsigned char > {\b MAP_5_BY_5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< unsigned char > {\b MAP_10_BY_10}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< unsigned char > {\b EMPTY_10_BY_10}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< unsigned char > {\b EMPTY_100_BY_100}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v find\:module_tests.cpp}
{\xe \v module_tests.cpp\:find}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool find (const std::vector< unsigned int > &  {\i l}, unsigned int  {\i n})}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a2b0cc958b6ecca420d0f0ca89744b564_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v GRID_HEIGHT\:module_tests.cpp}
{\xe \v module_tests.cpp\:GRID_HEIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int GRID_HEIGHT (10 )}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_acc165508c976d24c0ae0232c85978557_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v GRID_WIDTH\:module_tests.cpp}
{\xe \v module_tests.cpp\:GRID_WIDTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int GRID_WIDTH (10 )}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ae02379f018d4ff35a260c0fb1204b865_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v indexToWorld\:module_tests.cpp}
{\xe \v module_tests.cpp\:indexToWorld}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void indexToWorld ({\b Costmap2D} &  {\i map}, unsigned int  {\i index}, double &  {\i wx}, double &  {\i wy})}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a3a3ece35a35957830a0f90c2d25e8fe9_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a3a3ece35a35957830a0f90c2d25e8fe9_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:module_tests.cpp}
{\xe \v module_tests.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v MAX_Z\:module_tests.cpp}
{\xe \v module_tests.cpp\:MAX_Z}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double MAX_Z (1.  {\i 0})}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a80945e4c9ec06fccdb5342cacfea6e3d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v OBSTACLE_RANGE\:module_tests.cpp}
{\xe \v module_tests.cpp\:OBSTACLE_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double OBSTACLE_RANGE (20.  {\i 0})}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ad55f1fdf708504277f888d6d0419bb42_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printableCost\:module_tests.cpp}
{\xe \v module_tests.cpp\:printableCost}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char printableCost (unsigned char  {\i cost})}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ab67d48c3e97782150aac66598f768972_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v RAYTRACE_RANGE\:module_tests.cpp}
{\xe \v module_tests.cpp\:RAYTRACE_RANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double RAYTRACE_RANGE (20.  {\i 0})}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ae25a9ab4d4972c7478e701ae44ca439e_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v RESOLUTION\:module_tests.cpp}
{\xe \v module_tests.cpp\:RESOLUTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double RESOLUTION (1 )}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a214cb9adfc50b4abd0e2132640f639dd_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ROBOT_RADIUS\:module_tests.cpp}
{\xe \v module_tests.cpp\:ROBOT_RADIUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double ROBOT_RADIUS (1.  {\i 0})}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_adf4461009ef21f644777aadc0f469132_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testAdjacentToObstacleCanStillMove )}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ad4ae0b82faed5db2b710a038b9cf895f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testCostFunctionCorrectness )}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for the cost function correctness with a larger range and different values \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a9f9609b5ae2cbb941f8c326f3fd90276_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testDynamicObstacles )}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify that dynamic obstacles are added \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a1d63bc48ed207889be83298c6e0e46f7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testFullyContainedStaticMapUpdate )}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a81989f28bba6fb2f0503b643903a72cd_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflation )}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test inflation for both static and dynamic obstacles \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a790b8d46b7472f667bc70b1ac2b485e1_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflation2 )}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test specific inflation scenario to ensure we do not set inflated obstacles to be raw obstacles. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a94fa7b221aed2d9a56fb3effca4d4179_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflation3 )}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test inflation behavior, starting with an empty map \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ad0876c1fbe3e36f9dbcfddcd309a2838_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testInflationShouldNotCreateUnknowns )}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a7944d546ff12543615d752c882c1ae12_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testMultipleAdditions )}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify that if we add a point that is already a static obstacle we do not end up with a new ostacle \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a21809284d087f0beef9c2ad655520816_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testOverlapStaticMapUpdate )}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ac9fc7e80b7d8b53b7aafb59c12c4e32c_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testRaytracing )}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for ray tracing free space \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ad8fe201867d3b317211acab7d5e136bb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testRaytracing2 )}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for ray tracing free space \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a9a60e8b8b1e2774d5d94b0b402ea9d34_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testResetForStaticMap )}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests the reset method \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ad60e6773a46c10dda1470224e1f13f21_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testStaticMap )}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a0e9c8b5f0a3eba4d6e0db102be312cfa_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testTrickyPropagation )}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Within a certian radius of the robot, the cost map most propagate obstacles. This is to avoid a case where a hit on a far obstacle clears inscribed radius around a near one. \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a2c735efbf2d2bd86320b8b984579b979_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testWaveInterference )}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for wave interference \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a4661fcb3128774239d9c5e0409c0735a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testWindowCopy )}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for copying a window of a costmap \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a4d5daedd5dde37cf984f593d5c719e92_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:module_tests.cpp}
{\xe \v module_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testZThreshold )}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make sure we ignore points outside of our z threshold \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_ad5d425c6c31665d69ec97adaf1cc3981_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v THRESHOLD\:module_tests.cpp}
{\xe \v module_tests.cpp\:THRESHOLD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char THRESHOLD (100 )}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_a25cb91905492fcb0c5020df1664a0275_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v WINDOW_LENGTH\:module_tests.cpp}
{\xe \v module_tests.cpp\:WINDOW_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double WINDOW_LENGTH (10 )}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v worldToIndex\:module_tests.cpp}
{\xe \v module_tests.cpp\:worldToIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int worldToIndex ({\b Costmap2D} &  {\i map}, double  {\i wx}, double  {\i wy})}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_acaf55aec82e7bf50a889e6a81db0b207_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "module__tests_8cpp_acaf55aec82e7bf50a889e6a81db0b207_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v EMPTY_100_BY_100\:module_tests.cpp}
{\xe \v module_tests.cpp\:EMPTY_100_BY_100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<unsigned char> EMPTY_100_BY_100}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EMPTY_10_BY_10\:module_tests.cpp}
{\xe \v module_tests.cpp\:EMPTY_10_BY_10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<unsigned char> EMPTY_10_BY_10}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_10_BY_10\:module_tests.cpp}
{\xe \v module_tests.cpp\:MAP_10_BY_10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<unsigned char> MAP_10_BY_10}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_10_BY_10_CHAR\:module_tests.cpp}
{\xe \v module_tests.cpp\:MAP_10_BY_10_CHAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char MAP_10_BY_10_CHAR[]}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0, 0, 0, 200, 200, 200,\par
  0, 0, 0, 0, 100, 0, 0, 200, 200, 200,\par
  0, 0, 0, 0, 100, 0, 0, 200, 200, 200,\par
  70, 70, 0, 0, 0, 0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\par
  0, 0, 0, 200, 200, 200, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0, 0, 0, 255, 255, 255,\par
  0, 0, 0, 0, 0, 0, 0, 255, 255, 255\par
\}\par
}
}
{\xe \v MAP_5_BY_5\:module_tests.cpp}
{\xe \v module_tests.cpp\:MAP_5_BY_5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<unsigned char> MAP_5_BY_5}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAP_5_BY_5_CHAR\:module_tests.cpp}
{\xe \v module_tests.cpp\:MAP_5_BY_5_CHAR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char MAP_5_BY_5_CHAR[]}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
  0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0,\par
  0, 0, 0, 0, 0,\par
\}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/obstacle_tests.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/obstacle_tests.cpp}
{\xe \v costmap_2d/test/obstacle_tests.cpp}
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <costmap_2d/testing_helper.h>}\par
{\f2 #include <set>}\par
{\f2 #include <gtest/gtest.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid obstacle_tests.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testRaytracing)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testRaytracing2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testWaveInterference)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testZThreshold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testDynamicObstacles)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (costmap, testMultipleAdditions)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testDynamicObstacles )}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify that dynamic obstacles are added \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp_a1d63bc48ed207889be83298c6e0e46f7_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testMultipleAdditions )}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Verify that if we add a point that is already a static obstacle we do not end up with a new ostacle \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp_a21809284d087f0beef9c2ad655520816_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testRaytracing )}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for ray tracing free space \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp_ad8fe201867d3b317211acab7d5e136bb_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testRaytracing2 )}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for ray tracing free space \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp_a9a60e8b8b1e2774d5d94b0b402ea9d34_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testWaveInterference )}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Test for wave interference \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp_a4661fcb3128774239d9c5e0409c0735a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:obstacle_tests.cpp}
{\xe \v obstacle_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (costmap , testZThreshold )}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Make sure we ignore points outside of our z threshold \par
}\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "obstacle__tests_8cpp_ad5d425c6c31665d69ec97adaf1cc3981_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
costmap_2d/test/static_tests.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v costmap_2d/test/static_tests.cpp}
{\xe \v costmap_2d/test/static_tests.cpp}
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <costmap_2d/layered_costmap.h>}\par
{\f2 #include <costmap_2d/obstacle_layer.h>}\par
{\f2 #include <costmap_2d/static_layer.h>}\par
{\f2 #include <costmap_2d/observation_buffer.h>}\par
{\f2 #include <costmap_2d/testing_helper.h>}\par
{\f2 #include <set>}\par
{\f2 #include <gtest/gtest.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid static_tests.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "static__tests_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:static_tests.cpp}
{\xe \v static_tests.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests the reset method\par
{\b TEST(costmap, testResetForStaticMap)}\{ Define a static map with a large object in the center std::vector<unsigned char> staticMap; for(unsigned int i=0; i<10; i++)\{ for(unsigned int j=0; j<10; j++)\{ staticMap.push_back(costmap_2d::LETHAL_OBSTACLE); \} \}\par
Allocate the cost map, with a inflation to 3 cells all around Costmap2D map(10, 10, RESOLUTION, 0.0, 0.0, 3, 3, 3, OBSTACLE_RANGE, MAX_Z, RAYTRACE_RANGE, 25, staticMap, THRESHOLD);\par
Populate the cost map with a wall around the perimeter. Free space should clear out the room. pcl::PointCloud<pcl::PointXYZ> cloud; cloud.points.resize(40);\par
Left wall unsigned int ind = 0; for (unsigned int i = 0; i < 10; i++)\{ Left cloud.points[ind].x = 0; cloud.points[ind].y = i; cloud.points[ind].z = MAX_Z; ind++;\par
Top cloud.points[ind].x = i; cloud.points[ind].y = 0; cloud.points[ind].z = MAX_Z; ind++;\par
Right cloud.points[ind].x = 9; cloud.points[ind].y = i; cloud.points[ind].z = MAX_Z; ind++;\par
Bottom cloud.points[ind].x = i; cloud.points[ind].y = 9; cloud.points[ind].z = MAX_Z; ind++; \}\par
double wx = 5.0, wy = 5.0; geometry_msgs::Point p; p.x = wx; p.y = wy; p.z = MAX_Z; Observation obs(p, cloud, OBSTACLE_RANGE, RAYTRACE_RANGE); std::vector<Observation> obsBuf; obsBuf.push_back(obs);\par
Update the cost map for this observation map.updateWorld(wx, wy, obsBuf, obsBuf);\par
Verify that we now have only 36 cells with lethal cost, thus provong that we have correctly cleared free space int hitCount = 0; for(unsigned int i=0; i < 10; ++i)\{ for(unsigned int j=0; j < 10; ++j)\{ if(map.getCost(i, j) == {\b costmap_2d::LETHAL_OBSTACLE})\{ hitCount++; \} \} \} ASSERT_EQ(hitCount, 36);\par
Veriy that we have 64 non-leathal hitCount = 0; for(unsigned int i=0; i < 10; ++i)\{ for(unsigned int j=0; j < 10; ++j)\{ if(map.getCost(i, j) != {\b costmap_2d::LETHAL_OBSTACLE}) hitCount++; \} \} ASSERT_EQ(hitCount, 64);\par
Now if we reset the cost map, we should have our map go back to being completely occupied map.resetMapOutsideWindow(wx, wy, 0.0, 0.0);\par
We should now go back to everything being occupied hitCount = 0; for(unsigned int i=0; i < 10; ++i)\{ for(unsigned int j=0; j < 10; ++j)\{ if(map.getCost(i, j) == {\b costmap_2d::LETHAL_OBSTACLE}) hitCount++; \} \} ASSERT_EQ(hitCount, 100);\par
\}\par
/** Test for copying a window of a costmap * {\b TEST(costmap, testWindowCopy)}\{ Costmap2D map(GRID_WIDTH, GRID_HEIGHT, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, MAP_10_BY_10, THRESHOLD);\par
/* for(unsigned int i = 0; i < 10; ++i)\{ for(unsigned int j = 0; j < 10; ++j)\{ printf("%3d ", map.getCost(i, j)); \} printf("\\n"); \} printf("\\n");\par
Costmap2D windowCopy;\par
first test that if we try to make a window that is too big, things fail windowCopy.copyCostmapWindow(map, 2.0, 2.0, 6.0, 12.0); ASSERT_EQ(windowCopy.getSizeInCellsX(), (unsigned int)0); ASSERT_EQ(windowCopy.getSizeInCellsY(), (unsigned int)0);\par
Next, test that trying to make a map window itself fails map.copyCostmapWindow(map, 2.0, 2.0, 6.0, 6.0); ASSERT_EQ(map.getSizeInCellsX(), (unsigned int)10); ASSERT_EQ(map.getSizeInCellsY(), (unsigned int)10);\par
Next, test that legal input generates the result that we expect windowCopy.copyCostmapWindow(map, 2.0, 2.0, 6.0, 6.0); ASSERT_EQ(windowCopy.getSizeInCellsX(), (unsigned int)6); ASSERT_EQ(windowCopy.getSizeInCellsY(), (unsigned int)6);\par
check that we actually get the windo that we expect for(unsigned int i = 0; i < windowCopy.getSizeInCellsX(); ++i)\{ for(unsigned int j = 0; j < windowCopy.getSizeInCellsY(); ++j)\{ ASSERT_EQ(windowCopy.getCost(i, j), map.getCost(i + 2, j + 2)); printf("%3d ", windowCopy.getCost(i, j)); \} printf("\\n"); \}\par
\}\par
test for updating costmaps with static data {\b TEST(costmap, testFullyContainedStaticMapUpdate)}\{ Costmap2D map(5, 5, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, MAP_5_BY_5, THRESHOLD);\par
Costmap2D static_map(GRID_WIDTH, GRID_HEIGHT, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, MAP_10_BY_10, THRESHOLD);\par
map.updateStaticMapWindow(0, 0, 10, 10, MAP_10_BY_10);\par
for(unsigned int i = 0; i < map.getSizeInCellsX(); ++i)\{ for(unsigned int j = 0; j < map.getSizeInCellsY(); ++j)\{ ASSERT_EQ(map.getCost(i, j), static_map.getCost(i, j)); \} \} \}\par
{\b TEST(costmap, testOverlapStaticMapUpdate)}\{ Costmap2D map(5, 5, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, MAP_5_BY_5, THRESHOLD);\par
Costmap2D static_map(GRID_WIDTH, GRID_HEIGHT, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, MAP_10_BY_10, THRESHOLD);\par
map.updateStaticMapWindow(-10, -10, 10, 10, MAP_10_BY_10);\par
ASSERT_FLOAT_EQ(map.getOriginX(), -10); ASSERT_FLOAT_EQ(map.getOriginX(), -10); ASSERT_EQ(map.getSizeInCellsX(), (unsigned int)15); ASSERT_EQ(map.getSizeInCellsY(), (unsigned int)15); for(unsigned int i = 0; i < 10; ++i)\{ for(unsigned int j = 0; j < 10; ++j)\{ ASSERT_EQ(map.getCost(i, j), static_map.getCost(i, j)); \} \}\par
std::vector<unsigned char> blank(100);\par
check to make sure that inflation on updates are being done correctly map.updateStaticMapWindow(-10, -10, 10, 10, blank);\par
for(unsigned int i = 0; i < map.getSizeInCellsX(); ++i)\{ for(unsigned int j = 0; j < map.getSizeInCellsY(); ++j)\{ ASSERT_EQ(map.getCost(i, j), 0); \} \}\par
std::vector<unsigned char> fully_contained(25); fully_contained[0] = 254; fully_contained[4] = 254; fully_contained[5] = 254; fully_contained[9] = 254;\par
Costmap2D small_static_map(5, 5, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, fully_contained, THRESHOLD);\par
map.updateStaticMapWindow(0, 0, 5, 5, fully_contained);\par
ASSERT_FLOAT_EQ(map.getOriginX(), -10); ASSERT_FLOAT_EQ(map.getOriginX(), -10); ASSERT_EQ(map.getSizeInCellsX(), (unsigned int)15); ASSERT_EQ(map.getSizeInCellsY(), (unsigned int)15); for(unsigned int j = 0; j < 5; ++j)\{ for(unsigned int i = 0; i < 5; ++i)\{ ASSERT_EQ(map.getCost(i + 10, j + 10), small_static_map.getCost(i, j)); \} \}\par
\}\par
{\b TEST(costmap, testStaticMap)}\{ Costmap2D map(GRID_WIDTH, GRID_HEIGHT, RESOLUTION, 0.0, 0.0, ROBOT_RADIUS, ROBOT_RADIUS, ROBOT_RADIUS, 10.0, MAX_Z, 10.0, 25, MAP_10_BY_10, THRESHOLD);\par
ASSERT_EQ(map.getSizeInCellsX(), (unsigned int)10); ASSERT_EQ(map.getSizeInCellsY(), (unsigned int)10);\par
Verify that obstacles correctly identified from the static map. std::vector<unsigned int> occupiedCells;\par
for(unsigned int i = 0; i < 10; ++i)\{ for(unsigned int j = 0; j < 10; ++j)\{ if(map.getCost(i, j) == {\b costmap_2d::LETHAL_OBSTACLE})\{ occupiedCells.push_back(map.getIndex(i, j)); \} \} \}\par
ASSERT_EQ(occupiedCells.size(), (unsigned int)20);\par
Iterate over all id's and verify that they are present according to their for(std::vector<unsigned int>::const_iterator it = occupiedCells.begin(); it != occupiedCells.end(); ++it)\{ unsigned int ind = *it; unsigned int x, y; map.indexToCells(ind, x, y); ASSERT_EQ(find(occupiedCells, map.getIndex(x, y)), true); ASSERT_EQ(MAP_10_BY_10[ind] >= 100, true); ASSERT_EQ(map.getCost(x, y) >= 100, true); \}\par
Block of 200 ASSERT_EQ(find(occupiedCells, map.getIndex(7, 2)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(8, 2)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(9, 2)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(7, 3)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(8, 3)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(9, 3)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(7, 4)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(8, 4)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(9, 4)), true);\par
Block of 100 ASSERT_EQ(find(occupiedCells, map.getIndex(4, 3)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(4, 4)), true);\par
Block of 200 ASSERT_EQ(find(occupiedCells, map.getIndex(3, 7)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(4, 7)), true); ASSERT_EQ(find(occupiedCells, map.getIndex(5, 7)), true);\par
Verify Coordinate Transformations, ROW MAJOR ORDER ASSERT_EQ(worldToIndex(map, 0.0, 0.0), (unsigned int)0); ASSERT_EQ(worldToIndex(map, 0.0, 0.99), (unsigned int)0); ASSERT_EQ(worldToIndex(map, 0.0, 1.0), (unsigned int)10); ASSERT_EQ(worldToIndex(map, 1.0, 0.99), (unsigned int)1); ASSERT_EQ(worldToIndex(map, 9.99, 9.99), (unsigned int)99); ASSERT_EQ(worldToIndex(map, 8.2, 3.4), (unsigned int)38);\par
Ensure we hit the middle of the cell for world co-ordinates double wx, wy; indexToWorld(map, 99, wx, wy); ASSERT_EQ(wx, 9.5); ASSERT_EQ(wy, 9.5); \} \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner/include/dwa_local_planner/dwa_planner.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner/include/dwa_local_planner/dwa_planner.h}
{\xe \v dwa_local_planner/include/dwa_local_planner/dwa_planner.h}
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <dwa_local_planner/DWAPlannerConfig.h>}\par
{\f2 #include <base_local_planner/map_grid_visualizer.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <base_local_planner/trajectory.h>}\par
{\f2 #include <base_local_planner/local_planner_limits.h>}\par
{\f2 #include <base_local_planner/local_planner_util.h>}\par
{\f2 #include <base_local_planner/simple_trajectory_generator.h>}\par
{\f2 #include <base_local_planner/oscillation_cost_function.h>}\par
{\f2 #include <base_local_planner/map_grid_cost_function.h>}\par
{\f2 #include <base_local_planner/obstacle_cost_function.h>}\par
{\f2 #include <base_local_planner/twirling_cost_function.h>}\par
{\f2 #include <base_local_planner/simple_scored_sampling_planner.h>}\par
{\f2 #include <nav_msgs/Path.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid dwa_planner.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dwa__planner_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dwa__planner_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dwa_local_planner::DWAPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CA\'B5\'CF\'D6DWA\'CB\'E3\'B7\'A8\'B5\'C4\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'C0\'E0 }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b dwa_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_planner.h\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner/include/dwa_local_planner/dwa_planner.h}
{\xe \v dwa_local_planner/include/dwa_local_planner/dwa_planner.h}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef DWA_LOCAL_PLANNER_DWA_PLANNER_H_}\par
38 {\cf21 #define DWA_LOCAL_PLANNER_DWA_PLANNER_H_}\par
39 \par
40 {\cf21 #include <vector>}\par
41 {\cf21 #include <Eigen/Core>}\par
42 \par
43 \par
44 {\cf21 #include <dwa_local_planner/DWAPlannerConfig.h>}\par
45 \par
46 {\cf20 //for creating a local cost grid}\par
47 {\cf21 #include <base_local_planner/map_grid_visualizer.h>}\par
48 \par
49 {\cf20 //for obstacle data access}\par
50 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
51 \par
52 {\cf21 #include <base_local_planner/trajectory.h>}\par
53 {\cf21 #include <base_local_planner/local_planner_limits.h>}\par
54 {\cf21 #include <base_local_planner/local_planner_util.h>}\par
55 {\cf21 #include <base_local_planner/simple_trajectory_generator.h>}\par
56 \par
57 {\cf21 #include <base_local_planner/oscillation_cost_function.h>}\par
58 {\cf21 #include <base_local_planner/map_grid_cost_function.h>}\par
59 {\cf21 #include <base_local_planner/obstacle_cost_function.h>}\par
60 {\cf21 #include <base_local_planner/twirling_cost_function.h>}\par
61 {\cf21 #include <base_local_planner/simple_scored_sampling_planner.h>}\par
62 \par
63 {\cf21 #include <nav_msgs/Path.h>}\par
64 \par
65 {\cf17 namespace }dwa_local_planner \{\par
70   {\cf17 class }DWAPlanner \{\par
71     {\cf17 public}:\par
78       DWAPlanner(std::string name, base_local_planner::LocalPlannerUtil *planner_util);\par
79 \par
83       {\cf20 // ?DWAPlannerConfig}\par
84       {\cf18 void} reconfigure(DWAPlannerConfig &cfg);\par
85 \par
93       {\cf18 bool} checkTrajectory(\par
94           {\cf17 const} Eigen::Vector3f pos,\par
95           {\cf17 const} Eigen::Vector3f vel,\par
96           {\cf17 const} Eigen::Vector3f vel_samples);\par
97 \par
105       base_local_planner::Trajectory findBestPath(\par
106           {\cf17 const} geometry_msgs::PoseStamped& global_pose,\par
107           {\cf17 const} geometry_msgs::PoseStamped& global_vel,\par
108           geometry_msgs::PoseStamped& drive_velocities);\par
109 \par
121       {\cf18 void} updatePlanAndLocalCosts({\cf17 const} geometry_msgs::PoseStamped& global_pose,\par
122           {\cf17 const} std::vector<geometry_msgs::PoseStamped>& new_plan,\par
123           {\cf17 const} std::vector<geometry_msgs::Point>& footprint_spec);\par
124 \par
128       {\cf18 double} getSimPeriod() \{ {\cf19 return} sim_period_; \}\par
129 \par
140       {\cf18 bool} getCellCosts({\cf18 int} cx, {\cf18 int} cy, {\cf18 float} &path_cost, {\cf18 float} &goal_cost, {\cf18 float} &occ_cost, {\cf18 float} &total_cost);\par
141 \par
145       {\cf18 bool} setPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& orig_global_plan);\par
146 \par
147     {\cf17 private}:\par
148       {\cf20 // planner_util\'CA\'C7\'B9\'E6\'BB\'AE\'C6\'F7\'B8\'A8\'D6\'FA\'B6\'D4\'CF\'F3\'A3\'AC \'CE\'AA\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'CC\'E1\'B9\'A9\'C1\'CB\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'A3\'AC\'D7\'F8\'B1\'EA\'B1\'E4\'BB\'BB\'A3\'AC\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'B5\'C8\'CB\'E3\'B7\'A8\'CA\'E4\'C8\'EB}\par
149       base_local_planner::LocalPlannerUtil *planner_util_;\par
150 \par
151       {\cf18 double} stop_time_buffer_; {\cf20 // \'C9\'B2\'B3\'B5\'B7\'B4\'D3\'A6\'CA\'B1\'BC\'E4\'A3\'AC\'B1\'DC\'C3\'E2\'D7\'B2\'B5\'BD\'D5\'CF\'B0\'AD\'CE\'EF}\par
152       {\cf18 double} path_distance_bias_, goal_distance_bias_, occdist_scale_;\par
153       Eigen::Vector3f vsamples_;\par
154 \par
155       {\cf18 double} sim_period_; {\cf20 // \'BC\'C6\'CB\'E3DWA\'D7\'EE\'B4\'F3/\'D7\'EE\'D0\'A1\'CB\'D9\'B6\'C8\'D3\'C3\'B5\'C4\'C3\'EB\'CA\'FD}\par
156       base_local_planner::Trajectory result_traj_;\par
157 \par
158       {\cf18 double} forward_point_distance_;\par
159 \par
160       {\cf20 // \'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4\'B2\'CE\'BF\'BC\'C2\'B7\'BE\'B6\'A3\'AC\'C0\'B4\'D6\'C1\'D3\'DA\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'A3\'AC\'BF\'C9\'D2\'D4\'BF\'C9\'CA\'D3\'BB\'AF}\par
161       std::vector<geometry_msgs::PoseStamped> global_plan_;\par
162 \par
163       boost::mutex configuration_mutex_;\par
164       std::string frame_id_;\par
165       ros::Publisher traj_cloud_pub_;\par
166       {\cf18 bool} publish_cost_grid_pc_; {\cf20 // \'CA\'C7\'B7\'F1\'B7\'A2\'B2\'BC\'B5\'E3\'D4\'C6\'CF\'FB\'CF\'A2}\par
167       {\cf18 bool} publish_traj_pc_;\par
168 \par
169       {\cf18 double} cheat_factor_;\par
170 \par
171       base_local_planner::MapGridVisualizer map_viz_; {\cf20 // \'BF\'C9\'CA\'D3\'BB\'AF\'B4\'FA\'BC\'DB\'BA\'AF\'CA\'FD\'B2\'FA\'C9\'FA\'B5\'C4\'CA\'C6\'B3\'A1}\par
172 \par
173       base_local_planner::SimpleTrajectoryGenerator generator_;\par
174       base_local_planner::OscillationCostFunction oscillation_costs_;\par
175       base_local_planner::ObstacleCostFunction obstacle_costs_;\par
176       base_local_planner::MapGridCostFunction path_costs_;\par
177       base_local_planner::MapGridCostFunction goal_costs_;\par
178       base_local_planner::MapGridCostFunction goal_front_costs_;\par
179       base_local_planner::MapGridCostFunction alignment_costs_;\par
180       base_local_planner::TwirlingCostFunction twirling_costs_;\par
181 \par
182       base_local_planner::SimpleScoredSamplingPlanner scored_sampling_planner_;\par
183   \};\par
184 \};\par
185 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner/include/dwa_local_planner/dwa_planner_ros.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner/include/dwa_local_planner/dwa_planner_ros.h}
{\xe \v dwa_local_planner/include/dwa_local_planner/dwa_planner_ros.h}
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <boost/shared_ptr.hpp>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <dwa_local_planner/DWAPlannerConfig.h>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <nav_msgs/Odometry.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <nav_core/base_local_planner.h>}\par
{\f2 #include <base_local_planner/latched_stop_rotate_controller.h>}\par
{\f2 #include <base_local_planner/odometry_helper_ros.h>}\par
{\f2 #include <dwa_local_planner/dwa_planner.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid dwa_planner_ros.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dwa__planner__ros_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dwa__planner__ros_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b dwa_local_planner::DWAPlannerROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DWAPlannerROS\'CA\'C7\'B7\'E2\'D7\'B0\'C0\'E0\'A3\'AC\'CC\'E1\'B9\'A9\'C1\'CB\'D3\'EBmove_base\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'AC\'D7\'F7\'CE\'AAmove_base\'B5\'C4\'B2\'E5\'BC\'FE }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b dwa_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_planner_ros.h\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner/include/dwa_local_planner/dwa_planner_ros.h}
{\xe \v dwa_local_planner/include/dwa_local_planner/dwa_planner_ros.h}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef DWA_LOCAL_PLANNER_DWA_PLANNER_ROS_H_}\par
38 {\cf21 #define DWA_LOCAL_PLANNER_DWA_PLANNER_ROS_H_}\par
39 \par
40 {\cf21 #include <boost/shared_ptr.hpp>}\par
41 {\cf21 #include <boost/thread.hpp>}\par
42 \par
43 {\cf21 #include <tf2_ros/buffer.h>}\par
44 \par
45 {\cf21 #include <dynamic_reconfigure/server.h>}\par
46 {\cf21 #include <dwa_local_planner/DWAPlannerConfig.h>}\par
47 \par
48 {\cf21 #include <angles/angles.h>}\par
49 \par
50 {\cf21 #include <nav_msgs/Odometry.h>}\par
51 \par
52 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
53 {\cf21 #include <nav_core/base_local_planner.h>}\par
54 {\cf21 #include <base_local_planner/latched_stop_rotate_controller.h>}\par
55 \par
56 {\cf21 #include <base_local_planner/odometry_helper_ros.h>}\par
57 \par
58 {\cf21 #include <dwa_local_planner/dwa_planner.h>}\par
59 \par
60 {\cf17 namespace }dwa_local_planner \{\par
65   {\cf17 class }DWAPlannerROS : {\cf17 public} nav_core::BaseLocalPlanner \{\par
66     {\cf17 public}:\par
70       DWAPlannerROS();\par
71 \par
78       {\cf18 void} initialize(std::string name, tf2_ros::Buffer* tf,\par
79           costmap_2d::Costmap2DROS* costmap_ros);\par
80 \par
84       ~DWAPlannerROS();\par
85 \par
91       {\cf18 bool} computeVelocityCommands(geometry_msgs::Twist& cmd_vel);\par
92 \par
93 \par
99       {\cf18 bool} dwaComputeVelocityCommands(geometry_msgs::PoseStamped& global_pose, geometry_msgs::Twist& cmd_vel);\par
100 \par
106       {\cf18 bool} setPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& orig_global_plan);\par
107 \par
112       {\cf18 bool} isGoalReached();\par
113 \par
114 \par
115 \par
116       {\cf18 bool} isInitialized() \{\par
117         {\cf19 return} initialized_;\par
118       \}\par
119 \par
120     {\cf17 private}:\par
124       {\cf18 void} reconfigureCB(DWAPlannerConfig &config, uint32_t level);\par
125 \par
126       {\cf18 void} publishLocalPlan(std::vector<geometry_msgs::PoseStamped>& path);\par
127 \par
128       {\cf18 void} publishGlobalPlan(std::vector<geometry_msgs::PoseStamped>& path);\par
129 \par
130       tf2_ros::Buffer* tf_; \par
131 \par
132       {\cf20 // \'C8\'AB\'BE\'D6\'BA\'CD\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B5\'C4\'BF\'C9\'CA\'D3\'BB\'AF}\par
133       ros::Publisher g_plan_pub_, l_plan_pub_;\par
134 \par
135       {\cf20 // \'D3\'C3\'C0\'B4\'B4\'E6\'B4\'A2\'D4\'CB\'B6\'AF\'BF\'D8\'D6\'C6\'B2\'CE\'CA\'FD\'D2\'D4\'BC\'B0costmap2d\'A1\'A2tf\'B5\'C8\'A3\'AC\'BB\'E1\'B1\'BB\'B4\'AB\'C8\'EBdp_}\par
136       base_local_planner::LocalPlannerUtil planner_util_;\par
137       {\cf20 // \'D6\'B8\'CF\'F2dwa\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'C0\'E0\'B5\'C4\'B9\'B2\'CF\'ED\'D6\'B8\'D5\'EB}\par
138       boost::shared_ptr<DWAPlanner> dp_;\par
139 \par
140       costmap_2d::Costmap2DROS* costmap_ros_;\par
141 \par
142       dynamic_reconfigure::Server<DWAPlannerConfig> *dsrv_;\par
143       dwa_local_planner::DWAPlannerConfig default_config_;\par
144       {\cf18 bool} setup_;\par
145       geometry_msgs::PoseStamped current_pose_;\par
146       {\cf20 // \'B5\'BD\'B4\'EF\'C4\'BF\'B1\'EA\'B5\'E3\'BA\'F3\'B5\'C4\'CD\'A3\'D6\'B9\'C8\'BB\'BA\'F3\'D0\'FD\'D7\'AA\'B5\'C4\'D4\'CB\'B6\'AF\'BF\'D8\'D6\'C6\'C0\'E0}\par
147       base_local_planner::LatchedStopRotateController latchedStopRotateController_;\par
148 \par
149 \par
150       {\cf18 bool} initialized_;\par
151 \par
152       {\cf20 // \'D3\'C3\'C0\'B4\'B8\'A8\'D6\'FA\'BB\'F1\'C8\'A1odom\'D0\'C5\'CF\'A2\'A3\'AC\'BB\'E1\'B1\'BB\'B4\'AB\'C8\'EBdp_}\par
153       base_local_planner::OdometryHelperRos odom_helper_;\par
154       std::string odom_topic_;\par
155   \};\par
156 \};\par
157 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner/src/dwa_planner.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner/src/dwa_planner.cpp}
{\xe \v dwa_local_planner/src/dwa_planner.cpp}
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <dwa_local_planner/dwa_planner.h>}\par
{\f2 #include <base_local_planner/goal_functions.h>}\par
{\f2 #include <cmath>}\par
{\f2 #include <queue>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <sensor_msgs/PointCloud2.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid dwa_planner.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dwa__planner_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b dwa_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dwa_local_planner/src/dwa_planner_ros.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v dwa_local_planner/src/dwa_planner_ros.cpp}
{\xe \v dwa_local_planner/src/dwa_planner_ros.cpp}
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <dwa_local_planner/dwa_planner_ros.h>}\par
{\f2 #include <Eigen/Core>}\par
{\f2 #include <cmath>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <base_local_planner/goal_functions.h>}\par
{\f2 #include <nav_msgs/Path.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <nav_core/parameter_magic.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid dwa_planner_ros.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dwa__planner__ros_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b dwa_local_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fake_localization/fake_localization.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v fake_localization/fake_localization.cpp}
{\xe \v fake_localization/fake_localization.cpp}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <ros/time.h>}\par
{\f2 #include <nav_msgs/Odometry.h>}\par
{\f2 #include <geometry_msgs/PoseArray.h>}\par
{\f2 #include <geometry_msgs/PoseWithCovarianceStamped.h>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include "ros/console.h"}\par
{\f2 #include <tf2/LinearMath/Transform.h>}\par
{\f2 #include <tf2/convert.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <tf2_ros/transform_broadcaster.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
{\f2 #include <tf2_ros/message_filter.h>}\par
{\f2 #include "message_filters/subscriber.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid fake_localization.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fake__localization_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FakeOdomNode}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:fake_localization.cpp}
{\xe \v fake_localization.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fake_localization/static_odom_broadcaster.py \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v fake_localization/static_odom_broadcaster.py}
{\xe \v fake_localization/static_odom_broadcaster.py}
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b static_odom_broadcaster}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
def {\b static_odom_broadcaster.publishOdom} ()\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/astar.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/astar.h}
{\xe \v global_planner/include/global_planner/astar.h}
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/planner_core.h>}\par
{\f2 #include <global_planner/expander.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <algorithm>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid astar.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "astar_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "astar_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::Index}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b global_planner::greater1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::AStarExpansion}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
astar.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/astar.h}
{\xe \v global_planner/include/global_planner/astar.h}
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _ASTAR_H}\par
39 {\cf21 #define _ASTAR_H}\par
40 \par
41 {\cf21 #include <global_planner/planner_core.h>}\par
42 {\cf21 #include <global_planner/expander.h>}\par
43 {\cf21 #include <vector>}\par
44 {\cf21 #include <algorithm>}\par
45 \par
46 {\cf17 namespace }global_planner \{\par
47 {\cf17 class }Index \{\par
48     {\cf17 public}:\par
49         Index({\cf18 int} a, {\cf18 float} b) \{\par
50             i = a;\par
51             cost = b;\par
52         \}\par
53         {\cf18 int} i;\par
54         {\cf18 float} cost;\par
55 \};\par
56 \par
57 {\cf17 struct }greater1 \{\par
58         {\cf18 bool} operator()({\cf17 const} Index& a, {\cf17 const} Index& b){\cf17  const }\{\par
59             {\cf19 return} a.cost > b.cost;\par
60         \}\par
61 \};\par
62 \par
63 {\cf17 class }AStarExpansion : {\cf17 public} Expander \{\par
64     {\cf17 public}:\par
65         AStarExpansion(PotentialCalculator* p_calc, {\cf18 int} nx, {\cf18 int} ny);\par
66         {\cf17 virtual} ~AStarExpansion() \{\}\par
67         {\cf18 bool} calculatePotentials({\cf18 unsigned} {\cf18 char}* costs, {\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y, {\cf18 int} cycles,\par
68                                 {\cf18 float}* potential);\par
69     {\cf17 private}:\par
70         {\cf18 void} add({\cf18 unsigned} {\cf18 char}* costs, {\cf18 float}* potential, {\cf18 float} prev_potential, {\cf18 int} next_i, {\cf18 int} end_x, {\cf18 int} end_y);\par
71         std::vector<Index> queue_;\par
72 \};\par
73 \par
74 \} {\cf20 //end namespace global_planner}\par
75 {\cf21 #endif}\par
76 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/dijkstra.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/dijkstra.h}
{\xe \v global_planner/include/global_planner/dijkstra.h}
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <global_planner/planner_core.h>}\par
{\f2 #include <global_planner/expander.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid dijkstra.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dijkstra_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dijkstra_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::DijkstraExpansion}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRIORITYBUFSIZE}\~ 10000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b push_cur}({\b n})\~ \{ if ({\b n}>=0 && {\b n}<ns_ && !pending_[{\b n}] && getCost(costs, {\b n})<lethal_cost_ && currentEnd_<{\b PRIORITYBUFSIZE})\{ currentBuffer_[currentEnd_++]={\b n}; pending_[{\b n}]=true; \}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b push_next}({\b n})\~ \{ if ({\b n}>=0 && {\b n}<ns_ && !pending_[{\b n}] && getCost(costs, {\b n})<lethal_cost_ &&    nextEnd_<{\b PRIORITYBUFSIZE})\{    nextBuffer_[   nextEnd_++]={\b n}; pending_[{\b n}]=true; \}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b push_over}({\b n})\~ \{ if ({\b n}>=0 && {\b n}<ns_ && !pending_[{\b n}] && getCost(costs, {\b n})<lethal_cost_ &&    overEnd_<{\b PRIORITYBUFSIZE})\{    overBuffer_[   overEnd_++]={\b n}; pending_[{\b n}]=true; \}\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v PRIORITYBUFSIZE\:dijkstra.h}
{\xe \v dijkstra.h\:PRIORITYBUFSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRIORITYBUFSIZE\~ 10000}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v push_cur\:dijkstra.h}
{\xe \v dijkstra.h\:push_cur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define push_cur( {\b n})\~ \{ if ({\b n}>=0 && {\b n}<ns_ && !pending_[{\b n}] && getCost(costs, {\b n})<lethal_cost_ && currentEnd_<{\b PRIORITYBUFSIZE})\{ currentBuffer_[currentEnd_++]={\b n}; pending_[{\b n}]=true; \}\}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v push_next\:dijkstra.h}
{\xe \v dijkstra.h\:push_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define push_next( {\b n})\~ \{ if ({\b n}>=0 && {\b n}<ns_ && !pending_[{\b n}] && getCost(costs, {\b n})<lethal_cost_ &&    nextEnd_<{\b PRIORITYBUFSIZE})\{    nextBuffer_[   nextEnd_++]={\b n}; pending_[{\b n}]=true; \}\}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v push_over\:dijkstra.h}
{\xe \v dijkstra.h\:push_over}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define push_over( {\b n})\~ \{ if ({\b n}>=0 && {\b n}<ns_ && !pending_[{\b n}] && getCost(costs, {\b n})<lethal_cost_ &&    overEnd_<{\b PRIORITYBUFSIZE})\{    overBuffer_[   overEnd_++]={\b n}; pending_[{\b n}]=true; \}\}}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
dijkstra.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/dijkstra.h}
{\xe \v global_planner/include/global_planner/dijkstra.h}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _DIJKSTRA_H}\par
39 {\cf21 #define _DIJKSTRA_H}\par
40 \par
41 {\cf21 #define PRIORITYBUFSIZE 10000}\par
42 {\cf21 #include <math.h>}\par
43 {\cf21 #include <stdint.h>}\par
44 {\cf21 #include <string.h>}\par
45 {\cf21 #include <stdio.h>}\par
46 \par
47 {\cf21 #include <global_planner/planner_core.h>}\par
48 {\cf21 #include <global_planner/expander.h>}\par
49 \par
50 {\cf20 // inserting onto the priority blocks}\par
51 {\cf21 #define push_cur(n)  \{ if (n>=0 && n<ns_ && !pending_[n] && getCost(costs, n)<lethal_cost_ && currentEnd_<PRIORITYBUFSIZE)\{ currentBuffer_[currentEnd_++]=n; pending_[n]=true; \}\}}\par
52 {\cf21 #define push_next(n) \{ if (n>=0 && n<ns_ && !pending_[n] && getCost(costs, n)<lethal_cost_ &&    nextEnd_<PRIORITYBUFSIZE)\{    nextBuffer_[   nextEnd_++]=n; pending_[n]=true; \}\}}\par
53 {\cf21 #define push_over(n) \{ if (n>=0 && n<ns_ && !pending_[n] && getCost(costs, n)<lethal_cost_ &&    overEnd_<PRIORITYBUFSIZE)\{    overBuffer_[   overEnd_++]=n; pending_[n]=true; \}\}}\par
54 \par
55 {\cf17 namespace }global_planner \{\par
56 {\cf17 class }DijkstraExpansion : {\cf17 public} Expander \{\par
57     {\cf17 public}:\par
58         DijkstraExpansion(PotentialCalculator* p_calc, {\cf18 int} nx, {\cf18 int} ny);\par
59         {\cf17 virtual} ~DijkstraExpansion();\par
60         {\cf18 bool} calculatePotentials({\cf18 unsigned} {\cf18 char}* costs, {\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y, {\cf18 int} cycles,\par
61                                 {\cf18 float}* potential);\par
62 \par
68         {\cf18 void} setSize({\cf18 int} nx, {\cf18 int} ny); \par
70         {\cf18 void} setNeutralCost({\cf18 unsigned} {\cf18 char} neutral_cost) \{\par
71             neutral_cost_ = neutral_cost;\par
72             priorityIncrement_ = 2 * neutral_cost_;\par
73         \}\par
74 \par
75         {\cf18 void} setPreciseStart({\cf18 bool} precise)\{ precise_ = precise; \}\par
76     {\cf17 private}:\par
77 \par
84         {\cf18 void} updateCell({\cf18 unsigned} {\cf18 char}* costs, {\cf18 float}* potential, {\cf18 int} n); \par
86         {\cf18 float} getCost({\cf18 unsigned} {\cf18 char}* costs, {\cf18 int} n) \{\par
87             {\cf18 float} c = costs[n];\par
88             {\cf19 if} (c < lethal_cost_ - 1 || (unknown_ && c==255)) \{\par
89                 c = c * factor_ + neutral_cost_;\par
90                 {\cf19 if} (c >= lethal_cost_)\par
91                     c = lethal_cost_ - 1;\par
92                 {\cf19 return} c;\par
93             \}\par
94             {\cf19 return} lethal_cost_;\par
95         \}\par
96 \par
98         {\cf18 int} *buffer1_, *buffer2_, *buffer3_; \par
99         {\cf18 int} *currentBuffer_, *nextBuffer_, *overBuffer_; \par
100         {\cf18 int} currentEnd_, nextEnd_, overEnd_; \par
101         {\cf18 bool} *pending_; \par
102         {\cf18 bool} precise_;\par
103 \par
105         {\cf18 float} threshold_; \par
106         {\cf18 float} priorityIncrement_; \par
108 \};\par
109 \} {\cf20 //end namespace global_planner}\par
110 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/expander.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/expander.h}
{\xe \v global_planner/include/global_planner/expander.h}
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/potential_calculator.h>}\par
{\f2 #include <global_planner/planner_core.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid expander.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "expander_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "expander_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::Expander}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
expander.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/expander.h}
{\xe \v global_planner/include/global_planner/expander.h}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _EXPANDER_H}\par
39 {\cf21 #define _EXPANDER_H}\par
40 {\cf21 #include <global_planner/potential_calculator.h>}\par
41 {\cf21 #include <global_planner/planner_core.h>}\par
42 \par
43 {\cf17 namespace }global_planner \{\par
44 \par
45 {\cf17 class }Expander \{\par
46     {\cf17 public}:\par
47         Expander(PotentialCalculator* p_calc, {\cf18 int} nx, {\cf18 int} ny) :\par
48                 unknown_(true), lethal_cost_(253), neutral_cost_(50), factor_(3.0), p_calc_(p_calc) \{\par
49             setSize(nx, ny);\par
50         \}\par
51         {\cf17 virtual} ~Expander() \{\}\par
52         {\cf17 virtual} {\cf18 bool} calculatePotentials({\cf18 unsigned} {\cf18 char}* costs, {\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y,\par
53                                         {\cf18 int} cycles, {\cf18 float}* potential) = 0;\par
54 \par
60         {\cf17 virtual} {\cf18 void} setSize({\cf18 int} nx, {\cf18 int} ny) \{\par
61             nx_ = nx;\par
62             ny_ = ny;\par
63             ns_ = nx * ny;\par
64         \} \par
65         {\cf18 void} setLethalCost({\cf18 unsigned} {\cf18 char} lethal_cost) \{\par
66             lethal_cost_ = lethal_cost;\par
67         \}\par
68         {\cf18 void} setNeutralCost({\cf18 unsigned} {\cf18 char} neutral_cost) \{\par
69             neutral_cost_ = neutral_cost;\par
70         \}\par
71         {\cf18 void} setFactor({\cf18 float} factor) \{\par
72             factor_ = factor;\par
73         \}\par
74         {\cf18 void} setHasUnknown({\cf18 bool} unknown) \{\par
75             unknown_ = unknown;\par
76         \}\par
77 \par
78         {\cf18 void} clearEndpoint({\cf18 unsigned} {\cf18 char}* costs, {\cf18 float}* potential, {\cf18 int} gx, {\cf18 int} gy, {\cf18 int} s)\{\par
79             {\cf18 int} startCell = toIndex(gx, gy);\par
80             {\cf19 for}({\cf18 int} i=-s;i<=s;i++)\{\par
81             {\cf19 for}({\cf18 int} j=-s;j<=s;j++)\{\par
82                 {\cf18 int} n = startCell+i+nx_*j;\par
83                 {\cf19 if}(potential[n]<POT_HIGH)\par
84                     {\cf19 continue};\par
85                 {\cf18 float} c = costs[n]+neutral_cost_;\par
86                 {\cf18 float} pot = p_calc_->calculatePotential(potential, c, n);\par
87                 potential[n] = pot;\par
88             \}\par
89             \}\par
90         \}\par
91 \par
92     {\cf17 protected}:\par
93         {\cf17 inline} {\cf18 int} toIndex({\cf18 int} x, {\cf18 int} y) \{\par
94             {\cf19 return} x + nx_ * y;\par
95         \}\par
96 \par
97         {\cf18 int} nx_, ny_, ns_; \par
98         {\cf18 bool} unknown_;\par
99         {\cf18 unsigned} {\cf18 char} lethal_cost_, neutral_cost_;\par
100         {\cf18 int} cells_visited_;\par
101         {\cf18 float} factor_;\par
102         PotentialCalculator* p_calc_;\par
103 \par
104 \};\par
105 \par
106 \} {\cf20 //end namespace global_planner}\par
107 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/gradient_path.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/gradient_path.h}
{\xe \v global_planner/include/global_planner/gradient_path.h}
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/traceback.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <algorithm>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid gradient_path.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gradient__path_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gradient__path_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::GradientPath}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gradient_path.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/gradient_path.h}
{\xe \v global_planner/include/global_planner/gradient_path.h}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _GRADIENT_PATH_H}\par
39 {\cf21 #define _GRADIENT_PATH_H}\par
40 \par
41 {\cf21 #include<global_planner/traceback.h>}\par
42 {\cf21 #include <math.h>}\par
43 {\cf21 #include <algorithm>}\par
44 \par
45 {\cf17 namespace }global_planner \{\par
46 \par
47 {\cf17 class }GradientPath : {\cf17 public} Traceback \{\par
48     {\cf17 public}:\par
49         GradientPath(PotentialCalculator* p_calc);\par
50         {\cf17 virtual} ~GradientPath();\par
51 \par
52         {\cf18 void} setSize({\cf18 int} xs, {\cf18 int} ys);\par
53 \par
54         {\cf20 //}\par
55         {\cf20 // Path construction}\par
56         {\cf20 // Find gradient at array points, interpolate path}\par
57         {\cf20 // Use step size of pathStep, usually 0.5 pixel}\par
58         {\cf20 //}\par
59         {\cf20 // Some sanity checks:}\par
60         {\cf20 //  1. Stuck at same index position}\par
61         {\cf20 //  2. Doesn't get near goal}\par
62         {\cf20 //  3. Surrounded by high potentials}\par
63         {\cf20 //}\par
64         {\cf18 bool} getPath({\cf18 float}* potential, {\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y, std::vector<std::pair<float, float> >& path);\par
65     {\cf17 private}:\par
66         {\cf17 inline} {\cf18 int} getNearestPoint({\cf18 int} stc, {\cf18 float} dx, {\cf18 float} dy) \{\par
67             {\cf18 int} pt = stc + (int)round(dx) + (int)(xs_ * round(dy));\par
68             {\cf19 return} std::max(0, std::min(xs_ * ys_ - 1, pt));\par
69         \}\par
70         {\cf18 float} gradCell({\cf18 float}* potential, {\cf18 int} n);\par
71 \par
72         {\cf18 float} *gradx_, *grady_; \par
74         {\cf18 float} pathStep_; \par
75 \};\par
76 \par
77 \} {\cf20 //end namespace global_planner}\par
78 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/grid_path.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/grid_path.h}
{\xe \v global_planner/include/global_planner/grid_path.h}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <global_planner/traceback.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid grid_path.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "grid__path_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "grid__path_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::GridPath}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
grid_path.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/grid_path.h}
{\xe \v global_planner/include/global_planner/grid_path.h}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _GRID_PATH_H}\par
39 {\cf21 #define _GRID_PATH_H}\par
40 {\cf21 #include<vector>}\par
41 {\cf21 #include<global_planner/traceback.h>}\par
42 \par
43 {\cf17 namespace }global_planner \{\par
44 \par
45 {\cf17 class }GridPath : {\cf17 public} Traceback \{\par
46     {\cf17 public}:\par
47         GridPath(PotentialCalculator* p_calc): Traceback(p_calc)\{\}\par
48         {\cf17 virtual} ~GridPath() \{\}\par
49         {\cf18 bool} getPath({\cf18 float}* potential, {\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y, std::vector<std::pair<float, float> >& path);\par
50 \};\par
51 \par
52 \} {\cf20 //end namespace global_planner}\par
53 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/orientation_filter.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/orientation_filter.h}
{\xe \v global_planner/include/global_planner/orientation_filter.h}
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <nav_msgs/Path.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid orientation_filter.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "orientation__filter_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "orientation__filter_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::OrientationFilter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b global_planner::OrientationMode} \{ {\b global_planner::NONE}
, {\b global_planner::FORWARD}
, {\b global_planner::INTERPOLATE}
, {\b global_planner::FORWARDTHENINTERPOLATE}
, {\b global_planner::BACKWARD}
, {\b global_planner::LEFTWARD}
, {\b global_planner::RIGHTWARD}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
orientation_filter.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/orientation_filter.h}
{\xe \v global_planner/include/global_planner/orientation_filter.h}
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2015, David V. Lu!!}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of David V. Lu nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: David V. Lu!!}\par
36 {\cf20  *********************************************************************/}\par
37 {\cf21 #ifndef GLOBAL_PLANNER_ORIENTATION_FILTER_H}\par
38 {\cf21 #define GLOBAL_PLANNER_ORIENTATION_FILTER_H}\par
39 {\cf21 #include <nav_msgs/Path.h>}\par
40 \par
41 {\cf17 namespace }global_planner \{\par
42 \par
43 {\cf17 enum} OrientationMode \{ NONE, FORWARD, INTERPOLATE, FORWARDTHENINTERPOLATE, BACKWARD, LEFTWARD, RIGHTWARD \};\par
44 \par
45 {\cf17 class }OrientationFilter \{\par
46     {\cf17 public}:\par
47         OrientationFilter() : omode_(NONE) \{\}\par
48     \par
49     \par
50         {\cf17 virtual} {\cf18 void} processPath({\cf17 const} geometry_msgs::PoseStamped& start,\par
51                                  std::vector<geometry_msgs::PoseStamped>& path);\par
52                                  \par
53         {\cf18 void} setAngleBasedOnPositionDerivative(std::vector<geometry_msgs::PoseStamped>& path, {\cf18 int} index);\par
54         {\cf18 void} interpolate(std::vector<geometry_msgs::PoseStamped>& path, \par
55                          {\cf18 int} start_index, {\cf18 int} end_index);\par
56                          \par
57         {\cf18 void} setMode(OrientationMode new_mode)\{ omode_ = new_mode; \}\par
58         {\cf18 void} setMode({\cf18 int} new_mode)\{ setMode((OrientationMode) new_mode); \}\par
59 \par
60         {\cf18 void} setWindowSize({\cf18 size_t} window_size)\{ window_size_ = window_size; \}\par
61     {\cf17 protected}:\par
62         OrientationMode omode_;\par
63         {\cf18 int} window_size_;\par
64 \};\par
65 \par
66 \} {\cf20 //end namespace global_planner}\par
67 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/planner_core.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/planner_core.h}
{\xe \v global_planner/include/global_planner/planner_core.h}
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <nav_msgs/Path.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <nav_core/base_global_planner.h>}\par
{\f2 #include <nav_msgs/GetPlan.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include <global_planner/potential_calculator.h>}\par
{\f2 #include <global_planner/expander.h>}\par
{\f2 #include <global_planner/traceback.h>}\par
{\f2 #include <global_planner/orientation_filter.h>}\par
{\f2 #include <global_planner/GlobalPlannerConfig.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid planner_core.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "planner__core_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "planner__core_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::GlobalPlanner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POT_HIGH}\~ 1.0e10\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v POT_HIGH\:planner_core.h}
{\xe \v planner_core.h\:POT_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POT_HIGH\~ 1.0e10}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
planner_core.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/planner_core.h}
{\xe \v global_planner/include/global_planner/planner_core.h}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef _PLANNERCORE_H}\par
2 {\cf21 #define _PLANNERCORE_H}\par
3 {\cf20 /*********************************************************************}\par
4 {\cf20  *}\par
5 {\cf20  * Software License Agreement (BSD License)}\par
6 {\cf20  *}\par
7 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
8 {\cf20  *  All rights reserved.}\par
9 {\cf20  *}\par
10 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
11 {\cf20  *  modification, are permitted provided that the following conditions}\par
12 {\cf20  *  are met:}\par
13 {\cf20  *}\par
14 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
15 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
16 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
17 {\cf20  *     copyright notice, this list of conditions and the following}\par
18 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
19 {\cf20  *     with the distribution.}\par
20 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
21 {\cf20  *     contributors may be used to endorse or promote products derived}\par
22 {\cf20  *     from this software without specific prior written permission.}\par
23 {\cf20  *}\par
24 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
25 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
26 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
27 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
28 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
29 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
30 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
31 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
32 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
33 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
34 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
35 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
36 {\cf20  *}\par
37 {\cf20  * Author: Eitan Marder-Eppstein}\par
38 {\cf20  *         David V. Lu!!}\par
39 {\cf20  *********************************************************************/}\par
40 {\cf21 #define POT_HIGH 1.0e10        }{\cf20 // unassigned cell potential}\par
41 {\cf21 #include <ros/ros.h>}\par
42 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
43 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
44 {\cf21 #include <geometry_msgs/Point.h>}\par
45 {\cf21 #include <nav_msgs/Path.h>}\par
46 {\cf21 #include <vector>}\par
47 {\cf21 #include <nav_core/base_global_planner.h>}\par
48 {\cf21 #include <nav_msgs/GetPlan.h>}\par
49 {\cf21 #include <dynamic_reconfigure/server.h>}\par
50 {\cf21 #include <global_planner/potential_calculator.h>}\par
51 {\cf21 #include <global_planner/expander.h>}\par
52 {\cf21 #include <global_planner/traceback.h>}\par
53 {\cf21 #include <global_planner/orientation_filter.h>}\par
54 {\cf21 #include <global_planner/GlobalPlannerConfig.h>}\par
55 \par
56 {\cf17 namespace }global_planner \{\par
57 \par
58 {\cf17 class }Expander;\par
59 {\cf17 class }GridPath;\par
60 \par
66 {\cf17 class }GlobalPlanner : {\cf17 public} nav_core::BaseGlobalPlanner \{\par
67     {\cf17 public}:\par
71         GlobalPlanner();\par
72 \par
79         GlobalPlanner(std::string name, costmap_2d::Costmap2D* costmap, std::string frame_id);\par
80 \par
84         ~GlobalPlanner();\par
85 \par
91         {\cf18 void} initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros);\par
92 \par
93         {\cf18 void} initialize(std::string name, costmap_2d::Costmap2D* costmap, std::string frame_id);\par
94 \par
102         {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start, {\cf17 const} geometry_msgs::PoseStamped& goal,\par
103                       std::vector<geometry_msgs::PoseStamped>& plan);\par
104 \par
113         {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start, {\cf17 const} geometry_msgs::PoseStamped& goal, {\cf18 double} tolerance,\par
114                       std::vector<geometry_msgs::PoseStamped>& plan);\par
115 \par
121         {\cf18 bool} computePotential({\cf17 const} geometry_msgs::Point& world_point);\par
122 \par
133         {\cf18 bool} getPlanFromPotential({\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y,\par
134                                   {\cf17 const} geometry_msgs::PoseStamped& goal,\par
135                                   std::vector<geometry_msgs::PoseStamped>& plan);\par
136 \par
142         {\cf18 double} getPointPotential({\cf17 const} geometry_msgs::Point& world_point);\par
143 \par
149         {\cf18 bool} validPointPotential({\cf17 const} geometry_msgs::Point& world_point);\par
150 \par
157         {\cf18 bool} validPointPotential({\cf17 const} geometry_msgs::Point& world_point, {\cf18 double} tolerance);\par
158 \par
162         {\cf18 void} publishPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& path);\par
163 \par
164         {\cf18 bool} makePlanService(nav_msgs::GetPlan::Request& req, nav_msgs::GetPlan::Response& resp);\par
165 \par
166     {\cf17 protected}:\par
167 \par
171         costmap_2d::Costmap2D* costmap_;\par
172         std::string frame_id_;\par
173         ros::Publisher plan_pub_;\par
174         {\cf18 bool} initialized_, allow_unknown_;\par
175 \par
176     {\cf17 private}:\par
177         {\cf18 void} mapToWorld({\cf18 double} mx, {\cf18 double} my, {\cf18 double}& wx, {\cf18 double}& wy);\par
178         {\cf18 bool} worldToMap({\cf18 double} wx, {\cf18 double} wy, {\cf18 double}& mx, {\cf18 double}& my);\par
179         {\cf18 void} clearRobotCell({\cf17 const} geometry_msgs::PoseStamped& global_pose, {\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my);\par
180         {\cf18 void} publishPotential({\cf18 float}* potential);\par
181 \par
182         {\cf18 double} planner_window_x_, planner_window_y_, default_tolerance_;\par
183         boost::mutex mutex_;\par
184         ros::ServiceServer make_plan_srv_;\par
185 \par
186         PotentialCalculator* p_calc_;\par
187         Expander* planner_;\par
188         Traceback* path_maker_;\par
189         OrientationFilter* orientation_filter_;\par
190 \par
191         {\cf18 bool} publish_potential_;\par
192         ros::Publisher potential_pub_;\par
193         {\cf18 int} publish_scale_;\par
194 \par
195         {\cf18 void} outlineMap({\cf18 unsigned} {\cf18 char}* costarr, {\cf18 int} nx, {\cf18 int} ny, {\cf18 unsigned} {\cf18 char} value);\par
196 \par
197         {\cf18 float}* potential_array_; {\cf20 // \'BF\'C9\'D0\'D0\'B5\'E3\'BE\'D8\'D5\'F3}\par
198         {\cf18 unsigned} {\cf18 int} start_x_, start_y_, end_x_, end_y_;\par
199 \par
200         {\cf18 bool} old_navfn_behavior_;\par
201         {\cf18 float} convert_offset_;\par
202 \par
203         {\cf18 bool} outline_map_;\par
204 \par
205         dynamic_reconfigure::Server<global_planner::GlobalPlannerConfig> *dsrv_;\par
206         {\cf18 void} reconfigureCB(global_planner::GlobalPlannerConfig &config, uint32_t level);\par
207 \par
208 \};\par
209 \par
210 \} {\cf20 //end namespace global_planner}\par
211 \par
212 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/potential_calculator.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/potential_calculator.h}
{\xe \v global_planner/include/global_planner/potential_calculator.h}
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <algorithm>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid potential_calculator.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "potential__calculator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "potential__calculator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::PotentialCalculator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
potential_calculator.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/potential_calculator.h}
{\xe \v global_planner/include/global_planner/potential_calculator.h}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _POTENTIAL_CALCULATOR_H}\par
39 {\cf21 #define _POTENTIAL_CALCULATOR_H}\par
40 \par
41 {\cf21 #include <algorithm>}\par
42 \par
43 {\cf17 namespace }global_planner \{\par
44 \par
45 {\cf17 class }PotentialCalculator \{\par
46     {\cf17 public}:\par
47         PotentialCalculator({\cf18 int} nx, {\cf18 int} ny) \{\par
48             setSize(nx, ny);\par
49         \}\par
50         {\cf17 virtual} ~PotentialCalculator() \{\}\par
51         {\cf17 virtual} {\cf18 float} calculatePotential({\cf18 float}* potential, {\cf18 unsigned} {\cf18 char} cost, {\cf18 int} n, {\cf18 float} prev_potential=-1)\{\par
52             {\cf19 if}(prev_potential < 0)\{\par
53                 {\cf20 // get min of neighbors}\par
54                 {\cf18 float} min_h = std::min( potential[n - 1], potential[n + 1] ),\par
55                       min_v = std::min( potential[n - nx_], potential[n + nx_]);\par
56                 prev_potential = std::min(min_h, min_v);\par
57             \}\par
58 \par
59             {\cf19 return} prev_potential + cost;\par
60         \}\par
61 \par
67         {\cf17 virtual} {\cf18 void} setSize({\cf18 int} nx, {\cf18 int} ny) \{\par
68             nx_ = nx;\par
69             ny_ = ny;\par
70             ns_ = nx * ny;\par
71         \} \par
73     {\cf17 protected}:\par
74         {\cf17 inline} {\cf18 int} toIndex({\cf18 int} x, {\cf18 int} y) \{\par
75             {\cf19 return} x + nx_ * y;\par
76         \}\par
77 \par
78         {\cf18 int} nx_, ny_, ns_; \par
79 \};\par
80 \par
81 \} {\cf20 //end namespace global_planner}\par
82 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/quadratic_calculator.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/quadratic_calculator.h}
{\xe \v global_planner/include/global_planner/quadratic_calculator.h}
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <global_planner/potential_calculator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid quadratic_calculator.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "quadratic__calculator_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "quadratic__calculator_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::QuadraticCalculator}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
quadratic_calculator.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/quadratic_calculator.h}
{\xe \v global_planner/include/global_planner/quadratic_calculator.h}
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _QUADRATIC_CALCULATOR_H}\par
39 {\cf21 #define _QUADRATIC_CALCULATOR_H}\par
40 {\cf21 #include<vector>}\par
41 {\cf21 #include<global_planner/potential_calculator.h>}\par
42 \par
43 {\cf17 namespace }global_planner \{\par
44 \par
45 {\cf17 class }QuadraticCalculator : {\cf17 public} PotentialCalculator \{\par
46     {\cf17 public}:\par
47         QuadraticCalculator({\cf18 int} nx, {\cf18 int} ny): PotentialCalculator(nx,ny) \{\}\par
48 \par
49         {\cf18 float} calculatePotential({\cf18 float}* potential, {\cf18 unsigned} {\cf18 char} cost, {\cf18 int} n, {\cf18 float} prev_potential);\par
50 \};\par
51 \par
52 \par
53 \} {\cf20 //end namespace global_planner}\par
54 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/include/global_planner/traceback.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/traceback.h}
{\xe \v global_planner/include/global_planner/traceback.h}
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <global_planner/potential_calculator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid traceback.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "traceback_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "traceback_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::Traceback}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
traceback.h\par \pard\plain 
{\tc\tcl2 \v global_planner/include/global_planner/traceback.h}
{\xe \v global_planner/include/global_planner/traceback.h}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, 2013, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *         David V. Lu!!}\par
37 {\cf20  *********************************************************************/}\par
38 {\cf21 #ifndef _TRACEBACK_H}\par
39 {\cf21 #define _TRACEBACK_H}\par
40 {\cf21 #include<vector>}\par
41 {\cf21 #include<global_planner/potential_calculator.h>}\par
42 \par
43 {\cf17 namespace }global_planner \{\par
44 \par
45 {\cf17 class }Traceback \{\par
46     {\cf17 public}:\par
47         Traceback(PotentialCalculator* p_calc) : p_calc_(p_calc) \{\}\par
48         {\cf17 virtual} ~Traceback() \{\}\par
49         {\cf17 virtual} {\cf18 bool} getPath({\cf18 float}* potential, {\cf18 double} start_x, {\cf18 double} start_y, {\cf18 double} end_x, {\cf18 double} end_y, std::vector<std::pair<float, float> >& path) = 0;\par
50         {\cf17 virtual} {\cf18 void} setSize({\cf18 int} xs, {\cf18 int} ys) \{\par
51             xs_ = xs;\par
52             ys_ = ys;\par
53         \}\par
54         {\cf17 inline} {\cf18 int} getIndex({\cf18 int} x, {\cf18 int} y) \{\par
55             {\cf19 return} x + y * xs_;\par
56         \}\par
57         {\cf18 void} setLethalCost({\cf18 unsigned} {\cf18 char} lethal_cost) \{\par
58             lethal_cost_ = lethal_cost;\par
59         \}\par
60     {\cf17 protected}:\par
61         {\cf18 int} xs_, ys_;\par
62         {\cf18 unsigned} {\cf18 char} lethal_cost_;\par
63         PotentialCalculator* p_calc_;  {\cf20 // \'BC\'C6\'CB\'E3\'A1\'B0\'D2\'BB\'B8\'F6\'B5\'E3\'A1\'B1\'B5\'C4\'BF\'C9\'D0\'D0\'D0\'D4}\par
64 \};\par
65 \par
66 \} {\cf20 //end namespace global_planner}\par
67 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/astar.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/astar.cpp}
{\xe \v global_planner/src/astar.cpp}
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/astar.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid astar.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "astar_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/dijkstra.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/dijkstra.cpp}
{\xe \v global_planner/src/dijkstra.cpp}
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/dijkstra.h>}\par
{\f2 #include <algorithm>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid dijkstra.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dijkstra_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INVSQRT2}\~ 0.707106781\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v INVSQRT2\:dijkstra.cpp}
{\xe \v dijkstra.cpp\:INVSQRT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INVSQRT2\~ 0.707106781}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/gradient_path.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/gradient_path.cpp}
{\xe \v global_planner/src/gradient_path.cpp}
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/gradient_path.h>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <global_planner/planner_core.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid gradient_path.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "gradient__path_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/grid_path.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/grid_path.cpp}
{\xe \v global_planner/src/grid_path.cpp}
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/grid_path.h>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid grid_path.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "grid__path_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/orientation_filter.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/orientation_filter.cpp}
{\xe \v global_planner/src/orientation_filter.cpp}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/orientation_filter.h>}\par
{\f2 #include <tf2/LinearMath/Matrix3x3.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
{\f2 #include <angles/angles.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid orientation_filter.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "orientation__filter_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b global_planner::set_angle} (geometry_msgs::PoseStamped *pose, double angle)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/plan_node.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/plan_node.cpp}
{\xe \v global_planner/src/plan_node.cpp}
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/planner_core.h>}\par
{\f2 #include <navfn/MakeNavPlan.h>}\par
{\f2 #include <boost/shared_ptr.hpp>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid plan_node.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "plan__node_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b global_planner::PlannerWithCostmap}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:plan_node.cpp}
{\xe \v plan_node.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/planner_core.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/planner_core.cpp}
{\xe \v global_planner/src/planner_core.cpp}
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/planner_core.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <global_planner/dijkstra.h>}\par
{\f2 #include <global_planner/astar.h>}\par
{\f2 #include <global_planner/grid_path.h>}\par
{\f2 #include <global_planner/gradient_path.h>}\par
{\f2 #include <global_planner/quadratic_calculator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid planner_core.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "planner__core_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
global_planner/src/quadratic_calculator.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v global_planner/src/quadratic_calculator.cpp}
{\xe \v global_planner/src/quadratic_calculator.cpp}
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <global_planner/quadratic_calculator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid quadratic_calculator.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "quadratic__calculator_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b global_planner}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/include/map_server/image_loader.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/include/map_server/image_loader.h}
{\xe \v map_server/include/map_server/image_loader.h}
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "nav_msgs/GetMap.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid image_loader.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "image__loader_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "image__loader_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b map_server}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b MapMode} \{ {\b TRINARY}
, {\b SCALE}
, {\b RAW}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_server::loadMapFromFile} (nav_msgs::GetMap::Response *resp, const char *fname, double res, bool negate, double occ_th, double free_th, double *origin, {\b MapMode} mode={\b TRINARY})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\'C0\'E0\'D0\'CD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MapMode\:image_loader.h}
{\xe \v image_loader.h\:MapMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b MapMode}}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map mode Default: TRINARY - value >= occ_th - Occupied (100) value <= free_th - Free (0) otherwise - Unknown SCALE - alpha < 1.0 - Unknown value >= occ_th - Occupied (100) value <= free_th - Free (0) otherwise - f( (free_th, occ_th) ) = (0, 100) (linearly map in between values to (0,100) RAW - value = value \par
}{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
\'C3\'B6\'BE\'D9\'D6\'B5:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TRINARY\:image_loader.h}
{\xe \v image_loader.h\:TRINARY}
{\qr TRINARY{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
\cell }{\cell }{\row }
{\xe \v SCALE\:image_loader.h}
{\xe \v image_loader.h\:SCALE}
{\qr SCALE{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
\cell }{\cell }{\row }
{\xe \v RAW\:image_loader.h}
{\xe \v image_loader.h\:RAW}
{\qr RAW{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
\cell }{\cell }{\row }
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
image_loader.h\par \pard\plain 
{\tc\tcl2 \v map_server/include/map_server/image_loader.h}
{\xe \v map_server/include/map_server/image_loader.h}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Copyright (c) 2008, Willow Garage, Inc.}\par
3 {\cf20  * All rights reserved.}\par
4 {\cf20  *}\par
5 {\cf20  * Redistribution and use in source and binary forms, with or without}\par
6 {\cf20  * modification, are permitted provided that the following conditions are met:}\par
7 {\cf20  *}\par
8 {\cf20  *     * Redistributions of source code must retain the above copyright}\par
9 {\cf20  *       notice, this list of conditions and the following disclaimer.}\par
10 {\cf20  *     * Redistributions in binary form must reproduce the above copyright}\par
11 {\cf20  *       notice, this list of conditions and the following disclaimer in the}\par
12 {\cf20  *       documentation and/or other materials provided with the distribution.}\par
13 {\cf20  *     * Neither the name of the Willow Garage, Inc. nor the names of its}\par
14 {\cf20  *       contributors may be used to endorse or promote products derived from}\par
15 {\cf20  *       this software without specific prior written permission.}\par
16 {\cf20  *}\par
17 {\cf20  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"}\par
18 {\cf20  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE}\par
19 {\cf20  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE}\par
20 {\cf20  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE}\par
21 {\cf20  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR}\par
22 {\cf20  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF}\par
23 {\cf20  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS}\par
24 {\cf20  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN}\par
25 {\cf20  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)}\par
26 {\cf20  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
27 {\cf20  * POSSIBILITY OF SUCH DAMAGE.}\par
28 {\cf20  */}\par
29 {\cf21 #ifndef MAP_SERVER_MAP_SERVER_H}\par
30 {\cf21 #define MAP_SERVER_MAP_SERVER_H}\par
31 \par
32 {\cf20 /*}\par
33 {\cf20  * Author: Brian Gerkey}\par
34 {\cf20  */}\par
35 \par
36 {\cf21 #include "nav_msgs/GetMap.h"}\par
37 \par
52 {\cf17 enum} MapMode \{TRINARY, SCALE, RAW\};\par
53 \par
54 {\cf17 namespace }map_server\par
55 \{\par
56 \par
71 {\cf18 void} loadMapFromFile(nav_msgs::GetMap::Response* resp,\par
72                      {\cf17 const} {\cf18 char}* fname, {\cf18 double} res, {\cf18 bool} negate,\par
73                      {\cf18 double} occ_th, {\cf18 double} free_th, {\cf18 double}* origin,\par
74                      MapMode mode=TRINARY);\par
75 \}\par
76 \par
77 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/src/image_loader.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/src/image_loader.cpp}
{\xe \v map_server/src/image_loader.cpp}
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstring>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <SDL/SDL_image.h>}\par
{\f2 #include <LinearMath/btQuaternion.h>}\par
{\f2 #include "map_server/image_loader.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid image_loader.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "image__loader_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b map_server}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAP_IDX}(sx,  i,  j)\~ ((sx) * (j) + (i))\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b map_server::loadMapFromFile} (nav_msgs::GetMap::Response *resp, const char *fname, double res, bool negate, double occ_th, double free_th, double *origin, {\b MapMode} mode={\b TRINARY})\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v MAP_IDX\:image_loader.cpp}
{\xe \v image_loader.cpp\:MAP_IDX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAP_IDX( sx,  i,  j)\~ ((sx) * (j) + (i))}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/src/main.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/src/main.cpp}
{\xe \v map_server/src/main.cpp}
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <fstream>}\par
{\f2 #include <boost/filesystem.hpp>}\par
{\f2 #include "ros/ros.h"}\par
{\f2 #include "ros/console.h"}\par
{\f2 #include "map_server/image_loader.h"}\par
{\f2 #include "nav_msgs/MapMetaData.h"}\par
{\f2 #include "nav_msgs/LoadMap.h"}\par
{\f2 #include "yaml-cpp/yaml.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid main.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "main_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapServer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USAGE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v USAGE\:main.cpp}
{\xe \v main.cpp\:USAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USAGE}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               {\cf22 "\\nUSAGE: map_server <map.yaml>\\n"} \\\par
              {\cf22 "  map.yaml: map description file\\n"} \\\par
              {\cf22 "DEPRECATED USAGE: map_server <map> <resolution>\\n"} \\\par
              {\cf22 "  map: image file to load\\n"}\\\par
              {\cf22 "  resolution: map resolution [meters/pixel]"}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/src/map_saver.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/src/map_saver.cpp}
{\xe \v map_server/src/map_saver.cpp}
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <cstdio>}\par
{\f2 #include "ros/ros.h"}\par
{\f2 #include "ros/console.h"}\par
{\f2 #include "nav_msgs/GetMap.h"}\par
{\f2 #include "tf2/LinearMath/Matrix3x3.h"}\par
{\f2 #include "geometry_msgs/Quaternion.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid map_saver.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "map__saver_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapGenerator}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Map generation node. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b USAGE}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v USAGE\:map_saver.cpp}
{\xe \v map_saver.cpp\:USAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define USAGE}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid               {\cf22 "Usage: \\n"} \\\par
              {\cf22 "  map_saver -h\\n"}\\\par
              {\cf22 "  map_saver [--occ <threshold_occupied>] [--free <threshold_free>] [-f <mapname>] [ROS remapping args]"}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:map_saver.cpp}
{\xe \v map_saver.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/src/map_server.dox \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/src/map_server.dox}
{\xe \v map_server/src/map_server.dox}
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/test/consumer.py \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/test/consumer.py}
{\xe \v map_server/test/consumer.py}
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b consumer.TestConsumer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b consumer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b consumer.PKG} = 'static_map_server'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b consumer.NAME} = 'consumer'\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/test/rtest.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/test/rtest.cpp}
{\xe \v map_server/test/rtest.cpp}
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <gtest/gtest.h>}\par
{\f2 #include <ros/service.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <ros/package.h>}\par
{\f2 #include <nav_msgs/GetMap.h>}\par
{\f2 #include <nav_msgs/OccupancyGrid.h>}\par
{\f2 #include <nav_msgs/MapMetaData.h>}\par
{\f2 #include <nav_msgs/LoadMap.h>}\par
{\f2 #include "test_constants.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid rtest.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rtest_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MapClientTest}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_F} ({\b MapClientTest}, call_service)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_F} ({\b MapClientTest}, subscribe_topic)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_F} ({\b MapClientTest}, subscribe_topic_metadata)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST_F} ({\b MapClientTest}, change_map)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b g_argc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char ** {\b g_argv}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:rtest.cpp}
{\xe \v rtest.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_F\:rtest.cpp}
{\xe \v rtest.cpp\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\b MapClientTest} , call_service )}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST_F\:rtest.cpp}
{\xe \v rtest.cpp\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\b MapClientTest} , change_map )}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rtest_8cpp_a44d4b4f2e8aaecbfb64cd0e6e3b0f370_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST_F\:rtest.cpp}
{\xe \v rtest.cpp\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\b MapClientTest} , subscribe_topic )}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rtest_8cpp_af2bbe99f957717c9309c5ff70359916e_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST_F\:rtest.cpp}
{\xe \v rtest.cpp\:TEST_F}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST_F ({\b MapClientTest} , subscribe_topic_metadata )}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rtest_8cpp_ad4dc6db000a2a83b734f182942974a00_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g_argc\:rtest.cpp}
{\xe \v rtest.cpp\:g_argc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int g_argc}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_argv\:rtest.cpp}
{\xe \v rtest.cpp\:g_argv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char** g_argv}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/test/test_constants.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/test/test_constants.cpp}
{\xe \v map_server/test/test_constants.cpp}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "test_constants.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid test_constants.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "test__constants_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b tmap2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b g_valid_image_width} = 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b g_valid_image_height} = 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b g_valid_image_content} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b g_valid_png_file} = "test/testmap.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b g_valid_bmp_file} = "test/testmap.bmp"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b g_spectrum_png_file} = "test/spectrum.png"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b g_valid_image_res} = 0.1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b tmap2::g_valid_image_content} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b tmap2::g_valid_image_res} = 0.1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b tmap2::g_valid_image_width} = 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b tmap2::g_valid_image_height} = 12\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g_spectrum_png_file\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_spectrum_png_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* g_spectrum_png_file = "test/spectrum.png"}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_bmp_file\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_valid_bmp_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* g_valid_bmp_file = "test/testmap.bmp"}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_content\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_valid_image_content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char g_valid_image_content[]}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'B3\'F5\'CA\'BC\'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
0,0,0,0,0,0,0,0,0,0,\par
100,100,100,100,0,0,100,100,100,0,\par
100,100,100,100,0,0,100,100,100,0,\par
100,0,0,0,0,0,0,0,0,0,\par
100,0,0,0,0,0,0,0,0,0,\par
100,0,0,0,0,0,100,100,0,0,\par
100,0,0,0,0,0,100,100,0,0,\par
100,0,0,0,0,0,100,100,0,0,\par
100,0,0,0,0,0,100,100,0,0,\par
100,0,0,0,0,0,0,0,0,0,\par
\}\par
}
}
{\xe \v g_valid_image_height\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_valid_image_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int g_valid_image_height = 10}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_res\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_valid_image_res}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float g_valid_image_res = 0.1}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_width\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_valid_image_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int g_valid_image_width = 10}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_png_file\:test_constants.cpp}
{\xe \v test_constants.cpp\:g_valid_png_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* g_valid_png_file = "test/testmap.png"}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
map_server/test/test_constants.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v map_server/test/test_constants.h}
{\xe \v map_server/test/test_constants.h}
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "test__constants_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b tmap2}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b g_valid_image_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b g_valid_image_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b g_valid_image_content} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b g_valid_png_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b g_valid_bmp_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b g_valid_image_res}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b g_spectrum_png_file}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v g_spectrum_png_file\:test_constants.h}
{\xe \v test_constants.h\:g_spectrum_png_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* g_spectrum_png_file{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_bmp_file\:test_constants.h}
{\xe \v test_constants.h\:g_valid_bmp_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* g_valid_bmp_file{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_content\:test_constants.h}
{\xe \v test_constants.h\:g_valid_image_content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char g_valid_image_content[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_height\:test_constants.h}
{\xe \v test_constants.h\:g_valid_image_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int g_valid_image_height{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_res\:test_constants.h}
{\xe \v test_constants.h\:g_valid_image_res}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float g_valid_image_res{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_image_width\:test_constants.h}
{\xe \v test_constants.h\:g_valid_image_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int g_valid_image_width{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_valid_png_file\:test_constants.h}
{\xe \v test_constants.h\:g_valid_png_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* g_valid_png_file{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
test_constants.h\par \pard\plain 
{\tc\tcl2 \v map_server/test/test_constants.h}
{\xe \v map_server/test/test_constants.h}
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Copyright (c) 2008, Willow Garage, Inc.}\par
3 {\cf20  * All rights reserved.}\par
4 {\cf20  *}\par
5 {\cf20  * Redistribution and use in source and binary forms, with or without}\par
6 {\cf20  * modification, are permitted provided that the following conditions are met:}\par
7 {\cf20  *}\par
8 {\cf20  *     * Redistributions of source code must retain the above copyright}\par
9 {\cf20  *       notice, this list of conditions and the following disclaimer.}\par
10 {\cf20  *     * Redistributions in binary form must reproduce the above copyright}\par
11 {\cf20  *       notice, this list of conditions and the following disclaimer in the}\par
12 {\cf20  *       documentation and/or other materials provided with the distribution.}\par
13 {\cf20  *     * Neither the name of the Willow Garage, Inc. nor the names of its}\par
14 {\cf20  *       contributors may be used to endorse or promote products derived from}\par
15 {\cf20  *       this software without specific prior written permission.}\par
16 {\cf20  *}\par
17 {\cf20  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"}\par
18 {\cf20  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE}\par
19 {\cf20  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE}\par
20 {\cf20  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE}\par
21 {\cf20  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR}\par
22 {\cf20  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF}\par
23 {\cf20  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS}\par
24 {\cf20  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN}\par
25 {\cf20  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)}\par
26 {\cf20  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
27 {\cf20  * POSSIBILITY OF SUCH DAMAGE.}\par
28 {\cf20  */}\par
29 {\cf21 #ifndef MAP_SERVER_TEST_CONSTANTS_H}\par
30 {\cf21 #define MAP_SERVER_TEST_CONSTANTS_H}\par
31 \par
32 {\cf20 /* Author: Brian Gerkey */}\par
33 \par
34 {\cf20 /* This file externs global constants shared among tests */}\par
35 \par
36 {\cf17 extern} {\cf17 const} {\cf18 unsigned} {\cf18 int} g_valid_image_width;\par
37 {\cf17 extern} {\cf17 const} {\cf18 unsigned} {\cf18 int} g_valid_image_height;\par
38 {\cf17 extern} {\cf17 const} {\cf18 char} g_valid_image_content[];\par
39 {\cf17 extern} {\cf17 const} {\cf18 char}* g_valid_png_file;\par
40 {\cf17 extern} {\cf17 const} {\cf18 char}* g_valid_bmp_file;\par
41 {\cf17 extern} {\cf17 const} {\cf18 float} g_valid_image_res;\par
42 {\cf17 extern} {\cf17 const} {\cf18 char}* g_spectrum_png_file;\par
43 \par
44 {\cf17 namespace }tmap2 \{\par
45   {\cf17 extern} {\cf17 const} {\cf18 char} g_valid_image_content[];\par
46   {\cf17 extern} {\cf17 const} {\cf18 float} g_valid_image_res;\par
47   {\cf17 extern} {\cf17 const} {\cf18 unsigned} {\cf18 int} g_valid_image_width;\par
48   {\cf17 extern} {\cf17 const} {\cf18 unsigned} {\cf18 int} g_valid_image_height;\par
49 \}\par
50 \par
51 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_base/include/move_base/move_base.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_base/include/move_base/move_base.h}
{\xe \v move_base/include/move_base/move_base.h}
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <string>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <actionlib/server/simple_action_server.h>}\par
{\f2 #include <move_base_msgs/MoveBaseAction.h>}\par
{\f2 #include <nav_core/base_local_planner.h>}\par
{\f2 #include <nav_core/base_global_planner.h>}\par
{\f2 #include <nav_core/recovery_behavior.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <nav_msgs/GetPlan.h>}\par
{\f2 #include <pluginlib/class_loader.hpp>}\par
{\f2 #include <std_srvs/Empty.h>}\par
{\f2 #include <dynamic_reconfigure/server.h>}\par
{\f2 #include "move_base/MoveBaseConfig.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid move_base.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__base_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__base_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b move_base::MoveBase}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A class that uses the actionlib::ActionServer interface that moves the robot base to a goal location. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b move_base}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\'D0\'CD\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef actionlib::SimpleActionServer< move_base_msgs::MoveBaseAction > {\b move_base::MoveBaseActionServer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b move_base::MoveBaseState} \{ {\b move_base::PLANNING}
, {\b move_base::CONTROLLING}
, {\b move_base::CLEARING}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b move_base::RecoveryTrigger} \{ {\b move_base::PLANNING_R}
, {\b move_base::CONTROLLING_R}
, {\b move_base::OSCILLATION_R}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_base.h\par \pard\plain 
{\tc\tcl2 \v move_base/include/move_base/move_base.h}
{\xe \v move_base/include/move_base/move_base.h}
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef NAV_MOVE_BASE_ACTION_H_}\par
38 {\cf21 #define NAV_MOVE_BASE_ACTION_H_}\par
39 \par
40 {\cf21 #include <vector>}\par
41 {\cf21 #include <string>}\par
42 \par
43 {\cf21 #include <ros/ros.h>}\par
44 \par
45 {\cf21 #include <actionlib/server/simple_action_server.h>}\par
46 {\cf21 #include <move_base_msgs/MoveBaseAction.h>}\par
47 \par
48 {\cf21 #include <nav_core/base_local_planner.h>}\par
49 {\cf21 #include <nav_core/base_global_planner.h>}\par
50 {\cf21 #include <nav_core/recovery_behavior.h>}\par
51 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
52 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
53 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
54 {\cf21 #include <nav_msgs/GetPlan.h>}\par
55 \par
56 {\cf21 #include <pluginlib/class_loader.hpp>}\par
57 {\cf21 #include <std_srvs/Empty.h>}\par
58 \par
59 {\cf21 #include <dynamic_reconfigure/server.h>}\par
60 {\cf21 #include "move_base/MoveBaseConfig.h"}\par
61 \par
62 {\cf17 namespace }move_base \{\par
63   {\cf20 //typedefs to help us out with the action server so that we don't hace to type so much}\par
64   {\cf17 typedef} actionlib::SimpleActionServer<move_base_msgs::MoveBaseAction> MoveBaseActionServer;\par
65 \par
66   {\cf17 enum} MoveBaseState \{\par
67     PLANNING, {\cf20 // \'D5\'FD\'D4\'DA\'B9\'E6\'BB\'AE\'C2\'B7\'BE\'B6\'B5\'C4\'D7\'B4\'CC\'AC}\par
68     CONTROLLING, {\cf20 // \'BF\'D8\'D6\'C6\'BB\'FA\'C6\'F7\'C8\'CB\'D4\'CB\'B6\'AF\'B5\'C4\'D7\'B4\'CC\'AC}\par
69     CLEARING  {\cf20 // \'B9\'E6\'BB\'AE\'C2\'B7\'BE\'B6\'BB\'F2\'D5\'DF\'BF\'D8\'D6\'C6\'CA\'A7\'B0\'DC\'A3\'AC\'B4\'A6\'D3\'DA\'BB\'D6\'B8\'B4\'BB\'F2\'D5\'DF\'C7\'E5\'B3\'FD}\par
70   \};\par
71 \par
72   {\cf17 enum} RecoveryTrigger\par
73   \{\par
74     PLANNING_R,  {\cf20 // \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'CA\'A7\'B0\'DC}\par
75     CONTROLLING_R, {\cf20 // \'BE\'D6\'B2\'BF\'B9\'EC\'BC\'A3\'B9\'E6\'BB\'AE\'CA\'A7\'B0\'DC}\par
76     OSCILLATION_R {\cf20 // \'B3\'A4\'CA\'B1\'BC\'E4\'D4\'DA\'D0\'A1\'C7\'F8\'D3\'F2\'D4\'CB\'B6\'AF}\par
77   \};\par
78 \par
83   {\cf20 // move_base\'CA\'C7\'C2\'B7\'BE\'B6\'D3\'EB\'CB\'D9\'B6\'C8\'B9\'E6\'BB\'AE\'B5\'C4\'B4\'F3\'C0\'E0}\par
84   {\cf17 class }MoveBase \{\par
85     {\cf17 public}:\par
91       MoveBase(tf2_ros::Buffer& tf);\par
92 \par
96       {\cf17 virtual} ~MoveBase();\par
97 \par
103       {\cf18 bool} executeCycle(geometry_msgs::PoseStamped& goal);\par
104 \par
105     {\cf17 private}:\par
112       {\cf18 bool} clearCostmapsService(std_srvs::Empty::Request &req, std_srvs::Empty::Response &resp);\par
113 \par
120       {\cf18 bool} planService(nav_msgs::GetPlan::Request &req, nav_msgs::GetPlan::Response &resp);\par
121 \par
128       {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan);\par
129 \par
135       {\cf18 bool} loadRecoveryBehaviors(ros::NodeHandle node);\par
136 \par
140       {\cf18 void} loadDefaultRecoveryBehaviors();\par
141 \par
147       {\cf18 void} clearCostmapWindows({\cf18 double} size_x, {\cf18 double} size_y);\par
148 \par
152       {\cf18 void} publishZeroVelocity();\par
153 \par
157       {\cf18 void} resetState();\par
158 \par
159       {\cf18 void} goalCB({\cf17 const} geometry_msgs::PoseStamped::ConstPtr& goal);\par
160 \par
161       {\cf18 void} planThread();\par
162 \par
163       {\cf18 void} executeCb({\cf17 const} move_base_msgs::MoveBaseGoalConstPtr& move_base_goal);\par
164 \par
165       {\cf18 bool} isQuaternionValid({\cf17 const} geometry_msgs::Quaternion& q);\par
166 \par
167       {\cf18 bool} getRobotPose(geometry_msgs::PoseStamped& global_pose, costmap_2d::Costmap2DROS* costmap);\par
168 \par
169       {\cf18 double} distance({\cf17 const} geometry_msgs::PoseStamped& p1, {\cf17 const} geometry_msgs::PoseStamped& p2);\par
170 \par
171       geometry_msgs::PoseStamped goalToGlobalFrame({\cf17 const} geometry_msgs::PoseStamped& goal_pose_msg);\par
172 \par
176       {\cf18 void} wakePlanner({\cf17 const} ros::TimerEvent& event);\par
177 \par
178       tf2_ros::Buffer& tf_;\par
179 \par
180       MoveBaseActionServer* as_;  {\cf20 // actionlib\'B5\'C4\'B7\'FE\'CE\'F1\'C6\'F7}\par
181 \par
182       boost::shared_ptr<nav_core::BaseLocalPlanner> tc_;  {\cf20 // \'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'BC\'D3\'D4\'D8\'B2\'A2\'B4\'B4\'BD\'A8\'CA\'B5\'C0\'FD\'BA\'F3\'B5\'C4\'D6\'B8\'D5\'EB}\par
183       costmap_2d::Costmap2DROS* planner_costmap_ros_, *controller_costmap_ros_;\par
184 \par
185       boost::shared_ptr<nav_core::BaseGlobalPlanner> planner_;   {\cf20 // \'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7}\par
186       std::string robot_base_frame_, global_frame_;\par
187 \par
188       std::vector<boost::shared_ptr<nav_core::RecoveryBehavior> > recovery_behaviors_;  {\cf20 // \'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'A3\'AC\'D2\'BB\'B0\'E3\'C4\'AC\'C8\'CF\'CA\'C7\'D7\'AA\'C8\'A6\'C8\'A6\'A3\'AC\'D2\'B2\'BF\'C9\'D2\'D4\'D7\'D4\'B6\'A8\'D2\'E5\'C6\'E4\'CB\'FB\'B5\'C4\'D0\'D0\'CE\'AA}\par
189       std::vector<std::string> recovery_behavior_names_;\par
190       {\cf18 unsigned} {\cf18 int} recovery_index_;\par
191 \par
192       geometry_msgs::PoseStamped global_pose_;\par
193       {\cf18 double} planner_frequency_, controller_frequency_, inscribed_radius_, circumscribed_radius_;\par
194       {\cf18 double} planner_patience_, controller_patience_;\par
195       int32_t max_planning_retries_;\par
196       uint32_t planning_retries_;\par
197       {\cf18 double} conservative_reset_dist_, clearing_radius_;\par
198       ros::Publisher current_goal_pub_, vel_pub_, action_goal_pub_, recovery_status_pub_;\par
199       ros::Subscriber goal_sub_;\par
200       ros::ServiceServer make_plan_srv_, clear_costmaps_srv_;\par
201       {\cf18 bool} shutdown_costmaps_, clearing_rotation_allowed_, recovery_behavior_enabled_;\par
202       {\cf18 bool} make_plan_clear_costmap_, make_plan_add_unreachable_goal_;\par
203       {\cf18 double} oscillation_timeout_, oscillation_distance_;\par
204 \par
205       MoveBaseState state_;\par
206       RecoveryTrigger recovery_trigger_;\par
207 \par
208       ros::Time last_valid_plan_, last_valid_control_, last_oscillation_reset_;\par
209       geometry_msgs::PoseStamped oscillation_pose_;\par
210 \par
211       {\cf20 // \'D2\'D4\'B2\'E5\'BC\'FE\'D0\'CE\'CA\'BD\'CA\'B5\'CF\'D6\'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'A1\'A2\'BE\'D6\'B2\'BF\'B9\'E6\'BB\'AE\'C6\'F7\'BA\'CD\'B6\'AA\'CA\'A7\'CA\'B1\'BB\'D6\'B8\'B4\'B9\'E6\'BB\'AE\'C6\'F7\'A1\'A3}\par
212       {\cf20 // \'B2\'E5\'BC\'FE\'D0\'CE\'CA\'BD\'BF\'C9\'D2\'D4\'CA\'B5\'CF\'D6\'CB\'E6\'CA\'B1\'B6\'AF\'CC\'AC\'B5\'D8\'BC\'D3\'D4\'D8C++\'C0\'E0\'BF\'E2\'A3\'AC\'B5\'AB\'D0\'E8\'D2\'AA\'D4\'DA\'B0\'FC\'D6\'D0\'D7\'A2\'B2\'E1\'B8\'C3\'B2\'E5\'BC\'FE\'A3\'AC\'B2\'BB\'D3\'C3\'D5\'E2\'B8\'F6\'B5\'C4\'BB\'B0\'D0\'E8\'D2\'AA\'CC\'E1\'C7\'B0\'C1\'B4\'BD\'D3\'A3\'A8\'CF\'E0\'B5\'B1\'D3\'DA\'D4\'CB\'D0\'D0\'CA\'B1\'BC\'D3\'D4\'D8\'A3\'A9}\par
213       pluginlib::ClassLoader<nav_core::BaseGlobalPlanner> bgp_loader_;\par
214       pluginlib::ClassLoader<nav_core::BaseLocalPlanner> blp_loader_;\par
215       pluginlib::ClassLoader<nav_core::RecoveryBehavior> recovery_loader_;\par
216 \par
217       {\cf20 // \'B1\'A3\'B4\'E6\'B9\'E6\'BB\'AE\'C6\'F7\'D6\'D0\'B8\'D5\'B8\'D5\'CB\'E3\'B3\'F6\'B5\'C4\'C2\'B7\'BE\'B6\'A3\'AC\'C8\'BB\'BA\'F3\'B4\'AB\'B5\'DDplanner_plan_ --> latest_plan_ --> controller_plan_}\par
218       std::vector<geometry_msgs::PoseStamped>* planner_plan_;\par
219       {\cf20 //\'D7\'F7\'CE\'AA\'D2\'BB\'B8\'F6\'C7\'C5\'C1\'BA\'A3\'AC\'D4\'DAMoveBase::executeCycle\'D6\'D0\'B4\'AB\'B5\'DD\'B8\'F8controller_plan_}\par
220       std::vector<geometry_msgs::PoseStamped>* latest_plan_;\par
221       std::vector<geometry_msgs::PoseStamped>* controller_plan_;\par
222 \par
223       {\cf20 // \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'CF\'DF\'B3\'CC\'CF\'E0\'B9\'D8\'B5\'C4\'B1\'E4\'C1\'BF}\par
224       {\cf18 bool} runPlanner_;\par
225       {\cf20 // boost\'B5\'C4\'D2\'BB\'D6\'D6\'BD\'E1\'BA\'CF\'C1\'CB\'BB\'A5\'B3\'E2\'CB\'F8\'B5\'C4\'D3\'C3\'B7\'A8\'A3\'AC\'BF\'C9\'D2\'D4\'CA\'B9\'D2\'BB\'B8\'F6\'CF\'DF\'B3\'CC\'BD\'F8\'C8\'EB\'CB\'AF\'C3\'DF\'D7\'B4\'CC\'AC\'A3\'AC\'C8\'BB\'BA\'F3\'D4\'DA\'C1\'ED\'D2\'BB\'B8\'F6\'CF\'DF\'B3\'CC\'B4\'A5\'B7\'A2\'BB\'BD\'D0\'D1\'A1\'A3}\par
226       boost::recursive_mutex planner_mutex_;\par
227       {\cf20 // \'CD\'A8\'B9\'FD\'D5\'E2\'B8\'F6\'D6\'B5\'BD\'ABgoal\'D4\'DAMoveBase::executeCb\'D3\'EBMoveBase::planThread()\'D6\'AE\'BC\'E4\'B4\'AB\'B5\'DD}\par
228       {\cf20 // boost::condition_variable_any\'D3\'C3\'C0\'B4\'CA\'B5\'CF\'D6\'B6\'E0\'CF\'DF\'B3\'CC\'CD\'AC\'B2\'BD\'A3\'AC\'CB\'FC\'B1\'D8\'D0\'EB\'D3\'EB\'BB\'A5\'B3\'E2\'C1\'BF\'C5\'E4\'BA\'CF\'CA\'B9\'D3\'C3\'A1\'A3}\par
229       boost::condition_variable_any planner_cond_;\par
230       geometry_msgs::PoseStamped planner_goal_;\par
231       boost::thread* planner_thread_;\par
232 \par
233 \par
234       boost::recursive_mutex configuration_mutex_;\par
235       dynamic_reconfigure::Server<move_base::MoveBaseConfig> *dsrv_;\par
236 \par
237       {\cf18 void} reconfigureCB(move_base::MoveBaseConfig &config, uint32_t level);\par
238 \par
239       move_base::MoveBaseConfig last_config_;\par
240       move_base::MoveBaseConfig default_config_;\par
241       {\cf18 bool} setup_, p_freq_change_, c_freq_change_;\par
242       {\cf18 bool} new_global_plan_;\par
243   \};\par
244 \};\par
245 {\cf21 #endif}\par
246 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_base/src/move_base.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_base/src/move_base.cpp}
{\xe \v move_base/src/move_base.cpp}
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <move_base/move_base.h>}\par
{\f2 #include <move_base_msgs/RecoveryStatus.h>}\par
{\f2 #include <cmath>}\par
{\f2 #include <boost/algorithm/string.hpp>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <geometry_msgs/Twist.h>}\par
{\f2 #include <tf2_geometry_msgs/tf2_geometry_msgs.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid move_base.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__base_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b move_base}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_base/src/move_base_node.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_base/src/move_base_node.cpp}
{\xe \v move_base/src/move_base_node.cpp}
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <move_base/move_base.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid move_base_node.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__base__node_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:move_base_node.cpp}
{\xe \v move_base_node.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_slow_and_clear/include/move_slow_and_clear/move_slow_and_clear.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_slow_and_clear/include/move_slow_and_clear/move_slow_and_clear.h}
{\xe \v move_slow_and_clear/include/move_slow_and_clear/move_slow_and_clear.h}
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <nav_core/recovery_behavior.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <boost/thread.hpp>}\par
{\f2 #include <dynamic_reconfigure/Reconfigure.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid move_slow_and_clear.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__slow__and__clear_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__slow__and__clear_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b move_slow_and_clear::MoveSlowAndClear}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b move_slow_and_clear}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_slow_and_clear.h\par \pard\plain 
{\tc\tcl2 \v move_slow_and_clear/include/move_slow_and_clear/move_slow_and_clear.h}
{\xe \v move_slow_and_clear/include/move_slow_and_clear/move_slow_and_clear.h}
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef MOVE_SLOW_AND_CLEAR_MOVE_SLOW_AND_CLEAR_H_}\par
38 {\cf21 #define MOVE_SLOW_AND_CLEAR_MOVE_SLOW_AND_CLEAR_H_}\par
39 \par
40 {\cf21 #include <ros/ros.h>}\par
41 {\cf21 #include <nav_core/recovery_behavior.h>}\par
42 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
43 {\cf21 #include <boost/thread.hpp>}\par
44 {\cf21 #include <dynamic_reconfigure/Reconfigure.h>}\par
45 \par
46 {\cf17 namespace }move_slow_and_clear \par
47 \{\par
48   {\cf17 class }MoveSlowAndClear : {\cf17 public} nav_core::RecoveryBehavior\par
49   \{\par
50     {\cf17 public}:\par
51       MoveSlowAndClear();\par
52       ~MoveSlowAndClear();\par
53 \par
55       {\cf18 void} initialize (std::string n, tf2_ros::Buffer* tf,\par
56           costmap_2d::Costmap2DROS* global_costmap,\par
57           costmap_2d::Costmap2DROS* local_costmap);\par
58 \par
60       {\cf18 void} runBehavior();\par
61 \par
62     {\cf17 private}:\par
63       {\cf18 void} setRobotSpeed({\cf18 double} trans_speed, {\cf18 double} rot_speed);\par
64       {\cf18 void} distanceCheck({\cf17 const} ros::TimerEvent& e);\par
65       {\cf18 double} getSqDistance();\par
66 \par
67       {\cf18 void} removeSpeedLimit();\par
68 \par
69       ros::NodeHandle private_nh_, planner_nh_;\par
70       costmap_2d::Costmap2DROS* global_costmap_;\par
71       costmap_2d::Costmap2DROS* local_costmap_;\par
72       {\cf18 bool} initialized_;\par
73       {\cf18 double} clearing_distance_, limited_distance_;\par
74       {\cf18 double} limited_trans_speed_, limited_rot_speed_, old_trans_speed_, old_rot_speed_;\par
75       std::string max_trans_param_name_, max_rot_param_name_;\par
76       ros::Timer distance_check_timer_;\par
77       geometry_msgs::PoseStamped speed_limit_pose_;\par
78       boost::thread* remove_limit_thread_;\par
79       boost::mutex mutex_;\par
80       {\cf18 bool} limit_set_;\par
81       ros::ServiceClient planner_dynamic_reconfigure_service_;\par
82   \};\par
83 \};\par
84 \par
85 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
move_slow_and_clear/src/move_slow_and_clear.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v move_slow_and_clear/src/move_slow_and_clear.cpp}
{\xe \v move_slow_and_clear/src/move_slow_and_clear.cpp}
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <move_slow_and_clear/move_slow_and_clear.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <costmap_2d/obstacle_layer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid move_slow_and_clear.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "move__slow__and__clear_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b move_slow_and_clear}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core/include/nav_core/base_global_planner.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/base_global_planner.h}
{\xe \v nav_core/include/nav_core/base_global_planner.h}
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid base_global_planner.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "base__global__planner_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "base__global__planner_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b nav_core::BaseGlobalPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA. navigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'C8\'AB\'BE\'D6\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b nav_core}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_global_planner.h\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/base_global_planner.h}
{\xe \v nav_core/include/nav_core/base_global_planner.h}
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef NAV_CORE_BASE_GLOBAL_PLANNER_H}\par
38 {\cf21 #define NAV_CORE_BASE_GLOBAL_PLANNER_H}\par
39 \par
40 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
41 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
42 \par
43 {\cf17 namespace }nav_core \{\par
48   {\cf17 class }BaseGlobalPlanner\{\par
49     {\cf17 public}:\par
57       {\cf17 virtual} {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start,\par
58           {\cf17 const} geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan) = 0;\par
59 \par
68       {\cf17 virtual} {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start,\par
69                             {\cf17 const} geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan,\par
70                             {\cf18 double}& cost)\par
71       \{\par
72         cost = 0;\par
73         {\cf19 return} makePlan(start, goal, plan);\par
74       \}\par
75 \par
81       {\cf17 virtual} {\cf18 void} initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros) = 0;\par
82 \par
86       {\cf17 virtual} ~BaseGlobalPlanner()\{\}\par
87 \par
88     {\cf17 protected}:\par
89       BaseGlobalPlanner()\{\}\par
90   \};\par
91 \};  {\cf20 // namespace nav_core}\par
92 \par
93 {\cf21 #endif  }{\cf20 // NAV_CORE_BASE_GLOBAL_PLANNER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core/include/nav_core/base_local_planner.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/base_local_planner.h}
{\xe \v nav_core/include/nav_core/base_local_planner.h}
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <geometry_msgs/Twist.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid base_local_planner.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "base__local__planner_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "base__local__planner_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b nav_core::BaseLocalPlanner}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BE\'D6\'B2\'BF\'C2\'B7\'BE\'B6\'B9\'E6\'BB\'AE\'C6\'F7\'B2\'E5\'BC\'FE\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b nav_core}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
base_local_planner.h\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/base_local_planner.h}
{\xe \v nav_core/include/nav_core/base_local_planner.h}
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef NAV_CORE_BASE_LOCAL_PLANNER_H}\par
38 {\cf21 #define NAV_CORE_BASE_LOCAL_PLANNER_H}\par
39 \par
40 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
41 {\cf21 #include <geometry_msgs/Twist.h>}\par
42 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
43 {\cf21 #include <tf2_ros/buffer.h>}\par
44 \par
45 {\cf17 namespace }nav_core \{\par
50   {\cf17 class }BaseLocalPlanner\{\par
51     {\cf17 public}:\par
57       {\cf17 virtual} {\cf18 bool} computeVelocityCommands(geometry_msgs::Twist& cmd_vel) = 0;\par
58 \par
63       {\cf17 virtual} {\cf18 bool} isGoalReached() = 0;\par
64 \par
70       {\cf17 virtual} {\cf18 bool} setPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& plan) = 0;\par
71 \par
78       {\cf17 virtual} {\cf18 void} initialize(std::string name, tf2_ros::Buffer* tf, costmap_2d::Costmap2DROS* costmap_ros) = 0;\par
79 \par
83       {\cf17 virtual} ~BaseLocalPlanner()\{\}\par
84 \par
85     {\cf17 protected}:\par
86       BaseLocalPlanner()\{\}\par
87   \};\par
88 \};  {\cf20 // namespace nav_core}\par
89 \par
90 {\cf21 #endif  }{\cf20 // NAV_CORE_BASE_LOCAL_PLANNER_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core/include/nav_core/parameter_magic.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/parameter_magic.h}
{\xe \v nav_core/include/nav_core/parameter_magic.h}
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "parameter__magic_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b nav_core}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class param_t > param_t {\b nav_core::loadParameterWithDeprecation} (const ros::NodeHandle &nh, const std::string current_name, const std::string old_name, const param_t &default_value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Load a parameter from one of two namespaces. Complain if it uses the old name. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b nav_core::warnRenamedParameter} (const ros::NodeHandle &nh, const std::string current_name, const std::string old_name)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Warn if a parameter exists under a deprecated (and unsupported) name. }{
}\par
}\par}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parameter_magic.h\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/parameter_magic.h}
{\xe \v nav_core/include/nav_core/parameter_magic.h}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2018, Open Source Robotics Foundation}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of OSRF nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: David Lu}\par
36 {\cf20 *********************************************************************/}\par
37 \par
38 {\cf21 #ifndef NAV_CORE_PARAMETER_MAGIC_H}\par
39 {\cf21 #define NAV_CORE_PARAMETER_MAGIC_H}\par
40 \par
41 {\cf17 namespace }nav_core\par
42 \{\par
43 \par
52 {\cf17 template}<{\cf17 class} param_t>\par
53 param_t loadParameterWithDeprecation({\cf17 const} ros::NodeHandle& nh, {\cf17 const} std::string current_name,\par
54                                      {\cf17 const} std::string old_name, {\cf17 const} param_t& default_value)\par
55 \{\par
56   param_t value;\par
57   {\cf19 if} (nh.hasParam(current_name))\par
58   \{\par
59     nh.getParam(current_name, value);\par
60     {\cf19 return} value;\par
61   \}\par
62   {\cf19 if} (nh.hasParam(old_name))\par
63   \{\par
64     ROS_WARN({\cf22 "Parameter %s is deprecated. Please use the name %s instead."}, old_name.c_str(), current_name.c_str());\par
65     nh.getParam(old_name, value);\par
66     {\cf19 return} value;\par
67   \}\par
68   {\cf19 return} default_value;\par
69 \}\par
70 \par
76 {\cf18 void} warnRenamedParameter({\cf17 const} ros::NodeHandle& nh, {\cf17 const} std::string current_name, {\cf17 const} std::string old_name)\par
77 \{\par
78   {\cf19 if} (nh.hasParam(old_name))\par
79   \{\par
80     ROS_WARN({\cf22 "Parameter %s is deprecated (and will not load properly). Use %s instead."}, old_name.c_str(), current_name.c_str());\par
81   \}\par
82 \}\par
83 \par
84 \}  {\cf20 // namespace nav_core}\par
85 \par
86 {\cf21 #endif  }{\cf20 // NAV_CORE_PARAMETER_MAGIC_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
nav_core/include/nav_core/recovery_behavior.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/recovery_behavior.h}
{\xe \v nav_core/include/nav_core/recovery_behavior.h}
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid recovery_behavior.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "recovery__behavior_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "recovery__behavior_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b nav_core::RecoveryBehavior}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'CC\'E1\'B9\'A9\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'B5\'C4\'BD\'D3\'BF\'DA\'A3\'ACnavigation stack\'B5\'F7\'D3\'C3\'B5\'C4\'CB\'F9\'D3\'D0\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'C4\'A3\'BF\'E9\'B6\'BC\'D2\'AA\'CA\'B5\'CF\'D6\'D5\'E2\'B8\'F6\'BD\'D3\'BF\'DA. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b nav_core}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
recovery_behavior.h\par \pard\plain 
{\tc\tcl2 \v nav_core/include/nav_core/recovery_behavior.h}
{\xe \v nav_core/include/nav_core/recovery_behavior.h}
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef NAV_CORE_RECOVERY_BEHAVIOR_H}\par
38 {\cf21 #define NAV_CORE_RECOVERY_BEHAVIOR_H}\par
39 \par
40 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
41 {\cf21 #include <tf2_ros/buffer.h>}\par
42 \par
43 {\cf17 namespace }nav_core \{\par
48   {\cf17 class }RecoveryBehavior\{\par
49     {\cf17 public}:\par
56       {\cf17 virtual} {\cf18 void} initialize(std::string name, tf2_ros::Buffer* tf, costmap_2d::Costmap2DROS* global_costmap, costmap_2d::Costmap2DROS* local_costmap) = 0;\par
57 \par
61       {\cf17 virtual} {\cf18 void} runBehavior() = 0;\par
62 \par
66       {\cf17 virtual} ~RecoveryBehavior()\{\}\par
67 \par
68     {\cf17 protected}:\par
69       RecoveryBehavior()\{\}\par
70   \};\par
71 \};  {\cf20 // namespace nav_core}\par
72 \par
73 {\cf21 #endif  }{\cf20 // NAV_CORE_RECOVERY_BEHAVIOR_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/include/navfn/navfn.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/navfn.h}
{\xe \v navfn/include/navfn/navfn.h}
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <math.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdio.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navfn.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b navfn::NavFn}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navigation function class. Holds buffers for costmap, navfn map.\'B4\'FA\'BC\'DB\'B5\'D8\'CD\'BC\'BA\'CDNavFn\'B5\'D8\'CD\'BC\'CA\'C7\'BB\'F9\'D3\'DA\'CF\'F1\'CB\'D8\'B5\'C4\'A3\'AC\'CB\'FB\'C3\'C7\'B5\'C4\'D4\'AD\'B5\'E3\'D4\'DA\'D7\'F3\'C9\'CF\'B7\'BD\'A3\'ACx \'D6\'E1\'CF\'F2\'D3\'D2\'A3\'ACy \'D6\'E1\'CF\'F2\'CF\'C2 }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COST_UNKNOWN_ROS}\~ 255\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COST_OBS}\~ 254\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COST_OBS_ROS}\~ 253\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COST_NEUTRAL}\~ 50\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COST_FACTOR}\~ 0.8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b COSTTYPE}\~ unsigned char\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b POT_HIGH}\~ 1.0e10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRIORITYBUFSIZE}\~ 10000\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b navfn::create_nav_plan_astar} ({\b COSTTYPE} *costmap, int nx, int ny, int *{\b goal}, int *{\b start}, float *plan, int nplan)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v COST_FACTOR\:navfn.h}
{\xe \v navfn.h\:COST_FACTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COST_FACTOR\~ 0.8}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COST_NEUTRAL\:navfn.h}
{\xe \v navfn.h\:COST_NEUTRAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COST_NEUTRAL\~ 50}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COST_OBS\:navfn.h}
{\xe \v navfn.h\:COST_OBS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COST_OBS\~ 254}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COST_OBS_ROS\:navfn.h}
{\xe \v navfn.h\:COST_OBS_ROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COST_OBS_ROS\~ 253}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COST_UNKNOWN_ROS\:navfn.h}
{\xe \v navfn.h\:COST_UNKNOWN_ROS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COST_UNKNOWN_ROS\~ 255}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v COSTTYPE\:navfn.h}
{\xe \v navfn.h\:COSTTYPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define COSTTYPE\~ unsigned char}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v POT_HIGH\:navfn.h}
{\xe \v navfn.h\:POT_HIGH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define POT_HIGH\~ 1.0e10}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PRIORITYBUFSIZE\:navfn.h}
{\xe \v navfn.h\:PRIORITYBUFSIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRIORITYBUFSIZE\~ 10000}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn.h\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/navfn.h}
{\xe \v navfn/include/navfn/navfn.h}
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 * Software License Agreement (BSD License)}\par
3 {\cf20 *}\par
4 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
5 {\cf20 *  All rights reserved.}\par
6 {\cf20 *}\par
7 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
8 {\cf20 *  modification, are permitted provided that the following conditions}\par
9 {\cf20 *  are met:}\par
10 {\cf20 *}\par
11 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
12 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
13 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
14 {\cf20 *     copyright notice, this list of conditions and the following}\par
15 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
16 {\cf20 *     with the distribution.}\par
17 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
18 {\cf20 *     contributors may be used to endorse or promote products derived}\par
19 {\cf20 *     from this software without specific prior written permission.}\par
20 {\cf20 *}\par
21 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
22 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
23 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
24 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
25 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
26 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
27 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
28 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
29 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
30 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
31 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
32 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
33 {\cf20 *********************************************************************/}\par
34 \par
35 {\cf20 //}\par
36 {\cf20 // Navigation function computation}\par
37 {\cf20 // Uses Dijkstra's method}\par
38 {\cf20 // Modified for Euclidean-distance computation}\par
39 {\cf20 //}\par
40 \par
41 {\cf21 #ifndef _NAVFN_H}\par
42 {\cf21 #define _NAVFN_H}\par
43 \par
44 {\cf21 #include <math.h>}\par
45 {\cf21 #include <stdint.h>}\par
46 {\cf21 #include <string.h>}\par
47 {\cf21 #include <stdio.h>}\par
48 \par
49 {\cf20 // cost defs}\par
50 {\cf21 #define COST_UNKNOWN_ROS 255        }{\cf20 // 255 \'CE\'BB\'D6\'C3\'D0\'C5\'CF\'A2}\par
51 {\cf21 #define COST_OBS 254        }{\cf20 // 254 \'BD\'FB\'D6\'B9\'C7\'F8\'D3\'F2}\par
52 {\cf21 #define COST_OBS_ROS 253    }{\cf20 // 253\'CA\'C7ROS\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF\'B4\'FA\'BC\'DB\'D6\'B5}\par
53 \par
54 {\cf20 // navfn cost values are set to}\par
55 {\cf20 // COST_NEUTRAL + COST_FACTOR * costmap_cost_value.}\par
56 {\cf20 // Incoming costmap cost values are in the range 0 to 252.}\par
57 {\cf20 // With COST_NEUTRAL of 50, the COST_FACTOR needs to be about 0.8 to}\par
58 {\cf20 // ensure the input values are spread evenly over the output range, 50}\par
59 {\cf20 // to 253.  If COST_FACTOR is higher, cost values will have a plateau}\par
60 {\cf20 // around obstacles and the planner will then treat (for example) the}\par
61 {\cf20 // whole width of a narrow hallway as equally undesirable and thus}\par
62 {\cf20 // will not plan paths down the center.}\par
63 \par
64 {\cf21 #define COST_NEUTRAL 50     }{\cf20 // Set this to "open space" value}\par
65 {\cf21 #define COST_FACTOR 0.8     }{\cf20 // Used for translating costs in NavFn::setCostmap()}\par
66 \par
67 {\cf20 // Define the cost type in the case that it is not set. However, this allows}\par
68 {\cf20 // clients to modify it without changing the file. Arguably, it is better to require it to}\par
69 {\cf20 // be defined by a user explicitly}\par
70 {\cf21 #ifndef COSTTYPE}\par
71 {\cf21 #define COSTTYPE unsigned char  }{\cf20 // Whatever is used...}\par
72 {\cf21 #endif}\par
73 \par
74 {\cf20 // potential defs}\par
75 {\cf21 #define POT_HIGH 1.0e10     }{\cf20 // unassigned cell potential}\par
76 \par
77 {\cf20 // priority buffers}\par
78 {\cf21 #define PRIORITYBUFSIZE 10000}\par
79 \par
80 \par
81 {\cf17 namespace }navfn \{\par
96   {\cf18 int} create_nav_plan_astar(COSTTYPE *costmap, {\cf18 int} nx, {\cf18 int} ny,\par
97       {\cf18 int}* goal, {\cf18 int}* start,\par
98       {\cf18 float} *plan, {\cf18 int} nplan);\par
99 \par
100 \par
101 \par
106   {\cf17 class }NavFn\par
107   \{\par
108     {\cf17 public}:\par
114       NavFn({\cf18 int} nx, {\cf18 int} ny);    {\cf20 // \'B5\'D8\'CD\'BC\'B4\'F3\'D0\'A1}\par
115 \par
116       ~NavFn();\par
117 \par
123       {\cf18 void} setNavArr({\cf18 int} nx, {\cf18 int} ny); \par
124       {\cf18 int} nx, ny, ns;       \par
132       {\cf18 void} setCostmap({\cf17 const} COSTTYPE *cmap, {\cf18 bool} isROS={\cf17 true}, {\cf18 bool} allow_unknown = {\cf17 true}); \par
138       {\cf18 bool} calcNavFnAstar();    \par
143       {\cf18 bool} calcNavFnDijkstra({\cf18 bool} atStart = {\cf17 false}); \par
149       {\cf18 float} *getPathX();        \par
155       {\cf18 float} *getPathY();        \par
161       {\cf18 int}   getPathLen();       \par
167       {\cf18 float} getLastPathCost();      \par
170       COSTTYPE *costarr;        \par
171       {\cf18 float}   *potarr;      \par
172       {\cf18 bool}    *pending;     \par
173       {\cf18 int} nobs;         \par
176       {\cf18 int} *pb1, *pb2, *pb3;     \par
177       {\cf18 int} *curP, *nextP, *overP;    \par
178       {\cf18 int} curPe, nextPe, overPe; \par
181       {\cf18 float} curT;           \par
182       {\cf18 float} priInc;         \par
189       {\cf18 void} setGoal({\cf18 int} *goal);\par
190 \par
195       {\cf18 void} setStart({\cf18 int} *start);\par
196 \par
197       {\cf18 int} goal[2];\par
198       {\cf18 int} start[2];\par
204       {\cf18 void} initCost({\cf18 int} k, {\cf18 float} v); \par
212       {\cf18 void} updateCell({\cf18 int} n);   \par
218       {\cf18 void} updateCellAstar({\cf18 int} n);  \par
220       {\cf18 void} setupNavFn({\cf18 bool} keepit = {\cf17 false}); \par
228       {\cf18 bool} propNavFnDijkstra({\cf18 int} cycles, {\cf18 bool} atStart = {\cf17 false}); \par
234       {\cf18 bool} propNavFnAstar({\cf18 int} cycles); \par
237       {\cf18 float} *gradx, *grady;     \par
238       {\cf18 float} *pathx, *pathy;     \par
239       {\cf18 int} npath;            \par
240       {\cf18 int} npathbuf;         \par
242       {\cf18 float} last_path_cost_; \par
250       {\cf18 int} calcPath({\cf18 int} n, {\cf18 int} *st = NULL); \par
252       {\cf18 float} gradCell({\cf18 int} n);    \par
253       {\cf18 float} pathStep;       \par
256       {\cf18 void} display({\cf18 void} fn(NavFn *nav), {\cf18 int} n = 100); \par
257       {\cf18 int} displayInt;       \par
258       void (*displayFn)(NavFn *nav); \par
261       {\cf18 void} savemap({\cf17 const} {\cf18 char} *fname); \par
263   \};\par
264 \};\par
265 \par
266 \par
267 {\cf21 #endif  }{\cf20 // NAVFN}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/include/navfn/navfn_ros.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/navfn_ros.h}
{\xe \v navfn/include/navfn/navfn_ros.h}
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ros/ros.h>}\par
{\f2 #include <navfn/navfn.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <geometry_msgs/PoseStamped.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <nav_msgs/Path.h>}\par
{\f2 #include <vector>}\par
{\f2 #include <nav_core/base_global_planner.h>}\par
{\f2 #include <nav_msgs/GetPlan.h>}\par
{\f2 #include <navfn/potarr_point.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navfn_ros.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn__ros_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn__ros_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b navfn::NavfnROS}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Navfn \'C8\'AB\'BE\'D6\'B9\'E6\'BB\'AE\'C6\'F7\'B5\'C4ROS\'B7\'E2\'D7\'B0\'C0\'E0 }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn_ros.h\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/navfn_ros.h}
{\xe \v navfn/include/navfn/navfn_ros.h}
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef NAVFN_NAVFN_ROS_H_}\par
38 {\cf21 #define NAVFN_NAVFN_ROS_H_}\par
39 \par
40 {\cf21 #include <ros/ros.h>}\par
41 {\cf21 #include <navfn/navfn.h>}\par
42 {\cf21 #include <costmap_2d/costmap_2d.h>}\par
43 {\cf21 #include <geometry_msgs/PoseStamped.h>}\par
44 {\cf21 #include <geometry_msgs/Point.h>}\par
45 {\cf21 #include <nav_msgs/Path.h>}\par
46 {\cf21 #include <vector>}\par
47 {\cf21 #include <nav_core/base_global_planner.h>}\par
48 {\cf21 #include <nav_msgs/GetPlan.h>}\par
49 {\cf21 #include <navfn/potarr_point.h>}\par
50 \par
51 {\cf17 namespace }navfn \{\par
56   {\cf17 class }NavfnROS : {\cf17 public} nav_core::BaseGlobalPlanner \{\par
57     {\cf17 public}:\par
61       NavfnROS();\par
62 \par
68       NavfnROS(std::string name, costmap_2d::Costmap2DROS* costmap_ros);\par
69 \par
76       NavfnROS(std::string name, costmap_2d::Costmap2D* costmap, std::string global_frame);\par
77 \par
83       {\cf18 void} initialize(std::string name, costmap_2d::Costmap2DROS* costmap_ros);\par
84 \par
91       {\cf18 void} initialize(std::string name, costmap_2d::Costmap2D* costmap, std::string global_frame);\par
92 \par
100       {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start,\par
101           {\cf17 const} geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan);\par
102 \par
111       {\cf18 bool} makePlan({\cf17 const} geometry_msgs::PoseStamped& start,\par
112           {\cf17 const} geometry_msgs::PoseStamped& goal, {\cf18 double} tolerance, std::vector<geometry_msgs::PoseStamped>& plan);\par
113 \par
119       {\cf18 bool} computePotential({\cf17 const} geometry_msgs::Point& world_point);\par
120 \par
127       {\cf18 bool} getPlanFromPotential({\cf17 const} geometry_msgs::PoseStamped& goal, std::vector<geometry_msgs::PoseStamped>& plan);\par
128 \par
134       {\cf18 double} getPointPotential({\cf17 const} geometry_msgs::Point& world_point);\par
135 \par
141       {\cf18 bool} validPointPotential({\cf17 const} geometry_msgs::Point& world_point);\par
142 \par
149       {\cf18 bool} validPointPotential({\cf17 const} geometry_msgs::Point& world_point, {\cf18 double} tolerance);\par
150 \par
154       {\cf18 void} publishPlan({\cf17 const} std::vector<geometry_msgs::PoseStamped>& path, {\cf18 double} r, {\cf18 double} g, {\cf18 double} b, {\cf18 double} a);\par
155 \par
156       ~NavfnROS()\{\}\par
157 \par
158       {\cf18 bool} makePlanService(nav_msgs::GetPlan::Request& req, nav_msgs::GetPlan::Response& resp);\par
159 \par
160     {\cf17 protected}:\par
161 \par
165       costmap_2d::Costmap2D* costmap_;\par
166       boost::shared_ptr<NavFn> planner_;\par
167       ros::Publisher plan_pub_;\par
168       ros::Publisher potarr_pub_;\par
169       {\cf18 bool} initialized_, allow_unknown_, visualize_potential_;\par
170 \par
171 \par
172     {\cf17 private}:\par
173       {\cf17 inline} {\cf18 double} sq_distance({\cf17 const} geometry_msgs::PoseStamped& p1, {\cf17 const} geometry_msgs::PoseStamped& p2)\{\par
174         {\cf18 double} dx = p1.pose.position.x - p2.pose.position.x;\par
175         {\cf18 double} dy = p1.pose.position.y - p2.pose.position.y;\par
176         {\cf19 return} dx*dx +dy*dy;\par
177       \}\par
178 \par
179       {\cf18 void} mapToWorld({\cf18 double} mx, {\cf18 double} my, {\cf18 double}& wx, {\cf18 double}& wy);\par
180       {\cf18 void} clearRobotCell({\cf17 const} geometry_msgs::PoseStamped& global_pose, {\cf18 unsigned} {\cf18 int} mx, {\cf18 unsigned} {\cf18 int} my);\par
181       {\cf18 double} planner_window_x_, planner_window_y_, default_tolerance_;\par
182       boost::mutex mutex_;\par
183       ros::ServiceServer make_plan_srv_;\par
184       std::string global_frame_;\par
185   \};\par
186 \};\par
187 \par
188 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/include/navfn/potarr_point.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/potarr_point.h}
{\xe \v navfn/include/navfn/potarr_point.h}
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "potarr__point_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b navfn::PotarrPoint}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
potarr_point.h\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/potarr_point.h}
{\xe \v navfn/include/navfn/potarr_point.h}
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2008, (Simon) Ye Cheng}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 *********************************************************************/}\par
36 \par
37 {\cf21 #ifndef POTARR_POINT_H_}\par
38 {\cf21 #define POTARR_POINT_H_}\par
39 \par
40 {\cf17 namespace }navfn \{\par
41     {\cf17 struct }PotarrPoint \{\par
42         {\cf18 float} x;\par
43         {\cf18 float} y;\par
44         {\cf18 float} z;\par
45         {\cf18 float} pot_value;\par
46     \};\par
47 \}\par
48 \par
49 {\cf21 #endif}\par
50 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/include/navfn/read_pgm_costmap.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/read_pgm_costmap.h}
{\xe \v navfn/include/navfn/read_pgm_costmap.h}
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COSTTYPE} * {\b readPGM} (const char *fname, int *width, int *height, bool raw=false)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v readPGM\:read_pgm_costmap.h}
{\xe \v read_pgm_costmap.h\:readPGM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COSTTYPE} * readPGM (const char *  {\i fname}, int *  {\i width}, int *  {\i height}, bool  {\i raw} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8h_a1116faf9c12b574e1b58a41e9d35a1c2_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8h_a1116faf9c12b574e1b58a41e9d35a1c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
read_pgm_costmap.h\par \pard\plain 
{\tc\tcl2 \v navfn/include/navfn/read_pgm_costmap.h}
{\xe \v navfn/include/navfn/read_pgm_costmap.h}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*}\par
2 {\cf20  * Copyright (c) 2012, Willow Garage, Inc.}\par
3 {\cf20  * All rights reserved.}\par
4 {\cf20  *}\par
5 {\cf20  * Redistribution and use in source and binary forms, with or without}\par
6 {\cf20  * modification, are permitted provided that the following conditions are met:}\par
7 {\cf20  *}\par
8 {\cf20  *     * Redistributions of source code must retain the above copyright}\par
9 {\cf20  *       notice, this list of conditions and the following disclaimer.}\par
10 {\cf20  *     * Redistributions in binary form must reproduce the above copyright}\par
11 {\cf20  *       notice, this list of conditions and the following disclaimer in the}\par
12 {\cf20  *       documentation and/or other materials provided with the distribution.}\par
13 {\cf20  *     * Neither the name of the Willow Garage, Inc. nor the names of its}\par
14 {\cf20  *       contributors may be used to endorse or promote products derived from}\par
15 {\cf20  *       this software without specific prior written permission.}\par
16 {\cf20  *}\par
17 {\cf20  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"}\par
18 {\cf20  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE}\par
19 {\cf20  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE}\par
20 {\cf20  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE}\par
21 {\cf20  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR}\par
22 {\cf20  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF}\par
23 {\cf20  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS}\par
24 {\cf20  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN}\par
25 {\cf20  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)}\par
26 {\cf20  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
27 {\cf20  * POSSIBILITY OF SUCH DAMAGE.}\par
28 {\cf20  */}\par
29 {\cf21 #ifndef READ_PGM_COSTMAP_H}\par
30 {\cf21 #define READ_PGM_COSTMAP_H}\par
31 \par
32 {\cf20 // <raw> is true for ROS-generated raw cost maps}\par
33 COSTTYPE *readPGM({\cf17 const} {\cf18 char} *fname, {\cf18 int} *width, {\cf18 int} *height, {\cf18 bool} raw = {\cf17 false});\par
34 \par
35 {\cf21 #endif }{\cf20 // READ_PGM_COSTMAP_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/navfn.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/navfn.cpp}
{\xe \v navfn/src/navfn.cpp}
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <navfn/navfn.h>}\par
{\f2 #include <ros/console.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navfn.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b push_cur}({\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b push_next}({\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b push_over}({\b n})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INVSQRT2}\~ 0.707106781\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INVSQRT2}\~ 0.707106781\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b navfn::create_nav_plan_astar} ({\b COSTTYPE} *costmap, int nx, int ny, int *{\b goal}, int *{\b start}, float *plan, int nplan)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v INVSQRT2\:navfn.cpp}
{\xe \v navfn.cpp\:INVSQRT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INVSQRT2\~ 0.707106781}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INVSQRT2\:navfn.cpp}
{\xe \v navfn.cpp\:INVSQRT2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INVSQRT2\~ 0.707106781}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v push_cur\:navfn.cpp}
{\xe \v navfn.cpp\:push_cur}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define push_cur( {\b n})}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ {\cf19 if} (n>=0 && n<ns && !pending[n] && \\\par
    costarr[n]<COST_OBS && curPe<PRIORITYBUFSIZE) \\\par
  \{ curP[curPe++]=n; pending[n]={\cf17 true}; \}\}\par
}
}
{\xe \v push_next\:navfn.cpp}
{\xe \v navfn.cpp\:push_next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define push_next( {\b n})}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ {\cf19 if} (n>=0 && n<ns && !pending[n] && \\\par
    costarr[n]<COST_OBS && nextPe<PRIORITYBUFSIZE) \\\par
  \{ nextP[nextPe++]=n; pending[n]={\cf17 true}; \}\}\par
}
}
{\xe \v push_over\:navfn.cpp}
{\xe \v navfn.cpp\:push_over}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define push_over( {\b n})}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b \'D6\'B5:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{ {\cf19 if} (n>=0 && n<ns && !pending[n] && \\\par
    costarr[n]<COST_OBS && overPe<PRIORITYBUFSIZE) \\\par
  \{ overP[overPe++]=n; pending[n]={\cf17 true}; \}\}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/navfn_node.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/navfn_node.cpp}
{\xe \v navfn/src/navfn_node.cpp}
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <navfn/navfn_ros.h>}\par
{\f2 #include <navfn/MakeNavPlan.h>}\par
{\f2 #include <boost/shared_ptr.hpp>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_ros/transform_listener.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navfn_node.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn__node_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b navfn::NavfnWithCostmap}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:navfn_node.cpp}
{\xe \v navfn_node.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/navfn_ros.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/navfn_ros.cpp}
{\xe \v navfn/src/navfn_ros.cpp}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <navfn/navfn_ros.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <costmap_2d/cost_values.h>}\par
{\f2 #include <costmap_2d/costmap_2d.h>}\par
{\f2 #include <sensor_msgs/point_cloud2_iterator.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navfn_ros.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navfn__ros_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/navtest/navtest.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/navtest/navtest.cpp}
{\xe \v navfn/src/navtest/navtest.cpp}
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <navfn/navfn.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <string>}\par
{\f2 #include <fstream>}\par
{\f2 #include "navwin.h"}\par
{\f2 #include <pgm.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navtest.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b unknown_gray}\~ 0xCC\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b get_ms} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b dispPot} ({\b NavFn} *nav)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COSTTYPE} * {\b readPGM} (const char *fname, int *width, int *height, bool raw=false)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setcostobs} ({\b COSTTYPE} *cmap, int {\b n}, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setcostunk} ({\b COSTTYPE} *cmap, int {\b n}, int w)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b goal} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b start} [2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NavWin} * {\b nwin}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static int {\b CS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v unknown_gray\:navtest.cpp}
{\xe \v navtest.cpp\:unknown_gray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define unknown_gray\~ 0xCC}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v dispPot\:navtest.cpp}
{\xe \v navtest.cpp\:dispPot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void dispPot ({\b NavFn} *  {\i nav})}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_a467f6e28bdb16df250528f1daa41751f_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_a467f6e28bdb16df250528f1daa41751f_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v get_ms\:navtest.cpp}
{\xe \v navtest.cpp\:get_ms}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double get_ms ()}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_ab1a8ed925b36720afb4df2ed29d1fb0c_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v main\:navtest.cpp}
{\xe \v navtest.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_a3c04138a5bfe5d72780bb7e82a18e627_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readPGM\:navtest.cpp}
{\xe \v navtest.cpp\:readPGM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COSTTYPE} * readPGM (const char *  {\i fname}, int *  {\i width}, int *  {\i height}, bool  {\i raw} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_a1116faf9c12b574e1b58a41e9d35a1c2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setcostobs\:navtest.cpp}
{\xe \v navtest.cpp\:setcostobs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setcostobs ({\b COSTTYPE} *  {\i cmap}, int  {\i n}, int  {\i w})}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_ace863d8925ca590c1f53eb63ff29a680_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setcostunk\:navtest.cpp}
{\xe \v navtest.cpp\:setcostunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setcostunk ({\b COSTTYPE} *  {\i cmap}, int  {\i n}, int  {\i w})}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navtest_8cpp_a0be847867182c4112b953ae0f7ee5a5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'B1\'E4\'C1\'BF\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v CS\:navtest.cpp}
{\xe \v navtest.cpp\:CS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CS{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v goal\:navtest.cpp}
{\xe \v navtest.cpp\:goal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int goal[2]}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nwin\:navtest.cpp}
{\xe \v navtest.cpp\:nwin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NavWin}* nwin}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v start\:navtest.cpp}
{\xe \v navtest.cpp\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int start[2]}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/navtest/navwin.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/navtest/navwin.cpp}
{\xe \v navfn/src/navtest/navwin.cpp}
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string.h>}\par
{\f2 #include "navwin.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navwin.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navwin_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/navtest/navwin.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/navtest/navwin.h}
{\xe \v navfn/src/navtest/navwin.h}
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <sys/time.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <FL/Fl.H>}\par
{\f2 #include <FL/Fl_Double_Window.H>}\par
{\f2 #include <FL/Fl_Group.H>}\par
{\f2 #include <FL/Fl_Window.H>}\par
{\f2 #include <FL/fl_draw.H>}\par
{\f2 #include <navfn/navfn.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid navwin.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navwin_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "navwin_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b navfn::NavWin}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b navfn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navwin.h\par \pard\plain 
{\tc\tcl2 \v navfn/src/navtest/navwin.h}
{\xe \v navfn/src/navtest/navwin.h}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 //}\par
2 {\cf20 // drawing fns for nav fn}\par
3 {\cf20 // }\par
4 \par
5 {\cf21 #include <sys/time.h>}\par
6 {\cf21 #include <stdio.h>}\par
7 {\cf21 #include <stdlib.h>}\par
8 \par
9 {\cf21 #include <FL/Fl.H>}\par
10 {\cf21 #include <FL/Fl_Double_Window.H>}\par
11 {\cf21 #include <FL/Fl_Group.H>}\par
12 {\cf21 #include <FL/Fl_Window.H>}\par
13 {\cf21 #include <FL/fl_draw.H>}\par
14 \par
15 {\cf21 #include <navfn/navfn.h>}\par
16 \par
17 {\cf17 namespace }navfn \{\par
18   {\cf17 class }NavWin \par
19     : {\cf17 public} Fl_Double_Window\par
20   \{\par
21     {\cf17 public}:\par
22       NavWin({\cf18 int} w, {\cf18 int} h, {\cf17 const} {\cf18 char} *name);\par
23       ~NavWin();\par
24 \par
25       {\cf18 int} nw,nh;            {\cf20 // width and height of image}\par
26       {\cf18 int} pw,ph;            {\cf20 // width and height of pot field}\par
27       {\cf18 int} dec, inc;         {\cf20 // decimation or expansion for display}\par
28 \par
29       {\cf18 float} maxval;         {\cf20 // max potential value}\par
30       {\cf18 void} drawPot(NavFn *nav); {\cf20 // draw everything...}\par
31 \par
32       {\cf18 void} drawOverlay();\par
33 \par
34       uchar *im;            {\cf20 // image for drawing}\par
35       {\cf18 int} *pc, *pn, *po;        {\cf20 // priority buffers}\par
36       {\cf18 int} pce, pne, poe;        {\cf20 // buffer sizes}\par
37       {\cf18 int} goal[2];\par
38       {\cf18 int} start[2];\par
39       {\cf18 int} *path;            {\cf20 // path buffer, cell indices}\par
40       {\cf18 int} pathlen;          {\cf20 // how many we have}\par
41       {\cf18 int} pathbuflen;       {\cf20 // how big the path buffer is}\par
42 \par
43       {\cf18 void} draw();          {\cf20 // draw the image}\par
44   \};\par
45 \};\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/src/read_pgm_costmap.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/src/read_pgm_costmap.cpp}
{\xe \v navfn/src/read_pgm_costmap.cpp}
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <navfn/navfn.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include <pgm.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid read_pgm_costmap.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b unknown_gray}\~ 0xCC\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setcostobs} ({\b COSTTYPE} *cmap, int {\b n}, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setcostunk} ({\b COSTTYPE} *cmap, int {\b n}, int w)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COSTTYPE} * {\b readPGM} (const char *fname, int *width, int *height, bool raw)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'EA\'B6\'A8\'D2\'E5\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v unknown_gray\:read_pgm_costmap.cpp}
{\xe \v read_pgm_costmap.cpp\:unknown_gray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define unknown_gray\~ 0xCC}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v readPGM\:read_pgm_costmap.cpp}
{\xe \v read_pgm_costmap.cpp\:readPGM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COSTTYPE} * readPGM (const char *  {\i fname}, int *  {\i width}, int *  {\i height}, bool  {\i raw})}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8cpp_a94ea5bf3c2cba2446229df61476b1a8d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8cpp_a94ea5bf3c2cba2446229df61476b1a8d_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setcostobs\:read_pgm_costmap.cpp}
{\xe \v read_pgm_costmap.cpp\:setcostobs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setcostobs ({\b COSTTYPE} *  {\i cmap}, int  {\i n}, int  {\i w})}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8cpp_ace863d8925ca590c1f53eb63ff29a680_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setcostunk\:read_pgm_costmap.cpp}
{\xe \v read_pgm_costmap.cpp\:setcostunk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void setcostunk ({\b COSTTYPE} *  {\i cmap}, int  {\i n}, int  {\i w})}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "read__pgm__costmap_8cpp_a0be847867182c4112b953ae0f7ee5a5a_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navfn/test/path_calc_test.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navfn/test/path_calc_test.cpp}
{\xe \v navfn/test/path_calc_test.cpp}
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <ros/package.h>}\par
{\f2 #include <gtest/gtest.h>}\par
{\f2 #include <navfn/navfn.h>}\par
{\f2 #include <navfn/read_pgm_costmap.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid path_calc_test.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path__calc__test_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b navfn::NavFn} * {\b make_willow_nav} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_neighborhood_of_last_path_entry} ({\b navfn::NavFn} *nav)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (PathCalc, oscillate_in_pinch_point)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (PathCalc, easy_nav_should_always_work)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:path_calc_test.cpp}
{\xe \v path_calc_test.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v make_willow_nav\:path_calc_test.cpp}
{\xe \v path_calc_test.cpp\:make_willow_nav}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b navfn::NavFn} * make_willow_nav ()}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path__calc__test_8cpp_a18cc150909ae06555089aa404a19e402_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path__calc__test_8cpp_a18cc150909ae06555089aa404a19e402_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v print_neighborhood_of_last_path_entry\:path_calc_test.cpp}
{\xe \v path_calc_test.cpp\:print_neighborhood_of_last_path_entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void print_neighborhood_of_last_path_entry ({\b navfn::NavFn} *  {\i nav})}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'D5\'E2\'CA\'C7\'D5\'E2\'B8\'F6\'BA\'AF\'CA\'FD\'B5\'C4\'B5\'F7\'D3\'C3\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path__calc__test_8cpp_a6749b84faebaa0441121ca2c5aad49e2_icgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:path_calc_test.cpp}
{\xe \v path_calc_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (PathCalc , easy_nav_should_always_work )}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path__calc__test_8cpp_ab32111499167a908430b40cf7abc8c36_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v TEST\:path_calc_test.cpp}
{\xe \v path_calc_test.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (PathCalc , oscillate_in_pinch_point )}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "path__calc__test_8cpp_a1cc564604d7ce869e4a03dcb9c17c68a_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
navigation\'D1\'A7\'CF\'B0.md \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v navigation\'D1\'A7\'CF\'B0.md}
{\xe \v navigation\'D1\'A7\'CF\'B0.md}
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rotate_recovery/include/rotate_recovery/rotate_recovery.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v rotate_recovery/include/rotate_recovery/rotate_recovery.h}
{\xe \v rotate_recovery/include/rotate_recovery/rotate_recovery.h}
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <nav_core/recovery_behavior.h>}\par
{\f2 #include <costmap_2d/costmap_2d_ros.h>}\par
{\f2 #include <tf2_ros/buffer.h>}\par
{\f2 #include <base_local_planner/costmap_model.h>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid rotate_recovery.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rotate__recovery_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rotate__recovery_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b rotate_recovery::RotateRecovery}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'BB\'D6\'B8\'B4\'D0\'D0\'CE\'AA\'BB\'E1\'C8\'C3\'BB\'FA\'C6\'F7\'C8\'CB\'B6\'A8\'B5\'E3\'D0\'FD\'D7\'AA\'D2\'BB\'C8\'A6\'A3\'AC\'B3\'A2\'CA\'D4\'C7\'E5\'B3\'FD\'B5\'F7\'D6\'DC\'CE\'A7\'B5\'C4\'D5\'CF\'B0\'AD\'CE\'EF }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b rotate_recovery}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rotate_recovery.h\par \pard\plain 
{\tc\tcl2 \v rotate_recovery/include/rotate_recovery/rotate_recovery.h}
{\xe \v rotate_recovery/include/rotate_recovery/rotate_recovery.h}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20 *}\par
3 {\cf20 * Software License Agreement (BSD License)}\par
4 {\cf20 *}\par
5 {\cf20 *  Copyright (c) 2009, Willow Garage, Inc.}\par
6 {\cf20 *  All rights reserved.}\par
7 {\cf20 *}\par
8 {\cf20 *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20 *  modification, are permitted provided that the following conditions}\par
10 {\cf20 *  are met:}\par
11 {\cf20 *}\par
12 {\cf20 *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20 *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20 *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20 *     copyright notice, this list of conditions and the following}\par
16 {\cf20 *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20 *     with the distribution.}\par
18 {\cf20 *   * Neither the name of Willow Garage, Inc. nor the names of its}\par
19 {\cf20 *     contributors may be used to endorse or promote products derived}\par
20 {\cf20 *     from this software without specific prior written permission.}\par
21 {\cf20 *}\par
22 {\cf20 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20 *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20 *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20 *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20 *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20 *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20 *}\par
35 {\cf20 * Author: Eitan Marder-Eppstein}\par
36 {\cf20 *********************************************************************/}\par
37 {\cf21 #ifndef ROTATE_RECOVERY_ROTATE_RECOVERY_H}\par
38 {\cf21 #define ROTATE_RECOVERY_ROTATE_RECOVERY_H}\par
39 {\cf21 #include <nav_core/recovery_behavior.h>}\par
40 {\cf21 #include <costmap_2d/costmap_2d_ros.h>}\par
41 {\cf21 #include <tf2_ros/buffer.h>}\par
42 {\cf21 #include <base_local_planner/costmap_model.h>}\par
43 {\cf21 #include <string>}\par
44 \par
45 {\cf17 namespace }rotate_recovery\par
46 \{\par
51 {\cf17 class }RotateRecovery : {\cf17 public} nav_core::RecoveryBehavior\par
52 \{\par
53 {\cf17 public}:\par
57   RotateRecovery();\par
58 \par
66   {\cf18 void} initialize(std::string name, tf2_ros::Buffer*,\par
67                   costmap_2d::Costmap2DROS*, costmap_2d::Costmap2DROS* local_costmap);\par
68 \par
72   {\cf18 void} runBehavior();\par
73 \par
77   ~RotateRecovery();\par
78 \par
79 {\cf17 private}:\par
80   costmap_2d::Costmap2DROS* local_costmap_;\par
81   {\cf18 bool} initialized_;\par
82   {\cf18 double} sim_granularity_, min_rotational_vel_, max_rotational_vel_, acc_lim_th_, tolerance_, frequency_;\par
83   base_local_planner::CostmapModel* world_model_;\par
84 \};\par
85 \};  {\cf20 // namespace rotate_recovery}\par
86 {\cf21 #endif  }{\cf20 // ROTATE_RECOVERY_ROTATE_RECOVERY_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
rotate_recovery/src/rotate_recovery.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v rotate_recovery/src/rotate_recovery.cpp}
{\xe \v rotate_recovery/src/rotate_recovery.cpp}
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <rotate_recovery/rotate_recovery.h>}\par
{\f2 #include <pluginlib/class_list_macros.h>}\par
{\f2 #include <nav_core/parameter_magic.h>}\par
{\f2 #include <tf2/utils.h>}\par
{\f2 #include <ros/ros.h>}\par
{\f2 #include <geometry_msgs/Twist.h>}\par
{\f2 #include <geometry_msgs/Point.h>}\par
{\f2 #include <angles/angles.h>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <string>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid rotate_recovery.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "rotate__recovery_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b rotate_recovery}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid/include/voxel_grid/voxel_grid.h \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid/include/voxel_grid/voxel_grid.h}
{\xe \v voxel_grid/include/voxel_grid/voxel_grid.h}
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include <algorithm>}\par
{\f2 #include <ros/console.h>}\par
{\f2 #include <ros/assert.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_grid.h \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid_8h__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid \'B4\'CB\'CD\'BC\'D5\'B9\'CA\'BE\'B8\'C3\'CE\'C4\'BC\'FE\'D6\'B1\'BD\'D3\'BB\'F2\'BC\'E4\'BD\'D3\'B5\'C4\'B1\'BB\'C4\'C4\'D0\'A9\'CE\'C4\'BC\'FE\'D2\'FD\'D3\'C3\'C1\'CB:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid_8h__dep__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C0\'E0\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b voxel_grid::VoxelGrid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b voxel_grid::VoxelGrid::MarkVoxel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b voxel_grid::VoxelGrid::ClearVoxel}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b voxel_grid::VoxelGrid::ClearVoxelInMap}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b voxel_grid::VoxelGrid::GridOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b voxel_grid::VoxelGrid::ZOffset}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b voxel_grid}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'B6\'BE\'D9\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b voxel_grid::VoxelStatus} \{ {\b voxel_grid::FREE} = 0
, {\b voxel_grid::UNKNOWN} = 1
, {\b voxel_grid::MARKED} = 2
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid.h\par \pard\plain 
{\tc\tcl2 \v voxel_grid/include/voxel_grid/voxel_grid.h}
{\xe \v voxel_grid/include/voxel_grid/voxel_grid.h}
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\'E4\'AF\'C0\'C0\'B8\'C3\'CE\'C4\'BC\'FE\'B5\'C4\'CE\'C4\'B5\'B5.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf20 /*********************************************************************}\par
2 {\cf20  *}\par
3 {\cf20  * Software License Agreement (BSD License)}\par
4 {\cf20  *}\par
5 {\cf20  *  Copyright (c) 2008, Willow Garage, Inc.}\par
6 {\cf20  *  All rights reserved.}\par
7 {\cf20  *}\par
8 {\cf20  *  Redistribution and use in source and binary forms, with or without}\par
9 {\cf20  *  modification, are permitted provided that the following conditions}\par
10 {\cf20  *  are met:}\par
11 {\cf20  *}\par
12 {\cf20  *   * Redistributions of source code must retain the above copyright}\par
13 {\cf20  *     notice, this list of conditions and the following disclaimer.}\par
14 {\cf20  *   * Redistributions in binary form must reproduce the above}\par
15 {\cf20  *     copyright notice, this list of conditions and the following}\par
16 {\cf20  *     disclaimer in the documentation and/or other materials provided}\par
17 {\cf20  *     with the distribution.}\par
18 {\cf20  *   * Neither the name of the Willow Garage nor the names of its}\par
19 {\cf20  *     contributors may be used to endorse or promote products derived}\par
20 {\cf20  *     from this software without specific prior written permission.}\par
21 {\cf20  *}\par
22 {\cf20  *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS}\par
23 {\cf20  *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT}\par
24 {\cf20  *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS}\par
25 {\cf20  *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE}\par
26 {\cf20  *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,}\par
27 {\cf20  *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,}\par
28 {\cf20  *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;}\par
29 {\cf20  *  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER}\par
30 {\cf20  *  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT}\par
31 {\cf20  *  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN}\par
32 {\cf20  *  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE}\par
33 {\cf20  *  POSSIBILITY OF SUCH DAMAGE.}\par
34 {\cf20  *}\par
35 {\cf20  * Author: Eitan Marder-Eppstein}\par
36 {\cf20  *********************************************************************/}\par
37 {\cf21 #ifndef VOXEL_GRID_VOXEL_GRID_H}\par
38 {\cf21 #define VOXEL_GRID_VOXEL_GRID_H}\par
39 \par
40 {\cf21 #include <stdio.h>}\par
41 {\cf21 #include <string.h>}\par
42 {\cf21 #include <stdlib.h>}\par
43 {\cf21 #include <stdint.h>}\par
44 {\cf21 #include <math.h>}\par
45 {\cf21 #include <limits.h>}\par
46 {\cf21 #include <algorithm>}\par
47 {\cf21 #include <ros/console.h>}\par
48 {\cf21 #include <ros/assert.h>}\par
49 \par
56 {\cf17 namespace }voxel_grid\par
57 \{\par
58 \par
59 {\cf17 enum} VoxelStatus \{\par
60   FREE = 0,\par
61   UNKNOWN = 1,\par
62   MARKED = 2,\par
63 \};\par
64 \par
65 {\cf17 class }VoxelGrid\par
66 \{\par
67 {\cf17 public}:\par
74   VoxelGrid({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y, {\cf18 unsigned} {\cf18 int} size_z);\par
75 \par
76   ~VoxelGrid();\par
77 \par
84   {\cf18 void} resize({\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y, {\cf18 unsigned} {\cf18 int} size_z);\par
85 \par
86   {\cf18 void} reset();\par
87   uint32_t* getData() \{ {\cf19 return} data_; \}\par
88 \par
89   {\cf17 inline} {\cf18 void} markVoxel({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} z)\par
90   \{\par
91     {\cf19 if} (x >= size_x_ || y >= size_y_ || z >= size_z_)\par
92     \{\par
93       ROS_DEBUG({\cf22 "Error, voxel out of bounds.\\n"});\par
94       {\cf19 return};\par
95     \}\par
96     uint32_t full_mask = ((uint32_t)1<<z<<16) | (1<<z);\par
97     data_[y * size_x_ + x] |= full_mask; {\cf20 //clear unknown and mark cell}\par
98   \}\par
99 \par
100   {\cf17 inline} {\cf18 bool} markVoxelInMap({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} z, {\cf18 unsigned} {\cf18 int} marked_threshold)\par
101   \{\par
102     {\cf19 if} (x >= size_x_ || y >= size_y_ || z >= size_z_)\par
103     \{\par
104       ROS_DEBUG({\cf22 "Error, voxel out of bounds.\\n"});\par
105       {\cf19 return} {\cf17 false};\par
106     \}\par
107 \par
108     {\cf18 int} index = y * size_x_ + x;\par
109     uint32_t* col = &data_[index];\par
110     uint32_t full_mask = ((uint32_t)1<<z<<16) | (1<<z);\par
111     *col |= full_mask; {\cf20 //clear unknown and mark cell}\par
112 \par
113     {\cf18 unsigned} {\cf18 int} marked_bits = *col>>16;\par
114 \par
115     {\cf20 //make sure the number of bits in each is below our thesholds}\par
116     {\cf19 return} !bitsBelowThreshold(marked_bits, marked_threshold);\par
117   \}\par
118 \par
119   {\cf17 inline} {\cf18 void} clearVoxel({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} z)\par
120   \{\par
121     {\cf19 if} (x >= size_x_ || y >= size_y_ || z >= size_z_)\par
122     \{\par
123       ROS_DEBUG({\cf22 "Error, voxel out of bounds.\\n"});\par
124       {\cf19 return};\par
125     \}\par
126     uint32_t full_mask = ((uint32_t)1<<z<<16) | (1<<z);\par
127     data_[y * size_x_ + x] &= ~(full_mask); {\cf20 //clear unknown and clear cell}\par
128   \}\par
129 \par
130   {\cf17 inline} {\cf18 void} clearVoxelColumn({\cf18 unsigned} {\cf18 int} index)\par
131   \{\par
132     ROS_ASSERT(index < size_x_ * size_y_);\par
133     data_[index] = 0;\par
134   \}\par
135 \par
136   {\cf17 inline} {\cf18 void} clearVoxelInMap({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} z)\par
137   \{\par
138     {\cf19 if}(x >= size_x_ || y >= size_y_ || z >= size_z_)\par
139     \{\par
140       ROS_DEBUG({\cf22 "Error, voxel out of bounds.\\n"});\par
141       {\cf19 return};\par
142     \}\par
143     {\cf18 int} index = y * size_x_ + x;\par
144     uint32_t* col = &data_[index];\par
145     uint32_t full_mask = ((uint32_t)1<<z<<16) | (1<<z);\par
146     *col &= ~(full_mask); {\cf20 //clear unknown and clear cell}\par
147 \par
148     {\cf18 unsigned} {\cf18 int} unknown_bits = uint16_t(*col>>16) ^ uint16_t(*col);\par
149     {\cf18 unsigned} {\cf18 int} marked_bits = *col>>16;\par
150 \par
151     {\cf20 //make sure the number of bits in each is below our thesholds}\par
152     {\cf19 if} (bitsBelowThreshold(unknown_bits, 1) && bitsBelowThreshold(marked_bits, 1))\par
153     \{\par
154       costmap[index] = 0;\par
155     \}\par
156   \}\par
157 \par
158   {\cf17 inline} {\cf18 bool} bitsBelowThreshold({\cf18 unsigned} {\cf18 int} n, {\cf18 unsigned} {\cf18 int} bit_threshold)\par
159   \{\par
160     {\cf18 unsigned} {\cf18 int} bit_count;\par
161     {\cf19 for} (bit_count = 0; n;)\par
162     \{\par
163       ++bit_count;\par
164       {\cf19 if} (bit_count > bit_threshold)\par
165       \{\par
166         {\cf19 return} {\cf17 false};\par
167       \}\par
168       n &= n - 1; {\cf20 //clear the least significant bit set}\par
169     \}\par
170     {\cf19 return} {\cf17 true};\par
171   \}\par
172 \par
173   {\cf17 static} {\cf17 inline} {\cf18 unsigned} {\cf18 int} numBits({\cf18 unsigned} {\cf18 int} n)\par
174   \{\par
175     {\cf18 unsigned} {\cf18 int} bit_count;\par
176     {\cf19 for} (bit_count = 0; n; ++bit_count)\par
177     \{\par
178       n &= n - 1; {\cf20 //clear the least significant bit set}\par
179     \}\par
180     {\cf19 return} bit_count;\par
181   \}\par
182 \par
183   {\cf17 static} VoxelStatus getVoxel(\par
184     {\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} z,\par
185     {\cf18 unsigned} {\cf18 int} size_x, {\cf18 unsigned} {\cf18 int} size_y, {\cf18 unsigned} {\cf18 int} size_z, {\cf17 const} uint32_t* data)\par
186   \{\par
187     {\cf19 if} (x >= size_x || y >= size_y || z >= size_z)\par
188     \{\par
189       ROS_DEBUG({\cf22 "Error, voxel out of bounds. (%d, %d, %d)\\n"}, x, y, z);\par
190       {\cf19 return} UNKNOWN;\par
191     \}\par
192     uint32_t full_mask = ((uint32_t)1<<z<<16) | (1<<z);\par
193     uint32_t result = data[y * size_x + x] & full_mask;\par
194     {\cf18 unsigned} {\cf18 int} bits = numBits(result);\par
195 \par
196     {\cf20 // known marked: 11 = 2 bits, unknown: 01 = 1 bit, known free: 00 = 0 bits}\par
197     {\cf19 if} (bits < 2)\par
198     \{\par
199       {\cf19 if} (bits < 1)\par
200       \{\par
201         {\cf19 return} FREE;\par
202       \}\par
203       {\cf19 return} UNKNOWN;\par
204     \}\par
205     {\cf19 return} MARKED;\par
206   \}\par
207 \par
208   {\cf18 void} markVoxelLine({\cf18 double} x0, {\cf18 double} y0, {\cf18 double} z0, {\cf18 double} x1, {\cf18 double} y1, {\cf18 double} z1, {\cf18 unsigned} {\cf18 int} max_length = UINT_MAX);\par
209   {\cf18 void} clearVoxelLine({\cf18 double} x0, {\cf18 double} y0, {\cf18 double} z0, {\cf18 double} x1, {\cf18 double} y1, {\cf18 double} z1, {\cf18 unsigned} {\cf18 int} max_length = UINT_MAX);\par
210   {\cf18 void} clearVoxelLineInMap({\cf18 double} x0, {\cf18 double} y0, {\cf18 double} z0, {\cf18 double} x1, {\cf18 double} y1, {\cf18 double} z1, {\cf18 unsigned} {\cf18 char} *map_2d,\par
211                            {\cf18 unsigned} {\cf18 int} unknown_threshold, {\cf18 unsigned} {\cf18 int} mark_threshold,\par
212                            {\cf18 unsigned} {\cf18 char} free_cost = 0, {\cf18 unsigned} {\cf18 char} unknown_cost = 255, {\cf18 unsigned} {\cf18 int} max_length = UINT_MAX);\par
213 \par
214   VoxelStatus getVoxel({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y, {\cf18 unsigned} {\cf18 int} z);\par
215 \par
216   {\cf20 //Are there any obstacles at that (x, y) location in the grid?}\par
217   VoxelStatus getVoxelColumn({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y,\par
218                              {\cf18 unsigned} {\cf18 int} unknown_threshold = 0, {\cf18 unsigned} {\cf18 int} marked_threshold = 0);\par
219 \par
220   {\cf18 void} printVoxelGrid();\par
221   {\cf18 void} printColumnGrid();\par
222   {\cf18 unsigned} {\cf18 int} sizeX();\par
223   {\cf18 unsigned} {\cf18 int} sizeY();\par
224   {\cf18 unsigned} {\cf18 int} sizeZ();\par
225 \par
226   {\cf17 template} <{\cf17 class} ActionType>\par
227   {\cf17 inline} {\cf18 void} raytraceLine(\par
228     ActionType at, {\cf18 double} x0, {\cf18 double} y0, {\cf18 double} z0,\par
229     {\cf18 double} x1, {\cf18 double} y1, {\cf18 double} z1, {\cf18 unsigned} {\cf18 int} max_length = UINT_MAX)\par
230   \{\par
231     {\cf18 int} dx = int(x1) - int(x0);\par
232     {\cf18 int} dy = int(y1) - int(y0);\par
233     {\cf18 int} dz = int(z1) - int(z0);\par
234 \par
235     {\cf18 unsigned} {\cf18 int} abs_dx = abs(dx);\par
236     {\cf18 unsigned} {\cf18 int} abs_dy = abs(dy);\par
237     {\cf18 unsigned} {\cf18 int} abs_dz = abs(dz);\par
238 \par
239     {\cf18 int} offset_dx = sign(dx);\par
240     {\cf18 int} offset_dy = sign(dy) * size_x_;\par
241     {\cf18 int} offset_dz = sign(dz);\par
242 \par
243     {\cf18 unsigned} {\cf18 int} z_mask = ((1 << 16) | 1) << ({\cf18 unsigned} int)z0;\par
244     {\cf18 unsigned} {\cf18 int} offset = ({\cf18 unsigned} int)y0 * size_x_ + ({\cf18 unsigned} {\cf18 int})x0;\par
245 \par
246     GridOffset grid_off(offset);\par
247     ZOffset z_off(z_mask);\par
248 \par
249     {\cf20 //we need to chose how much to scale our dominant dimension, based on the maximum length of the line}\par
250     {\cf18 double} dist = sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1) + (z0 - z1) * (z0 - z1));\par
251     {\cf18 double} scale = std::min(1.0,  max_length / dist);\par
252 \par
253     {\cf20 //is x dominant}\par
254     {\cf19 if} (abs_dx >= max(abs_dy, abs_dz))\par
255     \{\par
256       {\cf18 int} error_y = abs_dx / 2;\par
257       {\cf18 int} error_z = abs_dx / 2;\par
258 \par
259       bresenham3D(at, grid_off, grid_off, z_off, abs_dx, abs_dy, abs_dz, error_y, error_z, offset_dx, offset_dy, offset_dz, offset, z_mask, ({\cf18 unsigned} {\cf18 int})(scale * abs_dx));\par
260       {\cf19 return};\par
261     \}\par
262 \par
263     {\cf20 //y is dominant}\par
264     {\cf19 if} (abs_dy >= abs_dz)\par
265     \{\par
266       {\cf18 int} error_x = abs_dy / 2;\par
267       {\cf18 int} error_z = abs_dy / 2;\par
268 \par
269       bresenham3D(at, grid_off, grid_off, z_off, abs_dy, abs_dx, abs_dz, error_x, error_z, offset_dy, offset_dx, offset_dz, offset, z_mask, ({\cf18 unsigned} {\cf18 int})(scale * abs_dy));\par
270       {\cf19 return};\par
271     \}\par
272 \par
273     {\cf20 //otherwise, z is dominant}\par
274     {\cf18 int} error_x = abs_dz / 2;\par
275     {\cf18 int} error_y = abs_dz / 2;\par
276 \par
277     bresenham3D(at, z_off, grid_off, grid_off, abs_dz, abs_dx, abs_dy, error_x, error_y, offset_dz, offset_dx, offset_dy, offset, z_mask, ({\cf18 unsigned} {\cf18 int})(scale * abs_dz));\par
278   \}\par
279 \par
280 {\cf17 private}:\par
281   {\cf20 //the real work is done here... 3D bresenham implementation}\par
282   {\cf17 template} <{\cf17 class} ActionType, {\cf17 class} OffA, {\cf17 class} OffB, {\cf17 class} OffC>\par
283   {\cf17 inline} {\cf18 void} bresenham3D(\par
284     ActionType at, OffA off_a, OffB off_b, OffC off_c,\par
285     {\cf18 unsigned} {\cf18 int} abs_da, {\cf18 unsigned} {\cf18 int} abs_db, {\cf18 unsigned} {\cf18 int} abs_dc,\par
286     {\cf18 int} error_b, {\cf18 int} error_c, {\cf18 int} offset_a, {\cf18 int} offset_b, {\cf18 int} offset_c, {\cf18 unsigned} {\cf18 int} &offset,\par
287     {\cf18 unsigned} {\cf18 int} &z_mask, {\cf18 unsigned} {\cf18 int} max_length = UINT_MAX)\par
288   \{\par
289     {\cf18 unsigned} {\cf18 int} end = std::min(max_length, abs_da);\par
290     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < end; ++i)\par
291     \{\par
292       at(offset, z_mask);\par
293       off_a(offset_a);\par
294       error_b += abs_db;\par
295       error_c += abs_dc;\par
296       {\cf19 if} (({\cf18 unsigned} {\cf18 int})error_b >= abs_da)\par
297       \{\par
298         off_b(offset_b);\par
299         error_b -= abs_da;\par
300       \}\par
301       {\cf19 if} (({\cf18 unsigned} {\cf18 int})error_c >= abs_da)\par
302       \{\par
303         off_c(offset_c);\par
304         error_c -= abs_da;\par
305       \}\par
306     \}\par
307     at(offset, z_mask);\par
308   \}\par
309 \par
310   {\cf17 inline} {\cf18 int} sign({\cf18 int} i)\par
311   \{\par
312     {\cf19 return} i > 0 ? 1 : -1;\par
313   \}\par
314 \par
315   {\cf17 inline} {\cf18 unsigned} {\cf18 int} max({\cf18 unsigned} {\cf18 int} x, {\cf18 unsigned} {\cf18 int} y)\par
316   \{\par
317     {\cf19 return} x > y ? x : y;\par
318   \}\par
319 \par
320   {\cf18 unsigned} {\cf18 int} size_x_, size_y_, size_z_;\par
321   uint32_t *data_;\par
322   {\cf18 unsigned} {\cf18 char} *costmap;\par
323 \par
324   {\cf20 //Aren't functors so much fun... used to recreate the Bresenham macro Eric wrote in the original version, but in "proper" c++}\par
325   {\cf17 class }MarkVoxel\par
326   \{\par
327   {\cf17 public}:\par
328     MarkVoxel(uint32_t* data): data_(data)\{\}\par
329     {\cf17 inline} {\cf18 void} operator()({\cf18 unsigned} {\cf18 int} offset, {\cf18 unsigned} {\cf18 int} z_mask)\par
330     \{\par
331       data_[offset] |= z_mask; {\cf20 //clear unknown and mark cell}\par
332     \}\par
333   {\cf17 private}:\par
334     uint32_t* data_;\par
335   \};\par
336 \par
337   {\cf17 class }ClearVoxel\par
338   \{\par
339   {\cf17 public}:\par
340     ClearVoxel(uint32_t* data): data_(data)\{\}\par
341     {\cf17 inline} {\cf18 void} operator()({\cf18 unsigned} {\cf18 int} offset, {\cf18 unsigned} {\cf18 int} z_mask)\par
342     \{\par
343       data_[offset] &= ~(z_mask); {\cf20 //clear unknown and clear cell}\par
344     \}\par
345   {\cf17 private}:\par
346     uint32_t* data_;\par
347   \};\par
348 \par
349   {\cf17 class }ClearVoxelInMap\par
350   \{\par
351   {\cf17 public}:\par
352     ClearVoxelInMap(\par
353       uint32_t* data, {\cf18 unsigned} {\cf18 char} *costmap,\par
354       {\cf18 unsigned} {\cf18 int} unknown_clear_threshold, {\cf18 unsigned} {\cf18 int} marked_clear_threshold,\par
355       {\cf18 unsigned} {\cf18 char} free_cost = 0, {\cf18 unsigned} {\cf18 char} unknown_cost = 255): data_(data), costmap_(costmap),\par
356       unknown_clear_threshold_(unknown_clear_threshold), marked_clear_threshold_(marked_clear_threshold),\par
357       free_cost_(free_cost), unknown_cost_(unknown_cost)\par
358     \{\par
359     \}\par
360 \par
361     {\cf17 inline} {\cf18 void} operator()({\cf18 unsigned} {\cf18 int} offset, {\cf18 unsigned} {\cf18 int} z_mask)\par
362     \{\par
363       uint32_t* col = &data_[offset];\par
364       *col &= ~(z_mask); {\cf20 //clear unknown and clear cell}\par
365 \par
366       {\cf18 unsigned} {\cf18 int} unknown_bits = uint16_t(*col>>16) ^ uint16_t(*col);\par
367       {\cf18 unsigned} {\cf18 int} marked_bits = *col>>16;\par
368 \par
369       {\cf20 //make sure the number of bits in each is below our thesholds}\par
370       {\cf19 if} (bitsBelowThreshold(marked_bits, marked_clear_threshold_))\par
371       \{\par
372         {\cf19 if} (bitsBelowThreshold(unknown_bits, unknown_clear_threshold_))\par
373         \{\par
374           costmap_[offset] = free_cost_;\par
375         \}\par
376         {\cf19 else}\par
377         \{\par
378           costmap_[offset] = unknown_cost_;\par
379         \}\par
380       \}\par
381     \}\par
382   {\cf17 private}:\par
383     {\cf17 inline} {\cf18 bool} bitsBelowThreshold({\cf18 unsigned} {\cf18 int} n, {\cf18 unsigned} {\cf18 int} bit_threshold)\par
384     \{\par
385       {\cf18 unsigned} {\cf18 int} bit_count;\par
386       {\cf19 for} (bit_count = 0; n;)\par
387       \{\par
388         ++bit_count;\par
389         {\cf19 if} (bit_count > bit_threshold)\par
390         \{\par
391           {\cf19 return} {\cf17 false};\par
392         \}\par
393         n &= n - 1; {\cf20 //clear the least significant bit set}\par
394       \}\par
395       {\cf19 return} {\cf17 true};\par
396     \}\par
397 \par
398     uint32_t* data_;\par
399     {\cf18 unsigned} {\cf18 char} *costmap_;\par
400     {\cf18 unsigned} {\cf18 int} unknown_clear_threshold_, marked_clear_threshold_;\par
401     {\cf18 unsigned} {\cf18 char} free_cost_, unknown_cost_;\par
402   \};\par
403 \par
404   {\cf17 class }GridOffset\par
405   \{\par
406   {\cf17 public}:\par
407     GridOffset({\cf18 unsigned} {\cf18 int} &offset) : offset_(offset) \{\}\par
408     {\cf17 inline} {\cf18 void} operator()({\cf18 int} offset_val)\par
409     \{\par
410       offset_ += offset_val;\par
411     \}\par
412   {\cf17 private}:\par
413     {\cf18 unsigned} {\cf18 int} &offset_;\par
414   \};\par
415 \par
416   {\cf17 class }ZOffset\par
417   \{\par
418   {\cf17 public}:\par
419     ZOffset({\cf18 unsigned} {\cf18 int} &z_mask) : z_mask_(z_mask) \{\}\par
420     {\cf17 inline} {\cf18 void} operator()({\cf18 int} offset_val)\par
421     \{\par
422       offset_val > 0 ? z_mask_ <<= 1 : z_mask_ >>= 1;\par
423     \}\par
424   {\cf17 private}:\par
425     {\cf18 unsigned} {\cf18 int} & z_mask_;\par
426   \};\par
427 \};\par
428 \par
429 \}  {\cf20 // namespace voxel_grid}\par
430 \par
431 {\cf21 #endif  }{\cf20 // VOXEL_GRID_VOXEL_GRID_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid/src/voxel_grid.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid/src/voxel_grid.cpp}
{\xe \v voxel_grid/src/voxel_grid.cpp}
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <voxel_grid/voxel_grid.h>}\par
{\f2 #include <ros/console.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_grid.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'C3\'FC\'C3\'FB\'BF\'D5\'BC\'E4\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b voxel_grid}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
voxel_grid/test/voxel_grid_tests.cpp \'CE\'C4\'BC\'FE\'B2\'CE\'BF\'BC\par \pard\plain 
{\tc\tcl2 \v voxel_grid/test/voxel_grid_tests.cpp}
{\xe \v voxel_grid/test/voxel_grid_tests.cpp}
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <voxel_grid/voxel_grid.h>}\par
{\f2 #include <gtest/gtest.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid voxel_grid_tests.cpp \'B5\'C4\'D2\'FD\'D3\'C3(Include)\'B9\'D8\'CF\'B5\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid__tests_8cpp__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TEST} (voxel_grid, basicMarkingAndClearing)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} (int argc, char **argv)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
\'BA\'AF\'CA\'FD\'CB\'B5\'C3\'F7\par
\pard\plain 
{\xe \v main\:voxel_grid_tests.cpp}
{\xe \v voxel_grid_tests.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main (int  {\i argc}, char **  {\i argv})}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEST\:voxel_grid_tests.cpp}
{\xe \v voxel_grid_tests.cpp\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TEST (voxel_grid , basicMarkingAndClearing )}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\'BA\'AF\'CA\'FD\'B5\'F7\'D3\'C3\'CD\'BC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "voxel__grid__tests_8cpp_a4ed1e65f04eb231a04beb7c3cd79983d_cgraph.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \'CB\'F7\'D2\'FD\par 
\pard\plain 
{\tc \v \'CB\'F7\'D2\'FD}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
